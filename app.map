{"version":3,"file":"app.js","mappings":"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","sources":["webpack://@begemode/vue-ngx-datatable/webpack/runtime/chunk loaded","webpack://@begemode/vue-ngx-datatable/./demo/app.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/basic-auto.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/basic-fixed.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/bootstrap.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/contextmenu.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/css.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/dark-theme.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/dynamic-height.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/filter.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/footer.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/fullscreen.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/inline.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/live.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/multiple.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/row-detail.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/row-grouping.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/row-grouping.custom.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/scrolling.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/tabs.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/virtual.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/bootstrap.ts","webpack://@begemode/vue-ngx-datatable/./demo/columns/column-flex.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/columns/column-force.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/columns/column-reorder.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/columns/column-standard.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/columns/column-toggle.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/columns/pinning.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/mock-server-results-service.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/model/corporate-employee.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/model/page.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/model/paged-data.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/paging-client.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/paging-scrolling-novirtualization.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/paging-server.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/paging-virtual.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-before-select-check.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-cell.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-chkbox-checked.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-chkbox-template.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-chkbox.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-disabled.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-multi-click.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-multi.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-single.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/sorting/sorting-client.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/sorting/sorting-comparator.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/sorting/sorting-default.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/sorting/sorting-server.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/summary/summary-row-inline-html.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/summary/summary-row-server-paging.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/summary/summary-row-simple.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/templates/template-dom.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/templates/template-obj.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/tree/client-tree.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/tree/fullscreen.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-cell.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row-wrapper.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/body.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/datatable.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/responsive.component.vue?7eb2","webpack://@begemode/vue-ngx-datatable/./demo/paging/scrolling-server.component.vue?8260","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-group-header.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row-detail.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/progress-bar.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/scroller.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/selection.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/summary/summary-row.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/columns/column.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/footer/footer.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/footer/pager.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/header/header-cell.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/header/header.component.ts","webpack://@begemode/vue-ngx-datatable/./src/directives/draggable.directive.ts","webpack://@begemode/vue-ngx-datatable/./src/directives/long-press.directive.ts","webpack://@begemode/vue-ngx-datatable/./src/directives/resizeable.directive.ts","webpack://@begemode/vue-ngx-datatable/./src/directives/visibility.directive.ts","webpack://@begemode/vue-ngx-datatable/./src/services/dimensions-helper.service.ts","webpack://@begemode/vue-ngx-datatable/./src/services/scrollbar-helper.service.ts","webpack://@begemode/vue-ngx-datatable/./src/types/check.type.ts","webpack://@begemode/vue-ngx-datatable/./src/types/column-mode.type.ts","webpack://@begemode/vue-ngx-datatable/./src/types/contextmenu.type.ts","webpack://@begemode/vue-ngx-datatable/./src/types/selection.type.ts","webpack://@begemode/vue-ngx-datatable/./src/types/sort-direction.type.ts","webpack://@begemode/vue-ngx-datatable/./src/types/sort.type.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/camel-case.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/column-helper.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/column-prop-getters.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/column.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/equal.array.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/id.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/keys.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/math.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/prefixes.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/row-height-cache.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/sort.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/throttle.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/translate.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/tree.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/responsive.component.vue","webpack://@begemode/vue-ngx-datatable/./demo/paging/scrolling-server.component.vue","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-cell.component.vue","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row-wrapper.component.vue","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row.component.vue","webpack://@begemode/vue-ngx-datatable/./src/components/body/body.component.vue","webpack://@begemode/vue-ngx-datatable/./src/components/datatable.component.vue","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-cell.component.ts?0f5f","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row-wrapper.component.ts?9522","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row.component.ts?3dd3","webpack://@begemode/vue-ngx-datatable/./src/components/body/body.component.ts?b1ab","webpack://@begemode/vue-ngx-datatable/./src/components/datatable.component.ts?564a","webpack://@begemode/vue-ngx-datatable/./demo/basic/responsive.component.vue?450e","webpack://@begemode/vue-ngx-datatable/./demo/paging/scrolling-server.component.vue?6b18","webpack://@begemode/vue-ngx-datatable/./demo/basic/responsive.component.vue?b90e","webpack://@begemode/vue-ngx-datatable/./demo/paging/scrolling-server.component.vue?04fc","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-cell.component.html","webpack://@begemode/vue-ngx-datatable/./src/components/body/body.component.html","webpack://@begemode/vue-ngx-datatable/./src/components/datatable.component.html","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row-wrapper.component.vue?ba7e","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row.component.vue?ea87","webpack://@begemode/vue-ngx-datatable/webpack/bootstrap","webpack://@begemode/vue-ngx-datatable/webpack/runtime/compat get default export","webpack://@begemode/vue-ngx-datatable/webpack/runtime/define property getters","webpack://@begemode/vue-ngx-datatable/webpack/runtime/global","webpack://@begemode/vue-ngx-datatable/webpack/runtime/hasOwnProperty shorthand","webpack://@begemode/vue-ngx-datatable/webpack/runtime/make namespace object","webpack://@begemode/vue-ngx-datatable/webpack/runtime/jsonp chunk loading","webpack://@begemode/vue-ngx-datatable/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { Component, Vue, Watch } from 'vue-property-decorator';\r\nimport '../src/themes/material.scss';\r\nimport '../src/themes/dark.scss';\r\nimport '../src/themes/bootstrap.scss';\r\nimport { FullScreenComponent } from './basic/fullscreen.component';\r\nimport BasicAutoComponent from './basic/basic-auto.component';\r\nimport BasicFixedComponent from './basic/basic-fixed.component';\r\nimport ClientPagingComponent from './paging/paging-client.component';\r\nimport VirtualPagingComponent from './paging/paging-virtual.component';\r\nimport VirtualScrollComponent from './basic/virtual.component';\r\nimport FilterBarComponent from './basic/filter.component';\r\nimport SingleSelectionComponent from './selection/selection-single.component';\r\nimport MultiSelectionComponent from './selection/selection-multi.component';\r\nimport MultiClickSelectionComponent from './selection/selection-multi-click.component';\r\nimport DynamicHeightComponent from './basic/dynamic-height.component';\r\nimport DefaultSortingComponent from './sorting/sorting-default.component';\r\nimport ClientSortingComponent from './sorting/sorting-client.component';\r\nimport SortingComparatorComponent from './sorting/sorting-comparator.component';\r\nimport ServerSortingComponent from './sorting/sorting-server.component';\r\nimport HorzVertScrolling from './basic/scrolling.component';\r\nimport ClientTreeComponent from './tree/client-tree.component';\r\nimport FullScreenTreeComponent from './tree/fullscreen.component';\r\nimport CheckboxSelectionComponent from './selection/selection-chkbox.component';\r\nimport CheckNoSelectionComponent from './selection/selection-chkbox-checked.component';\r\nimport MultiDisableSelectionComponent from './selection/selection-disabled.component';\r\nimport BeforeSelectionCheckComponent from './selection/selection-before-select-check.component';\r\nimport CustomCheckboxSelectionComponent from './selection/selection-chkbox-template.component';\r\nimport CellSelectionComponent from './selection/selection-cell.component';\r\nimport ColumnReorderComponent from './columns/column-reorder.component';\r\nimport ContextMenuDemoComponent from './basic/contextmenu.component';\r\nimport ColumnToggleComponent from './columns/column-toggle.component';\r\nimport ColumnStandardComponent from './columns/column-standard.component';\r\nimport ColumnForceComponent from './columns/column-force.component';\r\nimport ColumnFlexComponent from './columns/column-flex.component';\r\nimport ColumnPinningComponent from './columns/pinning.component';\r\nimport SummaryRowSimpleComponent from './summary/summary-row-simple.component';\r\nimport RowGroupingComponent from './basic/row-grouping.component';\r\nimport RowGroupingCustomComponent from './basic/row-grouping.custom.component';\r\nimport RowDetailsComponent from './basic/row-detail.component';\r\nimport MultipleTablesComponent from './basic/multiple.component';\r\nimport TabsDemoComponent from './basic/tabs.component';\r\nimport LiveDataComponent from './basic/live.component';\r\nimport InlineEditComponent from './basic/inline.component';\r\nimport RowCssComponent from './basic/css.component';\r\nimport FooterDemoComponent from './basic/footer.component';\r\nimport ResponsiveComponent from './basic/responsive.component.vue';\r\nimport ServerScrollingComponent from './paging/scrolling-server.component.vue';\r\nimport ServerPagingComponent from './paging/paging-server.component';\r\nimport PagingScrollingNoVirtualizationComponent from './paging/paging-scrolling-novirtualization.component';\r\nimport InlineTemplatesComponent from './templates/template-dom.component';\r\nimport TemplateRefTemplatesComponent from './templates/template-obj.component';\r\nimport BootstrapThemeComponent from './basic/bootstrap.component';\r\nimport DarkThemeComponent from './basic/dark-theme.component';\r\nimport SummaryRowServerPagingComponent from './summary/summary-row-server-paging.component';\r\nimport SummaryRowInlineHtmlComponent from './summary/summary-row-inline-html.component';\r\n\r\n@Component({\r\n  components: {\r\n    'basic-auto-demo': BasicAutoComponent,\r\n    'full-screen-demo': FullScreenComponent,\r\n    'basic-fixed-demo': BasicFixedComponent,\r\n    'client-paging-demo': ClientPagingComponent,\r\n    'virtual-paging-demo': VirtualPagingComponent,\r\n    'virtual-scroll-demo': VirtualScrollComponent,\r\n    'filter-demo': FilterBarComponent,\r\n    'single-selection-demo': SingleSelectionComponent,\r\n    'multi-selection-demo': MultiSelectionComponent,\r\n    'multi-click-selection-demo': MultiClickSelectionComponent,\r\n    'dynamic-height-demo': DynamicHeightComponent,\r\n    'default-sorting-demo': DefaultSortingComponent,\r\n    'client-sorting-demo': ClientSortingComponent,\r\n    'comparator-sorting-demo': SortingComparatorComponent,\r\n    'server-sorting-demo': ServerSortingComponent,\r\n    'horz-vert-scrolling-demo': HorzVertScrolling,\r\n    'client-side-tree-demo': ClientTreeComponent,\r\n    'full-screen-tree-demo': FullScreenTreeComponent,\r\n    'chkbox-selection-demo': CheckboxSelectionComponent,\r\n    'chkbox-no-selection-demo': CheckNoSelectionComponent,\r\n    'multidisable-selection-demo': MultiDisableSelectionComponent,\r\n    'before-selection-check-demo': BeforeSelectionCheckComponent,\r\n    'chkbox-selection-template-demo': CustomCheckboxSelectionComponent,\r\n    'cell-selection-demo': CellSelectionComponent,\r\n    'column-reorder-demo': ColumnReorderComponent,\r\n    'contextmenu-demo': ContextMenuDemoComponent,\r\n    'column-toggle-demo': ColumnToggleComponent,\r\n    'column-standard-demo': ColumnStandardComponent,\r\n    'column-force-demo': ColumnForceComponent,\r\n    'column-flex-demo': ColumnFlexComponent,\r\n    'column-pinning-demo': ColumnPinningComponent,\r\n    'summary-row-simple-demo': SummaryRowSimpleComponent,\r\n    'row-grouping-demo': RowGroupingComponent,\r\n    'row-grouping-custom-demo': RowGroupingCustomComponent,\r\n    'row-details-demo': RowDetailsComponent,\r\n    'multiple-tables-demo': MultipleTablesComponent,\r\n    'tabs-demo': TabsDemoComponent,\r\n    'live-data-demo': LiveDataComponent,\r\n    'inline-edit-demo': InlineEditComponent,\r\n    'row-css-demo': RowCssComponent,\r\n    'footer-demo': FooterDemoComponent,\r\n    'responsive-demo': ResponsiveComponent,\r\n    'server-scrolling-demo': ServerScrollingComponent,\r\n    'server-paging-demo': ServerPagingComponent,\r\n    'paging-scrolling-novirtualization-demo': PagingScrollingNoVirtualizationComponent,\r\n    'inline-templates-demo': InlineTemplatesComponent,\r\n    'template-ref-demo': TemplateRefTemplatesComponent,\r\n    'basic-bootstrap-theme-demo': BootstrapThemeComponent,\r\n    'basic-dark-theme-demo': DarkThemeComponent,\r\n    'summary-row-server-paging-demo': SummaryRowServerPagingComponent,\r\n    'summary-row-inline-html': SummaryRowInlineHtmlComponent,\r\n  },\r\n  template: `\r\n    <div :class=\"classObject\" style=\"height:100%;\">\r\n      <nav>\r\n        <h3>vue-ngx-datatable <small>({{version}})</small></h3>\r\n        <ul class=\"main-ul\">\r\n          <!--<li>\r\n            <h4>Documentation</h4>\r\n            <ul>\r\n              <li>\r\n                <a href=\"https://swimlane.gitbooks.io/ngx-datatable/content/\" target=\"_black\">Online</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://www.gitbook.com/download/pdf/book/swimlane/ngx-datatable\" target=\"_black\">PDF</a>\r\n              </li>\r\n            </ul>\r\n          </li> -->\r\n          <li>\r\n            <h4>Basic</h4>\r\n            <ul>\r\n              <li><a href=\"#virtual-scroll\" @click=\"state='virtual-scroll'\">10k Rows</a></li>\r\n              <li><a href=\"#full-screen\" @click=\"state='full-screen'\">Full Screen</a></li>\r\n              <li><a href=\"#inline-edit\" @click=\"state='inline-edit'\">Inline Editing</a></li>\r\n              <li><a href=\"#horz-vert-scrolling\" @click=\"state='horz-vert-scrolling'\">Horz/Vert Scrolling</a></li>\r\n              <li><a href=\"#multiple-tables\" @click=\"state='multiple-tables'\">Multiple Tables</a></li>\r\n              <li><a href=\"#filter\" @click=\"state='filter'\">Filtering</a></li>\r\n              <li><a href=\"#hidden\" @click=\"state='hidden'\">Hidden On Load</a></li>\r\n              <li><a href=\"#live\" @click=\"state='live'\">Live Data</a></li>\r\n              <!-- <li><a href=\"#rx\" @click=\"state='rx'\">RxJS</a></li> -->\r\n              <li><a href=\"#contextmenu\" @click=\"state='contextmenu'\">Context Menu</a></li>\r\n              <li><a href=\"#css\" @click=\"state='css'\">CSS Classes</a></li>\r\n              <li><a href=\"#footer\" @click=\"state='footer'\">Footer Template</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Themes</h4>\r\n            <ul>\r\n              <li><a href=\"#dark\" @click=\"state='dark'\">Dark theme</a></li>\r\n              <li><a href=\"#bootstrap\" @click=\"state='bootstrap'\">Bootstrap theme</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Tree</h4>\r\n            <ul>\r\n              <li><a href=\"#fullscreen-tree\" @click=\"state='fullscreen-tree'\">Full screen Tree</a></li>\r\n              <li><a href=\"#client-tree\" @click=\"state='client-tree'\">Client Side Tree</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Rows</h4>\r\n            <ul>\r\n              <li><a href=\"#row-grouping\" @click=\"state='row-grouping'\">Row Grouping</a></li>\r\n              <li><a href=\"#row-grouping-custom\" @click=\"state='row-grouping-custom'\">Row Grouping With Custom Styles</a></li>\r\n              <li><a href=\"#\" @click=\"state=''\">Fluid Row Height</a></li>\r\n              <li><a href=\"#basic-fixed\" @click=\"state='basic-fixed'\">Fixed Row Height</a></li>\r\n              <li><a href=\"#dynamic\" @click=\"state='dynamic'\">Dynamic Row Height</a></li>\r\n              <li><a href=\"#row-details\" @click=\"state='row-details'\">Row Detail</a></li>\r\n              <li><a href=\"#responsive\" @click=\"state='responsive'\">Responsive</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Paging</h4>\r\n            <ul>\r\n              <li><a href=\"#client-paging\" @click=\"state='client-paging'\">Client-side</a></li>\r\n              <li><a href=\"#server-paging\" @click=\"state='server-paging'\">Server-side</a></li>\r\n              <li><a href=\"#paging-scrolling-novirtualization\" @click=\"state='paging-scrolling-novirtualization'\">Scrolling no virtual</a></li>\r\n              <li><a href=\"#server-scrolling\" @click=\"state='server-scrolling'\">Scrolling server-side</a></li>\r\n              <li><a href=\"#virtual-paging\" @click=\"state='virtual-paging'\">Virtual server-side</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Sorting</h4>\r\n            <ul>\r\n              <li><a href=\"#client-sorting\" @click=\"state='client-sorting'\">Client-side</a></li>\r\n              <li><a href=\"#default-sorting\" @click=\"state='default-sorting'\">Default sort</a></li>\r\n              <li><a href=\"#server-sorting\" @click=\"state='server-sorting'\">Server-side</a></li>\r\n              <li><a href=\"#comparator-sorting\" @click=\"state='comparator-sorting'\">Comparator</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Selection</h4>\r\n            <ul>\r\n              <li><a href=\"#cell-selection\" @click=\"state='cell-selection'\">Cell</a></li>\r\n              <li><a href=\"#single-selection\" @click=\"state='single-selection'\">Single Row</a></li>\r\n              <li><a href=\"#multi-selection\" @click=\"state='multi-selection'\">Multi Row</a></li>\r\n              <li><a href=\"#multi-click-selection\" @click=\"state='multi-click-selection'\">Multi Click Row</a></li>\r\n              <li><a href=\"#multidisable-selection\" @click=\"state='multidisable-selection'\">Disable Callback</a></li>\r\n              <li><a href=\"#before-selection-check\" @click=\"state='before-selection-check'\">Before Select Row Check Callback</a></li>\r\n              <li><a href=\"#chkbox-selection\" @click=\"state='chkbox-selection'\">Checkbox</a></li>\r\n              <li><a href=\"#chkbox-no-selection\" @click=\"state='chkbox-no-selection'\">Checkbox in 'no selection rows' mode</a></li>\r\n              <li><a href=\"#chkbox-selection-template\" @click=\"state='chkbox-selection-template'\">Custom Checkbox</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Templates</h4>\r\n            <ul>\r\n              <li><a href=\"#inline\" @click=\"state='inline'\">Inline</a></li>\r\n              <!-- <li><a href=\"#templateref\" @click=\"state='templateref'\">TemplateRef</a></li> -->\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Column</h4>\r\n            <ul>\r\n              <li><a href=\"#flex\" @click=\"state='flex'\">Flex</a></li>\r\n              <li><a href=\"#toggle\" @click=\"state='toggle'\">Toggling</a></li>\r\n              <li><a href=\"#fixed\" @click=\"state='fixed'\">Fixed</a></li>\r\n              <li><a href=\"#force\" @click=\"state='force'\">Force</a></li>\r\n              <li><a href=\"#pinning\" @click=\"state='pinning'\">Pinning</a></li>\r\n              <li><a href=\"#reorder\" @click=\"state='reorder'\">Reorder</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Summary Row</h4>\r\n            <ul>\r\n              <li><a href=\"#simple-summary\" @click=\"state='simple-summary'\">Simple</a></li>\r\n              <!-- <li><a href=\"#custom-template-summary\" @click=\"state='custom-template-summary'\">Custom Template</a></li> -->\r\n              <li><a href=\"#paging-summary\" @click=\"state='paging-summary'\">Server-side paging</a></li>\r\n              <li><a href=\"#inline-html-summary\" @click=\"state='inline-html-summary'\">Inline HTML</a></li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <content>\r\n        <!-- Basic -->\r\n        <basic-auto-demo v-if=\"!state\"></basic-auto-demo>\r\n        <full-screen-demo v-if=\"state === 'full-screen'\"></full-screen-demo>\r\n        <basic-fixed-demo v-if=\"state === 'basic-fixed'\"></basic-fixed-demo>\r\n        <virtual-scroll-demo v-if=\"state === 'virtual-scroll'\"></virtual-scroll-demo>\r\n        <filter-demo v-if=\"state === 'filter'\"></filter-demo>\r\n        <dynamic-height-demo v-if=\"state === 'dynamic'\"></dynamic-height-demo>\r\n        <horz-vert-scrolling-demo v-if=\"state === 'horz-vert-scrolling'\"></horz-vert-scrolling-demo>\r\n        <contextmenu-demo v-if=\"state === 'contextmenu'\"></contextmenu-demo>\r\n\r\n        <row-details-demo v-if=\"state === 'row-details'\"></row-details-demo>\r\n        <multiple-tables-demo v-if=\"state === 'multiple-tables'\"></multiple-tables-demo>\r\n        <tabs-demo v-if=\"state === 'hidden'\"></tabs-demo>\r\n        <live-data-demo v-if=\"state === 'live'\"></live-data-demo>\r\n        <inline-edit-demo v-if=\"state === 'inline-edit'\"></inline-edit-demo>\r\n        <row-css-demo v-if=\"state === 'css'\"></row-css-demo>\r\n        <footer-demo v-if=\"state === 'footer'\"></footer-demo>\r\n        <responsive-demo v-if=\"state === 'responsive'\"></responsive-demo>\r\n        <!-- \r\n        <rx-demo v-if=\"state === 'rx'\"></rx-demo>\r\n         -->\r\n\r\n        <!-- Themes -->\r\n        <basic-dark-theme-demo v-if=\"state === 'dark'\"></basic-dark-theme-demo>\r\n        <basic-bootstrap-theme-demo  v-if=\"state === 'bootstrap'\"></basic-bootstrap-theme-demo>\r\n\r\n        <!-- Tree -->\r\n        <full-screen-tree-demo v-if=\"state === 'fullscreen-tree'\"></full-screen-tree-demo>\r\n        <client-side-tree-demo v-if=\"state === 'client-tree'\"></client-side-tree-demo>\r\n\r\n        <!-- Paging -->\r\n        <client-paging-demo v-if=\"state === 'client-paging'\"></client-paging-demo>\r\n        <virtual-paging-demo v-if=\"state === 'virtual-paging'\"></virtual-paging-demo>\r\n        <row-grouping-demo v-if=\"state === 'row-grouping'\"></row-grouping-demo>\r\n        <row-grouping-custom-demo v-if=\"state === 'row-grouping-custom'\"></row-grouping-custom-demo>\r\n        <server-scrolling-demo v-if=\"state === 'server-scrolling'\"></server-scrolling-demo>\r\n        <server-paging-demo v-if=\"state === 'server-paging'\"></server-paging-demo>\r\n        <paging-scrolling-novirtualization-demo v-if=\"state === 'paging-scrolling-novirtualization'\">\r\n        </paging-scrolling-novirtualization-demo>\r\n\r\n        <!-- Sorting -->\r\n        <default-sorting-demo v-if=\"state === 'default-sorting'\"></default-sorting-demo>\r\n        <client-sorting-demo v-if=\"state === 'client-sorting'\"></client-sorting-demo>\r\n        <comparator-sorting-demo v-if=\"state === 'comparator-sorting'\"></comparator-sorting-demo>\r\n        <server-sorting-demo v-if=\"state === 'server-sorting'\"></server-sorting-demo>\r\n\r\n        <!-- Selection -->\r\n        <single-selection-demo v-if=\"state === 'single-selection'\"></single-selection-demo>\r\n        <multi-selection-demo v-if=\"state === 'multi-selection'\"></multi-selection-demo>\r\n        <multi-click-selection-demo v-if=\"state === 'multi-click-selection'\"></multi-click-selection-demo>\r\n        <chkbox-selection-demo v-if=\"state === 'chkbox-selection'\"></chkbox-selection-demo>\r\n        <chkbox-no-selection-demo v-if=\"state === 'chkbox-no-selection'\"></chkbox-no-selection-demo>\r\n        <multidisable-selection-demo v-if=\"state === 'multidisable-selection'\"></multidisable-selection-demo>\r\n        <before-selection-check-demo v-if=\"state === 'before-selection-check'\"></before-selection-check-demo>\r\n        <chkbox-selection-template-demo v-if=\"state === 'chkbox-selection-template'\"></chkbox-selection-template-demo> \r\n        <cell-selection-demo v-if=\"state === 'cell-selection'\"></cell-selection-demo>\r\n\r\n        <!-- Templates -->\r\n        <!-- <template-ref-demo v-if=\"state === 'templateref'\"></template-ref-demo> -->\r\n        <inline-templates-demo v-if=\"state === 'inline'\"></inline-templates-demo>\r\n\r\n        <!-- Columns -->\r\n        <column-reorder-demo v-if=\"state === 'reorder'\"></column-reorder-demo>\r\n        <column-toggle-demo v-if=\"state === 'toggle'\"></column-toggle-demo>\r\n        <column-flex-demo v-if=\"state === 'flex'\"></column-flex-demo>\r\n        <column-standard-demo v-if=\"state === 'fixed'\"></column-standard-demo>\r\n        <column-force-demo v-if=\"state === 'force'\"></column-force-demo>\r\n        <column-pinning-demo v-if=\"state === 'pinning'\"></column-pinning-demo>\r\n\r\n        <!-- Summary row -->\r\n        <summary-row-simple-demo v-if=\"state === 'simple-summary'\"></summary-row-simple-demo>\r\n        <summary-row-server-paging-demo v-if=\"state === 'paging-summary'\">\r\n        </summary-row-server-paging-demo>\r\n        <summary-row-inline-html v-if=\"state === 'inline-html-summary'\"></summary-row-inline-html>\r\n        <!-- <summary-row-custom-template-demo v-if=\"state === 'custom-template-summary'\">\r\n        </summary-row-custom-template-demo> -->\r\n      </content>\r\n    </div>\r\n  `\r\n})\r\nexport class AppComponent extends Vue {\r\n  state: string = '';\r\n  selectedElement: Element = null;\r\n\r\n  @Watch('state') onStateChanged() {\r\n    if (this.selectedElement) {\r\n      this.selectedElement.classList.remove('active');\r\n    }\r\n    this.selectedElement = this.$el.querySelector(`a[href=\"#${this.state}\"`);\r\n    if (this.selectedElement) {\r\n      this.selectedElement.classList.add('active');\r\n    }\r\n  }\r\n\r\n  mounted() {\r\n    this.onStateChanged();\r\n  }\r\n\r\n  get classObject() {\r\n    return {\r\n      dark: this.state === 'dark',\r\n    };\r\n  }\r\n\r\n  version: string = APP_VERSION;\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Fluid Row Heights \r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/basic-auto.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :loadingIndicator=\"loadingIndicator\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        :resizeable=\"true\"\r\n        :reorderable=\"reorderable\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class BasicAutoComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = false;\r\n\r\n  columns = [\r\n    { prop: 'name' },\r\n    { name: 'Gender' },\r\n    { name: 'Company', sortable: false }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n      setTimeout(() => { this.loadingIndicator = false; }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Fix Row Height\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/basic-fixed.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material striped\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class BasicFixedComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  columns = [\r\n    { prop: 'name' },\r\n    { name: 'Company' },\r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  name: 'basic-bootstrap-theme-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Bootstrap Theme\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/bootstrap.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"bootstrap\"\r\n        :rows=\"rows\"\r\n        :loadingIndicator=\"loadingIndicator\"\r\n        :columns=\"columns\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :summaryRow=\"true\"\r\n        summaryPosition=\"bottom\"\r\n        :footerHeight=\"40\"\r\n        :limit=\"10\"\r\n        rowHeight=\"auto\"\r\n        :reorderable=\"reorderable\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class BootstrapThemeComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n\r\n  columns = [\r\n    { prop: 'name', summaryFunc: (): string => null },\r\n    { name: 'Gender', summaryFunc: (cells: string[]) => this.summaryForGender(cells) },\r\n    { name: 'Company', summaryFunc: (): string => null }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n      setTimeout(() => { this.loadingIndicator = false; }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  private summaryForGender(cells: string[]): string {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Context Menu Event\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/contextmenu.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div class=\"info\">\r\n        <p><strong>Note:</strong> ngx-datatable does not provide a context menu feature.\r\n        This demonstrates how you would access the <code>contextmenu</code> event\r\n        to display your own custom context menu.</p>\r\n        <p v-if=\"rawEvent\"><strong>Mouse position:</strong> <code>(x: {{rawEvent.x}}, y: {{rawEvent.y}})</code></p>\r\n        <p v-if=\"contextmenuRow\"><strong>Row:</strong> {{contextmenuRow.name}}</p>\r\n        <p v-if=\"contextmenuColumn\"><strong>Header:</strong>\r\n          name: {{contextmenuColumn.name}}\r\n          prop: {{contextmenuColumn.prop}}\r\n        </p>\r\n      </div>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        @tableContextmenu=\"onTableContextMenu($event)\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ContextMenuDemoComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  columns = [\r\n    { prop: 'name', visible: true },\r\n    { name: 'Gender', visible: true },\r\n    { name: 'Company', visible: true }\r\n  ];\r\n\r\n  rawEvent: Event = null;\r\n  contextmenuRow: Record<string, unknown> = null;\r\n  contextmenuColumn: unknown = null;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  onTableContextMenu(contextMenuEvent: { event: Event; type: string; content: Record<string, unknown> }) {\r\n    console.log(contextMenuEvent);\r\n\r\n    this.rawEvent = contextMenuEvent.event;\r\n    if (contextMenuEvent.type === 'body') {\r\n      this.contextmenuRow = contextMenuEvent.content;\r\n      this.contextmenuColumn = undefined;\r\n    } else {\r\n      this.contextmenuColumn = contextMenuEvent.content;\r\n      this.contextmenuRow = undefined;\r\n    }\r\n\r\n    contextMenuEvent.event.preventDefault();\r\n    contextMenuEvent.event.stopPropagation();\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  name: 'row-css-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Row/Header/Cell CSS Class Demo\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/css.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class='material'\r\n        :rows='rows'\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :rowClass=\"getRowClass\"\r\n        :scrollbarV=\"true\">\r\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" headerClass=\"is-gender\" :cellClass=\"getCellClass\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class RowCssComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  expanded = {};\r\n  timeout: any;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      const rows = JSON.parse(req.response);\r\n      cb(rows.splice(0, 50));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getRowClass(row: { age: number }) {\r\n    return {\r\n      'age-is-ten': (row.age % 10) === 0\r\n    };\r\n  }\r\n\r\n  getCellClass({ row, column, value }: { row: Record<string, unknown>; column: unknown; value: string }): Record<string, unknown> {\r\n    return {\r\n      'is-female': value === 'female'\r\n    };\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  name: 'basic-dark-theme-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Dark Theme\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/dark-theme.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"dark\"\r\n        :rows=\"rows\"\r\n        :loadingIndicator=\"loadingIndicator\"\r\n        :columns=\"columns\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"40\"\r\n        :summaryRow=\"true\"\r\n        :footerHeight=\"40\"\r\n        :limit=\"10\"\r\n        rowHeight=\"auto\"\r\n        :reorderable=\"reorderable\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class DarkThemeComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n\r\n  columns = [\r\n    { prop: 'name', summaryFunc: (): string => null },\r\n    { name: 'Gender', summaryFunc: (cells: Array<string>): string => this.summaryForGender(cells) },\r\n    { name: 'Company', summaryFunc: (): string => null }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n      setTimeout(() => { this.loadingIndicator = false; }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  private summaryForGender(cells: string[]): string {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Dynamic Height w/ Virtual Scrolling\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/dynamic-height.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class='material'\r\n        :rows='rows'\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"getRowHeight\"\r\n        :scrollbarV=\"true\">\r\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Row Height\" prop=\"height\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class DynamicHeightComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  expanded = {};\r\n  timeout: any;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      const rows = JSON.parse(req.response).splice(0, 100);\r\n\r\n      for(const row of rows) {\r\n        row.height = Math.floor(Math.random() * 80) + 50;\r\n      }\r\n\r\n      cb(rows);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getRowHeight(row: Record<string, unknown>) {\r\n    if(!row) return 50;\r\n    if(row.height === undefined) return 50;\r\n    return row.height;\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div style=\"height:100%;display:flex;flex-direction:column;\">\r\n      <h3>\r\n        Client-side Search and Filtering\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/filter.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <input\r\n          type='text'\r\n          style='padding:8px;margin:15px auto;width:30%;'\r\n          placeholder='Type to filter the name column...'\r\n          @keyup='updateFilter($event)'\r\n        />\r\n      <ngx-datatable\r\n          ref=\"table\"\r\n          class=\"material ngx-flex\"\r\n          :columns=\"columns\"\r\n          :columnMode=\"'force'\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"10\"\r\n          :rows=\"rows\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class FilterBarComponent extends Vue {\r\n\r\n  rows: Array<Record<string, string>> = [];\r\n\r\n  temp: Array<Record<string, string>> = [];\r\n\r\n  columns = [\r\n    { prop: 'name' },\r\n    { name: 'Company' },\r\n    { name: 'Gender' }\r\n  ];\r\n  table: any; // DatatableComponent;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, string>>) => {\r\n      // cache our list\r\n      this.temp = [...data];\r\n\r\n      // push our inital complete list\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  mounted() {\r\n    this.table = this.$refs.table;\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, string>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  updateFilter(event: KeyboardEvent) {\r\n    const val = (event.target as unknown as { value: string }).value.toLowerCase();\r\n\r\n    // filter our data\r\n    const temp = this.temp.filter(function(d) {\r\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n\r\n    // update the rows\r\n    this.rows = temp;\r\n    // Whenever the filter changes, always go back to the first page\r\n    this.table.offset = 0;\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  name: 'footer-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Custom Footer\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/footer.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        columnMode=\"force\"\r\n        :footerHeight=\"100\"\r\n        :headerHeight=\"50\"\r\n        rowHeight=\"auto\">\r\n        <!-- Footer Template -->\r\n        <template v-slot:footer=\"scope\">\r\n          <div style=\"padding: 5px 10px\">\r\n            <div>\r\n              <strong>Summary</strong>: Gender: Female\r\n            </div>\r\n            <hr style=\"width:100%\" />\r\n            <div>\r\n              Rows: {{scope.rowCount}} |\r\n              Size: {{scope.pageSize}} |\r\n              Current: {{scope.curPage}} |\r\n              Offset: {{scope.offset}}\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class FooterDemoComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  columns = [\r\n    { prop: 'name' },\r\n    { name: 'Gender' },\r\n    { name: 'Company' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\nimport { TableColumn } from 'types/table-column.type';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'vue-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Full Screen\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/fullscreen.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material fullscreen\"\r\n        style=\"top: 52px\"\r\n        :columns=\"columns\"\r\n        columnMode=\"standard\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :rowIdentity=\"rowIdentity\"\r\n        :scrollbarV=\"true\"\r\n        :scrollbarH=\"true\"\r\n        :rows=\"rows\"\r\n        @rendered=\"onRendered\"\r\n        >\r\n        <!-- <vue-datatable-column name=\"Id\" :width=\"80\"></vue-datatable-column>\r\n        <vue-datatable-column name=\"Name\" :width=\"300\">\r\n          <span slot=\"header\"><strong>FullName</strong></span> -->\r\n          <!-- <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <span style=\"margin-left: 10px\"><i>{{ scope.row.name }}</i></span>\r\n          </template> -->\r\n        <!-- </vue-datatable-column>\r\n        <vue-datatable-column name=\"Gender\"></vue-datatable-column>\r\n        <vue-datatable-column name=\"Age\"></vue-datatable-column>\r\n        <vue-datatable-column name=\"City\" :width=\"300\" prop=\"address.city\"></vue-datatable-column>\r\n        <vue-datatable-column name=\"State\" :width=\"300\" prop=\"address.state\"></vue-datatable-column> -->\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class FullScreenComponent extends Vue {\r\n  rows: Array<Record<string, unknown>> = [];\r\n  columns: TableColumn[] = [];\r\n  //   {\r\n  //     name: 'Id',\r\n  //     width: 80,\r\n  //   },\r\n  //   {\r\n  //     name: 'Name',\r\n  //     width: 300,\r\n  //   },\r\n  //   {\r\n  //     name: 'Gender',\r\n  //     // width: 150,\r\n  //   },\r\n  //   {\r\n  //     name: 'Age',\r\n  //     width: 150,\r\n  //   },\r\n  //   {\r\n  //     name: 'City',\r\n  //     width: 300,\r\n  //     prop: 'address.city',\r\n  //   },\r\n  //   {\r\n  //     name: 'State',\r\n  //     width: 300,\r\n  //     prop: 'address.state',\r\n  //   },\r\n  // ];\r\n  created() {\r\n    this.fetch((data: { cols: Array<string>, data: Array<Record<string, unknown>> }) => {\r\n      data.cols.forEach(col => {\r\n        this.columns.push({ name: col, prop: col });\r\n      });\r\n      this.rows = data.data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: { cols: Array<string>, data: Array<Record<string, unknown>> }) => void) {\r\n    const req = new XMLHttpRequest();\r\n    // req.open('GET', `assets/data/100k.json`);\r\n    req.open('GET', `assets/data/columns20.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onRendered() {\r\n    //\r\n  }\r\n\r\n  rowIdentity(row: { Id: string | number }): number | string {\r\n    if (!row) {\r\n      return null;\r\n    }\r\n    return row.Id;\r\n  }\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  name: 'inline-edit-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Inline Editing\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/inline.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :headerHeight=\"50\"\r\n        :limit=\"5\"\r\n        columnMode=\"force\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        :rows=\"rows\">\r\n        <ngx-datatable-column name=\"Name\">\r\n          <template v-slot:default=\"scope\">\r\n            <span\r\n              title=\"Double click to edit\"\r\n              @dblclick=\"dblclick(true, scope.rowIndex, 'name', scope.updateCell)\"\r\n              v-if=\"scope.row && !editing[scope.rowIndex + '-name']\">\r\n              {{scope.row.name}}\r\n            </span>\r\n            <input v-else-if=\"editing[scope.rowIndex+ '-name']\"\r\n              autofocus\r\n              @blur=\"updateValue($event, 'name', scope.rowIndex)\"\r\n              type=\"text\"\r\n              :value=\"scope.row.name\"\r\n            />\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\">\r\n          <template v-slot:default=\"scope\">\r\n             <span\r\n              title=\"Double click to edit\"\r\n              @dblclick=\"dblclick(true, scope.rowIndex, 'gender', scope.updateCell)\"\r\n              v-if=\"scope.row && !editing[scope.rowIndex + '-gender']\">\r\n              {{scope.row.gender}}\r\n            </span>\r\n            <select\r\n              v-if=\"editing[scope.rowIndex + '-gender']\"\r\n              @blur=\"editing[scope.rowIndex + '-gender'] = false\"\r\n              @change=\"updateValue($event, 'gender', scope.rowIndex)\"\r\n              :value=\"scope.row.gender\">\r\n              <option value=\"male\">Male</option>\r\n              <option value=\"female\">Female</option>\r\n            </select>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\">\r\n          <template v-slot:default=\"scope\">\r\n            <span v-if=\"scope.row\">{{scope.row.age}}</span>\r\n          </template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class InlineEditComponent extends Vue {\r\n\r\n  editing = {};\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  dblclick(edit: boolean, rowIndex: number, prop: string, update: () => void) {\r\n    // this.editing[`${rowIndex}-${prop}`] = edit;\r\n    this.$set(this.editing, `${rowIndex}-${prop}`, edit);\r\n    update();\r\n  }\r\n\r\n  updateValue(event: Event, cell: string, rowIndex: number) {\r\n    console.log('inline editing rowIndex', rowIndex);\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    this.rows[rowIndex][cell] = (event.target as unknown as { value: string }).value;\r\n    this.rows = [...this.rows];\r\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  name: 'live-data-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Live Data Demo\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/live.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" @click=\"start\">Start</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"stop\">Stop</a> | \r\n          <a href=\"javascript:void(0)\" @click=\"add\">Add</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"remove\">Remove</a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :headerHeight=\"50\"\r\n        :limit=\"5\"\r\n        columnMode=\"force\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        trackByProp=\"updated\"\r\n        :rows=\"rows\">\r\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class LiveDataComponent extends Vue {\r\n\r\n  count: number = 50;\r\n  rows: any[] = [];\r\n  temp: any[] = [];\r\n  cols: any = [\r\n    'name', 'gender', 'company'\r\n  ];\r\n  id: any;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.map(d => {\r\n        d.updated = Date.now().toString();\r\n        return d;\r\n      });\r\n\r\n      this.temp = [...this.rows];\r\n    });\r\n\r\n    this.start();\r\n  }\r\n\r\n  randomNum(start: number, end: number): number {\r\n    return Math.floor(Math.random() * end) + start;\r\n  }\r\n\r\n  start(): void {\r\n    if(this.id) return;\r\n\r\n    this.id = setInterval(this.updateRandom.bind(this), 50);\r\n  }\r\n\r\n  stop(): void {\r\n    clearInterval(this.id);\r\n    this.id = null;\r\n  }\r\n\r\n  add() {\r\n    this.rows.splice(0, 0, this.temp[this.count++]);\r\n  }\r\n\r\n  remove() {\r\n    this.rows.splice(0, this.rows.length);\r\n  }\r\n\r\n  updateRandom() {\r\n    if (this.rows.length <= 2) {\r\n      return;\r\n    }\r\n    const rowNum = this.randomNum(0, Math.min(5, this.rows.length - 1));\r\n    const cellNum = this.randomNum(0, 3);\r\n    const newRow = this.randomNum(0, this.rows.length - 1);\r\n    const prop = this.cols[cellNum];\r\n    const rows = this.rows;\r\n\r\n    if(rows.length && rows[newRow]) {\r\n      const row = rows[rowNum];\r\n      row[prop] = rows[newRow][prop];\r\n      row.updated = Date.now().toString();\r\n    }\r\n    // this.rows = [...this.rows];\r\n  }\r\n\r\n  fetch(cb: any): void {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  name: 'multiple-tables-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Multiple Tables\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/multiple.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows1\"\r\n        :columns=\"columns1\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"0\"\r\n        :rowHeight=\"100\">\r\n      </ngx-datatable>\r\n      <br />\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows2\"\r\n        :columns=\"columns2\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class MultipleTablesComponent extends Vue {\r\n\r\n  columns1 = [\r\n    { prop: 'name' },\r\n    { name: 'Gender' },\r\n    { name: 'Company' }\r\n  ];\r\n\r\n  columns2 = [\r\n    { prop: 'name', name: 'Name' },\r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  rows1 = [\r\n    { name: 'Larry', gender: 'Male', company: 'Cisco' },\r\n    { name: 'Lauren', gender: 'Female', company: 'HP' }\r\n  ];\r\n\r\n  rows2 = [\r\n    { name: 'Callie', gender: 'Female' },\r\n    { name: 'Maggie', gender: 'Female' }\r\n  ];\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  name: 'row-details-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Row Detail Demo\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/row-detail.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" @click=\"expandAllRows\">Expand All</a> | \r\n          <a href=\"javascript:void(0)\" @click=\"collapseAllRows\">Collapse All</a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        ref=\"table\"\r\n        class=\"material expandable\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :rows=\"rows\"\r\n        rowDetailHeight=\"100\"\r\n        @page=\"onPage($event)\"\r\n        @detail-toggle=\"onDetailToggle($event)\">\r\n\r\n        <!-- Row Detail Template -->\r\n        <template slot=\"rowDetail\" slot-scope=\"scope\" v-if=\"scope.row\">\r\n          <div style=\"padding-left:35px;\">\r\n            <div><strong>Address</strong></div>\r\n            <div>{{scope.row.address.city}}, {{scope.row.address.state}}</div>\r\n          </div>\r\n        </template>\r\n\r\n        <!-- Column Templates -->\r\n         <ngx-datatable-column\r\n          :width=\"50\"\r\n          :resizeable=\"false\"\r\n          :sortable=\"false\"\r\n          :draggable=\"false\"\r\n          :canAutoResize=\"false\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <a\r\n              href=\"javascript:void(0)\"\r\n              :class=\"{'datatable-icon-right': !scope.expanded, 'datatable-icon-down': scope.expanded}\"\r\n              title=\"Expand/Collapse Row\"\r\n              @click=\"toggleExpandRow(scope.row)\">\r\n            </a>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Index\" width=\"80\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <strong>{{scope.rowIndex}}</strong>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Expanded\" width=\"80\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <strong>{{scope.expanded}}</strong>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Name\" width=\"200\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <strong>{{scope.row.name}}</strong>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" width=\"300\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <i v-html=\"scope.row['name']\"></i>&nbsp;and&nbsp;<i>{{scope.row.gender}}</i>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" ></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n})\r\nexport default class RowDetailsComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  timeout: any;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  onPage(event: Record<string, unknown>) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      console.log('paged!', event);\r\n    }, 100);\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  toggleExpandRow(row: Record<string, unknown>) {\r\n    console.log('Toggled Expand Row!', row);\r\n    (this.$refs.table as any).toggleExpandDetail(row);\r\n  }\r\n\r\n  onDetailToggle(event: Record<string, unknown>) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  expandAllRows() {\r\n    (this.$refs.table as any).expandAllDetails();\r\n  }\r\n\r\n  collapseAllRows() {\r\n    (this.$refs.table as any).collapseAllDetails();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\ninterface IRow {\r\n  exppayyes: number;\r\n  exppayno: number;\r\n  exppaypending: number;\r\n  source: string;\r\n  name: string;\r\n  gender: string;\r\n  company: string;\r\n  age: number;\r\n  comment: string;\r\n  groupcomment: string;\r\n  startdate?: string;\r\n  enddate?: string;\r\n  groupstatus?: string;\r\n  dt: string;\r\n}\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  name: 'row-grouping-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Row Grouping\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/row-grouping.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n\r\n      <div style=\"margin-left: 50%;\">\r\n        <button @click=\"onExpandAll\">Expand all</button>\r\n        <button @click=\"onCollapseAll\">Collapse all</button>\r\n        <!-- <button @click=\"onAddRow\">Add row</button> -->\r\n      </div>\r\n\r\n      <ngx-datatable\r\n        ref=\"table\"\r\n        class=\"material expandable\"\r\n        :rows=\"rows\"\r\n        :groupRowsBy=\"groupRowsBy\"\r\n        columnMode=\"force\"\r\n        :scrollbarH=\"true\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"40\"\r\n        limit=\"10\"\r\n        :groupExpansionDefault=\"true\"\r\n        :groupRowHeight=\"40\"\r\n        @rendered=\"onRendered\"\r\n        @group-toggle=\"onDetailToggle($event)\">\r\n\r\n        <!-- Group Header Template -->\r\n        <!-- <template v-slot:groupHeader=\"scope\">\r\n          <b style=\"color: white;\">{{groupTitle(scope.group, scope.groupBy)}}</b>\r\n        </template> -->\r\n\r\n        <!-- Row Column Template -->\r\n        <ngx-datatable-column name=\"Exp. Pay.\" prop=\"\" :editable=\"true\" :frozenLeft=\"true\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <input \r\n              type=\"checkbox\" \r\n              :id=\"'ep1' + scope.rowIndex\" \r\n              :name=\"scope.rowIndex\" \r\n              value=\"0\" \r\n              class=\"expectedpayment\" \r\n              @change=\"checkGroup($event, scope.row, scope.rowIndex, scope.group)\" \r\n              :checked=\"scope.row.exppayyes === 1\">\r\n            <label :for=\"'ep1' + scope.rowIndex\"></label>\r\n            <input \r\n              type=\"checkbox\" \r\n              :id=\"'ep2' + scope.rowIndex\" \r\n              :name=\"scope.rowIndex\" \r\n              value=\"1\" \r\n              class=\"expectedpayment2\" \r\n              @change=\"checkGroup($event, scope.row, scope.rowIndex, scope.group)\" \r\n              :checked=\"scope.row.exppayno === 1\">\r\n            <label :for=\"'ep2' + scope.rowIndex\"></label>\r\n            <input \r\n              type=\"checkbox\" \r\n              :id=\"'ep3' + scope.rowIndex\" \r\n              :name=\"scope.rowIndex\" \r\n              value=\"2\" \r\n              class=\"expectedpayment3\" \r\n              @change=\"checkGroup($event, scope.row, scope.rowIndex, scope.group)\" \r\n              :checked=\"scope.row.exppaypending===1\">\r\n            <label :for=\"'ep3' + scope.rowIndex\"></label>\r\n          </template>                    \r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Source\" prop=\"source\" :editable=\"false\" :sortable=\"true\" :frozenLeft=\"true\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Name\" prop=\"name\" :editable=\"true\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" prop=\"gender\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" prop=\"age\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Date\" prop=\"dt\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Comment\" prop=\"comment\" :sortable=\"true\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">           \r\n            <input autofocus\r\n              @blur=\"updateValue($event, 'comment', scope.rowIndex)\"\r\n              type=\"text\" \r\n              name=\"comment\" \r\n              :value=\"scope.row.comment\"/>\r\n          </template>                \r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class RowGroupingComponent  extends Vue {\r\n\r\n  // funder = [];\r\n  // calculated = [];\r\n  // pending = [];\r\n  // groups = [];\r\n  \r\n  editing = {};  \r\n  rows: Array<IRow> = [];\r\n  groupRowsBy = ['age', [{ title: 'Gender', prop: 'gender' }, { title: 'Firm', prop: 'company' }, { title: 'Date', prop: 'dt', valueGetter: (dt: string) => new Date(dt).getFullYear() }]];\r\n  \r\n  created() {\r\n    this.fetch((data) => {\r\n      data.forEach(row => {\r\n        row.dt = new Date().toISOString();\r\n      });\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: ( data: Array<IRow>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/forRowGrouping.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getGroupRowHeight(group: Array<unknown>, rowHeight: unknown) {\r\n    let style = {};\r\n\r\n    style = {\r\n      height: (group.length * 40) + 'px',\r\n      width: '100%'\r\n    };\r\n\r\n    return style;\r\n  }\r\n\r\n  checkGroup(event: { target: { checked: boolean; value: string }}, row: Record<string, unknown>, rowIndex: unknown, group: { rows: Array<IRow> }) {\r\n    let groupStatus: string = 'Pending';\r\n    let expectedPaymentDealtWith: boolean = true;\r\n\r\n    row.exppayyes = 0;\r\n    row.exppayno = 0;\r\n    row.exppaypending = 0;\r\n      \r\n    if (event.target.checked)\r\n      if (event.target.value === '0') { // expected payment yes selected\r\n        row.exppayyes = 1;\r\n      } else if (event.target.value === '1') { // expected payment yes selected\r\n        row.exppayno = 1;\r\n      } else if (event.target.value === '2') { // expected payment yes selected\r\n        row.exppaypending = 1;\r\n      }\r\n    const gr = group.rows;\r\n    if (gr.length === 2) { // There are only 2 lines in a group\r\n      if (['Calculated', 'Funder'].indexOf(gr[0].source) > -1 && ['Calculated', 'Funder'].indexOf(gr[1].source) > -1) { // Sources are funder and calculated\r\n        if (gr[0].startdate === gr[1].startdate && gr[0].enddate === gr[1].enddate) { // Start dates and end dates match\r\n          for (let index = 0; index < gr.length; index++) {\r\n            if (gr[index].source !== row.source) {\r\n              if (event.target.value === '0') { // expected payment yes selected\r\n                gr[index].exppayyes = 0;\r\n                gr[index].exppaypending = 0;\r\n                gr[index].exppayno = 1;\r\n              }\r\n            }\r\n\r\n            if (gr[index].exppayyes === 0 && gr[index].exppayno === 0 && gr[index].exppaypending === 0) {\r\n              expectedPaymentDealtWith = false;\r\n            }\r\n            console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let index = 0; index < gr.length; index++) {\r\n        if (gr[index].exppayyes === 0 && gr[index].exppayno === 0 && gr[index].exppaypending === 0) {\r\n          expectedPaymentDealtWith = false;\r\n        }\r\n        console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\r\n      }      \r\n    }\r\n\r\n    // check if there is a pending selected payment or a row that does not have any expected payment selected\r\n    if (gr.filter(rowFilter => rowFilter.exppaypending === 1).length === 0 \r\n      && gr.filter(rowFilter => rowFilter.exppaypending === 0 \r\n                      && rowFilter.exppayyes === 0 \r\n                      && rowFilter.exppayno === 0).length === 0) {\r\n      console.log('expected payment dealt with');\r\n      \r\n      // check if can set the group status\r\n      const numberOfExpPayYes = gr.filter(rowFilter => rowFilter.exppayyes === 1).length;\r\n      const numberOfSourceFunder = gr.filter(\r\n          rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Funder').length;\r\n      const numberOfSourceCalculated = gr.filter(\r\n          rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Calculated').length;\r\n      const numberOfSourceManual = gr.filter(\r\n          rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Manual').length;\r\n\r\n      console.log('numberOfExpPayYes', numberOfExpPayYes);\r\n      console.log('numberOfSourceFunder', numberOfSourceFunder);\r\n      console.log('numberOfSourceCalculated', numberOfSourceCalculated);\r\n      console.log('numberOfSourceManual', numberOfSourceManual);\r\n\r\n      if (numberOfExpPayYes > 0) {\r\n        if (numberOfExpPayYes === numberOfSourceFunder) {\r\n          groupStatus = 'Funder Selected';\r\n        } else if (numberOfExpPayYes === numberOfSourceCalculated) {\r\n          groupStatus = 'Calculated Selected';\r\n        } else if (numberOfExpPayYes === numberOfSourceManual) {\r\n          groupStatus = 'Manual Selected';\r\n        } else {\r\n          groupStatus = 'Hybrid Selected';\r\n        }\r\n      }\r\n        \r\n    }\r\n\r\n    gr[0].groupstatus = groupStatus;    \r\n  }\r\n\r\n  updateValue(event: { target: { checked: boolean; value: unknown }}, cell: string, rowIndex: number) {\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    const row = this.rows[rowIndex];\r\n    row[cell] = event.target.value;\r\n  }\r\n\r\n  onDetailToggle(event: unknown) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  groupTitle(group: {\r\n    key: string, level: number, rows: unknown[],\r\n    keys: Array<{ title: string, prop: string, value: string }>\r\n  }) {\r\n    let result = '';\r\n    group.keys.forEach(gr => {\r\n      result += `${gr.title} - ${gr.value}; `;\r\n    });\r\n    return result ? result : 'Age - empty';\r\n  }\r\n\r\n  onRendered() {\r\n    //\r\n  }\r\n\r\n  onExpandAll() {\r\n    const table = this.$refs.table;\r\n    if (!table) {\r\n      return;\r\n    }\r\n    (table as unknown as { expandAllGroups: () => void }).expandAllGroups();\r\n  }\r\n\r\n  onCollapseAll() {\r\n    const table = this.$refs.table;\r\n    if (!table) {\r\n      return;\r\n    }\r\n    (table as unknown as { collapseAllGroups: () => void }).collapseAllGroups();\r\n  }\r\n\r\n  // onAddRow() {\r\n  //   this.rows.push({\r\n  //     exppayyes: 1,\r\n  //     exppayno: 0,\r\n  //     exppaypending: 0,\r\n  //     source: 'Funder',\r\n  //     name: 'James Bond',\r\n  //     gender: 'female',\r\n  //     company: 'Samsung, LLC CMP DDC',\r\n  //     age: 22,\r\n  //     comment: 'test1',\r\n  //     groupcomment: 'group comment test  with multiple lines of text. group comment test  with multiple lines of text.',\r\n  //     dt: '2022-02-21T11:26:36.734Z',\r\n  //   });\r\n  // }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\ninterface IRow {\r\n  exppayyes: number;\r\n  exppayno: number;\r\n  exppaypending: number;\r\n  source: string;\r\n  name: string;\r\n  gender: string;\r\n  company: string;\r\n  age: number;\r\n  comment: string;\r\n  groupcomment: string;\r\n  startdate: string;\r\n  enddate: string;\r\n  groupstatus: string;\r\n  dt: string;\r\n}\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  name: 'row-grouping-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Row Grouping\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/row-grouping.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n\r\n      <div style=\"margin-left: 50%;\">\r\n        <button @click=\"onExpandAll\">Expand all</button>\r\n        <button @click=\"onCollapseAll\">Collapse all</button>\r\n      </div>\r\n\r\n      <ngx-datatable\r\n        ref=\"table\"\r\n        class=\"material expandable\"\r\n        :rows=\"rows\"\r\n        :groupRowsBy=\"groupRowsBy\"\r\n        columnMode=\"force\"\r\n        :scrollbarH=\"true\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"40\"\r\n        limit=\"10\"\r\n        :groupExpansionDefault=\"true\"\r\n        :groupRowHeight=\"40\"\r\n        groupHeaderClasses=\"group-header\"\r\n        :groupHeaderStyles=\"groupHeaderStyles\"\r\n        @rendered=\"onRendered\"\r\n        @group-toggle=\"onDetailToggle($event)\">\r\n\r\n        <!-- Group Header Template -->\r\n        <template v-slot:groupHeader=\"scope\">\r\n          <b style=\"color: white;\">{{groupTitle(scope.group, scope.groupBy)}}</b>\r\n        </template>\r\n\r\n        <!-- Row Column Template -->\r\n        <ngx-datatable-column name=\"Exp. Pay.\" prop=\"\" :editable=\"true\" :frozenLeft=\"true\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <input \r\n              type=\"checkbox\" \r\n              :id=\"'ep1' + scope.rowIndex\" \r\n              :name=\"scope.rowIndex\" \r\n              value=\"0\" \r\n              class=\"expectedpayment\" \r\n              @change=\"checkGroup($event, scope.row, scope.rowIndex, scope.group)\" \r\n              :checked=\"scope.row.exppayyes === 1\">\r\n            <label :for=\"'ep1' + scope.rowIndex\"></label>\r\n            <input \r\n              type=\"checkbox\" \r\n              :id=\"'ep2' + scope.rowIndex\" \r\n              :name=\"scope.rowIndex\" \r\n              value=\"1\" \r\n              class=\"expectedpayment2\" \r\n              @change=\"checkGroup($event, scope.row, scope.rowIndex, scope.group)\" \r\n              :checked=\"scope.row.exppayno === 1\">\r\n            <label :for=\"'ep2' + scope.rowIndex\"></label>\r\n            <input \r\n              type=\"checkbox\" \r\n              :id=\"'ep3' + scope.rowIndex\" \r\n              :name=\"scope.rowIndex\" \r\n              value=\"2\" \r\n              class=\"expectedpayment3\" \r\n              @change=\"checkGroup($event, scope.row, scope.rowIndex, scope.group)\" \r\n              :checked=\"scope.row.exppaypending===1\">\r\n            <label :for=\"'ep3' + scope.rowIndex\"></label>\r\n          </template>                    \r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Source\" prop=\"source\" :editable=\"false\" :sortable=\"true\" :frozenLeft=\"true\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Name\" prop=\"name\" :editable=\"true\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" prop=\"gender\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" prop=\"age\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Date\" prop=\"dt\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Comment\" prop=\"comment\" :sortable=\"true\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">           \r\n            <input autofocus\r\n              @blur=\"updateValue($event, 'comment', scope.rowIndex)\"\r\n              type=\"text\" \r\n              name=\"comment\" \r\n              :value=\"scope.row.comment\"/>\r\n          </template>                \r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class RowGroupingCustomComponent  extends Vue {\r\n\r\n  // funder = [];\r\n  // calculated = [];\r\n  // pending = [];\r\n  // groups = [];\r\n  \r\n  editing = {};  \r\n  rows: Array<IRow> = [];\r\n  groupRowsBy = ['age', [{ title: 'Gender', prop: 'gender' }, { title: 'Firm', prop: 'company' }, { title: 'Date', prop: 'dt', valueGetter: (dt: string) => new Date(dt).getFullYear() }]];\r\n  \r\n  created() {\r\n    this.fetch((data) => {\r\n      data.forEach(row => {\r\n        row.dt = new Date().toISOString();\r\n      });\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: ( data: Array<IRow>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/forRowGrouping.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getGroupRowHeight(group: Array<unknown>, rowHeight: unknown) {\r\n    let style = {};\r\n\r\n    style = {\r\n      height: (group.length * 40) + 'px',\r\n      width: '100%'\r\n    };\r\n\r\n    return style;\r\n  }\r\n\r\n  checkGroup(event: { target: { checked: boolean; value: string }}, row: Record<string, unknown>, rowIndex: unknown, group: { rows: Array<IRow> }) {\r\n    let groupStatus: string = 'Pending';\r\n    let expectedPaymentDealtWith: boolean = true;\r\n\r\n    row.exppayyes = 0;\r\n    row.exppayno = 0;\r\n    row.exppaypending = 0;\r\n      \r\n    if (event.target.checked)\r\n      if (event.target.value === '0') { // expected payment yes selected\r\n        row.exppayyes = 1;\r\n      } else if (event.target.value === '1') { // expected payment yes selected\r\n        row.exppayno = 1;\r\n      } else if (event.target.value === '2') { // expected payment yes selected\r\n        row.exppaypending = 1;\r\n      }\r\n    const gr = group.rows;\r\n    if (gr.length === 2) { // There are only 2 lines in a group\r\n      if (['Calculated', 'Funder'].indexOf(gr[0].source) > -1 && ['Calculated', 'Funder'].indexOf(gr[1].source) > -1) { // Sources are funder and calculated\r\n        if (gr[0].startdate === gr[1].startdate && gr[0].enddate === gr[1].enddate) { // Start dates and end dates match\r\n          for (let index = 0; index < gr.length; index++) {\r\n            if (gr[index].source !== row.source) {\r\n              if (event.target.value === '0') { // expected payment yes selected\r\n                gr[index].exppayyes = 0;\r\n                gr[index].exppaypending = 0;\r\n                gr[index].exppayno = 1;\r\n              }\r\n            }\r\n\r\n            if (gr[index].exppayyes === 0 && gr[index].exppayno === 0 && gr[index].exppaypending === 0) {\r\n              expectedPaymentDealtWith = false;\r\n            }\r\n            console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let index = 0; index < gr.length; index++) {\r\n        if (gr[index].exppayyes === 0 && gr[index].exppayno === 0 && gr[index].exppaypending === 0) {\r\n          expectedPaymentDealtWith = false;\r\n        }\r\n        console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\r\n      }      \r\n    }\r\n\r\n    // check if there is a pending selected payment or a row that does not have any expected payment selected\r\n    if (gr.filter(rowFilter => rowFilter.exppaypending === 1).length === 0 \r\n      && gr.filter(rowFilter => rowFilter.exppaypending === 0 \r\n                      && rowFilter.exppayyes === 0 \r\n                      && rowFilter.exppayno === 0).length === 0) {\r\n      console.log('expected payment dealt with');\r\n      \r\n      // check if can set the group status\r\n      const numberOfExpPayYes = gr.filter(rowFilter => rowFilter.exppayyes === 1).length;\r\n      const numberOfSourceFunder = gr.filter(\r\n          rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Funder').length;\r\n      const numberOfSourceCalculated = gr.filter(\r\n          rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Calculated').length;\r\n      const numberOfSourceManual = gr.filter(\r\n          rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Manual').length;\r\n\r\n      console.log('numberOfExpPayYes', numberOfExpPayYes);\r\n      console.log('numberOfSourceFunder', numberOfSourceFunder);\r\n      console.log('numberOfSourceCalculated', numberOfSourceCalculated);\r\n      console.log('numberOfSourceManual', numberOfSourceManual);\r\n\r\n      if (numberOfExpPayYes > 0) {\r\n        if (numberOfExpPayYes === numberOfSourceFunder) {\r\n          groupStatus = 'Funder Selected';\r\n        } else if (numberOfExpPayYes === numberOfSourceCalculated) {\r\n          groupStatus = 'Calculated Selected';\r\n        } else if (numberOfExpPayYes === numberOfSourceManual) {\r\n          groupStatus = 'Manual Selected';\r\n        } else {\r\n          groupStatus = 'Hybrid Selected';\r\n        }\r\n      }\r\n        \r\n    }\r\n\r\n    gr[0].groupstatus = groupStatus;    \r\n  }\r\n\r\n  updateValue(event: { target: { checked: boolean; value: any }}, cell: string, rowIndex: number) {\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    const row = this.rows[rowIndex];\r\n    row[cell] = event.target.value;\r\n  }\r\n\r\n  onDetailToggle(event: unknown) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  groupTitle(group: {\r\n    key: string, level: number, value: any[],\r\n    keys: Array<{ title: string, prop: string, value: string }>\r\n  }) {\r\n    let result = '';\r\n    group.keys.forEach(gr => {\r\n      result += `${gr.title} - ${gr.value}; `;\r\n    });\r\n    return result ? result : 'Age - empty';\r\n  }\r\n\r\n  onRendered() {\r\n    //\r\n  }\r\n\r\n  onExpandAll() {\r\n    const table = this.$refs.table;\r\n    if (!table) {\r\n      return;\r\n    }\r\n    (table as unknown as { expandAllGroups: () => void }).expandAllGroups();\r\n  }\r\n\r\n  onCollapseAll() {\r\n    const table = this.$refs.table;\r\n    if (!table) {\r\n      return;\r\n    }\r\n    (table as unknown as { collapseAllGroups: () => void }).collapseAllGroups();\r\n  }\r\n\r\n  get groupHeaderStyles(): Record<string, string> {\r\n    return {\r\n      'font-size': '18px',\r\n      'font-style': 'italic',\r\n      color: 'white',\r\n    };\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Horizontal and Vertical Scrolling\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/scrolling.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"0\"\r\n        :rowHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :scrollbarH=\"true\">\r\n        <ngx-datatable-column name=\"Name\" :width=\"300\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"City\" :width=\"300\" prop=\"address.city\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"State\" :width=\"300\" prop=\"address.state\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class HorzVertScrolling extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: ( data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  name: 'tabs-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Hidden By Default\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/tabs.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n\r\n      <div style=\"width:75%;margin:0 auto\">\r\n        <div>\r\n          <button type=\"button\" @click=\"tab1=true;tab2=false;tab3=false;\">Nothing</button>\r\n          <button type=\"button\" @click=\"tab2=true;tab1=false;tab3=false;\">Hidden</button>\r\n          <button type=\"button\" @click=\"tab3=true;tab1=false;tab2=false;\">v-if</button>\r\n        </div>\r\n\r\n        <div v-show=\"tab1\">\r\n          <p>Click a button to toggle table visibilities</p>\r\n        </div>\r\n\r\n        <div v-show=\"tab2\">\r\n          <h4>hidden Table</h4>\r\n          <ngx-datatable\r\n            class=\"material\"\r\n            :visibilityCheck=\"true\"\r\n            :rows=\"rows\"\r\n            columnMode=\"force\"\r\n            :headerHeight=\"50\"\r\n            :footerHeight=\"50\"\r\n            :rowHeight=\"50\"\r\n            :scrollbarV=\"true\">\r\n            <ngx-datatable-column name=\"Name\" width=\"200\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Gender\" width=\"300\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Age\" width=\"80\"></ngx-datatable-column>\r\n          </ngx-datatable>\r\n        </div>\r\n\r\n        <div v-if=\"tab3\">\r\n          <h4>v-if Table</h4>\r\n          <ngx-datatable\r\n            class=\"material\"\r\n            :rows=\"rows\"\r\n            columnMode=\"force\"\r\n            :headerHeight=\"50\"\r\n            :footerHeight=\"50\"\r\n            :rowHeight=\"50\"\r\n            :scrollbarV=\"true\">\r\n            <ngx-datatable-column name=\"Name\" width=\"200\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Gender\" width=\"300\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Age\" width=\"80\"></ngx-datatable-column>\r\n          </ngx-datatable>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  `\r\n})\r\nexport default class TabsDemoComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  tab1 = true;\r\n  tab2 = false;\r\n  tab3 = false;\r\n\r\n  created() {\r\n    this.fetch((data) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: ( data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'vue-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Virtual Scrolling with 10k Rows\r\n        <small>\r\n          <a href=\"https://github.com/begemmode/vue-ngx-datatable/blob/master/demo/basic/virtual.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class='material'\r\n        :rows='rows'\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"getRowHeight\"\r\n        :scrollbarV=\"true\"\r\n        @rendered=\"onRendered\">\r\n        <vue-datatable-column name=\"Name\" width=\"300\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <strong>{{scope.row.name}}</strong>\r\n          </template>\r\n        </vue-datatable-column>\r\n        <vue-datatable-column name=\"Gender\" width=\"300\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <!-- <strong>{{scope.row.name}}</strong> -->\r\n            <i v-html=\"scope.row.name\"></i>&nbsp;and&nbsp;<i>{{scope.row.gender}}</i>\r\n          </template>\r\n        </vue-datatable-column>\r\n        <vue-datatable-column name=\"Row Height\" prop=\"height\" width=\"80\">\r\n        </vue-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class VirtualScrollComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  expanded = {};\r\n  timeout: any;\r\n\r\n  created() {\r\n    this.fetch((data) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  onPage(event: unknown) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      console.log('paged!', event);\r\n    }, 100);\r\n  }\r\n\r\n  fetch(cb: ( data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      const rows = JSON.parse(req.response);\r\n\r\n      for(const row of rows) {\r\n        row.height = Math.floor(Math.random() * 80) + 50;\r\n      }\r\n\r\n      cb(rows);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getRowHeight(row: { height: number }) {\r\n    return row.height;\r\n  }\r\n\r\n  onRendered() {\r\n    //\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport { AppComponent } from './app.component';\r\n\r\n@Component({\r\n  components: {\r\n    app: AppComponent,\r\n  },\r\n})\r\nclass VueRootComponent extends Vue {\r\n}\r\nnew VueRootComponent({ el: '#app-main' }).$mount();\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Flex Column Width Distribution\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/column-flex.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        columnMode=\"flex\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        :rows=\"rows\">\r\n        <ngx-datatable-column name=\"Name\" :flexGrow=\"3\" :resizeable=\"true\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" :flexGrow=\"1\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" :flexGrow=\"1\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ColumnFlexComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Force Fill Column Width Distribution\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/column-force.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        :rows=\"rows\">\r\n        <ngx-datatable-column name=\"Name\" :width=\"100\" :resizeable=\"true\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" :width=\"100\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" :width=\"300\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ColumnForceComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <!-- <style>\r\n    .icon {\r\n      position:absolute;\r\n    }\r\n    .datatable-icon-down {\r\n      top: 0px;\r\n    }\r\n    .datatable-icon-up {\r\n      top: 40px;\r\n    }\r\n    .dragFromLeft .icon {\r\n      left:-13px;\r\n    }\r\n    </style> -->\r\n    <div>\r\n      <h3>\r\n        Reorder Column\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/column-reorder.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :loadingIndicator=\"loadingIndicator\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        :reorderable=\"reorderable\"\r\n        :swapColumns=\"swapColumns\">\r\n      </ngx-datatable>\r\n      <!-- <ng-template #targetMarkerTemplate let-class=\"class\">\r\n        <div [ngClass]=\"class\">\r\n          <div class=\"icon datatable-icon-down\"></div>\r\n          <div class=\"icon datatable-icon-up\"></div>\r\n        </div>\r\n      </ng-template> -->\r\n    </div>\r\n  `\r\n})\r\nexport default class ColumnReorderComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n  swapColumns: boolean = false;\r\n\r\n  columns = [\r\n    { prop: 'name' },\r\n    { name: 'Gender' },\r\n    { name: 'Company', sortable: false }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n      setTimeout(() => { this.loadingIndicator = false; }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Fixed Column Widths\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/column-standard.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columnMode=\"'standard'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\">\r\n        <ngx-datatable-column name=\"Name\" :width=\"300\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" :width=\"300\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" :width=\"300\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ColumnStandardComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Column Toggling\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/column-toggle.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          columnMode=\"force\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          rowHeight=\"auto\">\r\n          <ngx-datatable-column v-for=\"col of columns\" :key=\"col.name\" :name=\"col.name\" :visible=\"col.visible\">\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n      <div class='selected-column'>\r\n        <h4>Available Columns</h4>\r\n        <ul>\r\n          <li v-for='col of allColumns' :key=\"col.name\">\r\n            <input\r\n              type='checkbox'\r\n              :id=\"col.name\"\r\n              @click='toggle(col)'\r\n              :checked='isChecked(col)'\r\n            />\r\n            <label :attr.for=\"col.name\">{{col.name}}</label>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class ColumnToggleComponent extends Vue {\r\n\r\n  rows = [\r\n    {\r\n      name: 'Claudine Neal',\r\n      gender: 'female',\r\n      company: 'Sealoud'\r\n    },\r\n    {\r\n      name: 'Beryl Rice',\r\n      gender: 'female',\r\n      company: 'Velity'\r\n    }\r\n  ];\r\n\r\n  // columns = [\r\n  //   { name: 'Name' },\r\n  //   { name: 'Gender' },\r\n  //   { name: 'Company' }\r\n  // ];\r\n\r\n  allColumns = [\r\n    { name: 'Name', visible: true },\r\n    { name: 'Gender', visible: true },\r\n    { name: 'Company', visible: false }\r\n  ];\r\n\r\n  get columns() {\r\n    return this.allColumns; // .filter(c => c.visible);\r\n  }\r\n\r\n  toggle(col: { visible: boolean }) {\r\n    col.visible = !col.visible;\r\n    // this.columns = this.allColumns.filter(c => c.visible);\r\n    // this.$nextTick(() => this.columns = this.allColumns.filter(c => c.visible));\r\n    // const isChecked = this.isChecked(col);\r\n\r\n    // if(isChecked) {\r\n    //   this.columns = this.columns.filter(c => { \r\n    //     return c.name !== col.name; \r\n    //   });\r\n    // } else {\r\n    //   this.columns = [...this.columns, col];\r\n    // }\r\n  }\r\n\r\n  isChecked(col: { visible: boolean }) {\r\n    return col.visible;\r\n    // return this.columns.find(c => {\r\n    //   return c.name === col.name;\r\n    // });\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Column Pinning\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/pinning.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :scrollbarH=\"true\"\r\n        :rows=\"rows\">\r\n        <ngx-datatable-column\r\n          name=\"Name\"\r\n          :width=\"300\"\r\n          :frozenLeft=\"true\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column\r\n          name=\"Gender\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column\r\n          name=\"Age\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column\r\n          name=\"City\"\r\n          :width=\"150\"\r\n          prop=\"address.city\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column\r\n          name=\"State\"\r\n          :width=\"300\"\r\n          prop=\"address.state\"\r\n          :frozenRight=\"true\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ColumnPinningComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { PagedData } from './model/paged-data';\r\nimport { CorporateEmployee } from './model/corporate-employee';\r\nimport { Page } from './model/page';\r\nconst companyData = require('../../assets/data/company.json');\r\n\r\n/**\r\n * A server used to mock a paged data result from a server\r\n */\r\nexport class MockServerResultsService {\r\n\r\n    constructor(private timeout: number = 0) {\r\n    }\r\n\r\n    /**\r\n     * A method that mocks a paged server response\r\n     * @param page The selected page\r\n     * @returns {any} An observable containing the employee data\r\n     */\r\n    public getResults(page: Page, timeout: number = 0): Promise<PagedData<CorporateEmployee>> {\r\n        return this.getPagedData(page, timeout);\r\n    }\r\n\r\n    /**\r\n     * Package companyData into a PagedData object based on the selected Page\r\n     * @param page The page data used to get the selected data from companyData\r\n     * @returns {PagedData<CorporateEmployee>} An array of the selected data and page\r\n     */\r\n    private async getPagedData(page: Page, timeout: number = 0): Promise<PagedData<CorporateEmployee>> {\r\n        if (timeout) {\r\n            await this.delay(timeout);\r\n        }\r\n        const pagedData = new PagedData<CorporateEmployee>();\r\n        page.totalElements = companyData.length;\r\n        page.totalPages = page.totalElements / page.size;\r\n        const start = page.pageNumber * page.size;\r\n        const end = Math.min((start + page.size), page.totalElements);\r\n        for (let i = start; i < end; i++) {\r\n            const jsonObj = companyData[i];\r\n            // tslint:disable-next-line:max-line-length\r\n            const employee = new CorporateEmployee(jsonObj.id, jsonObj.name, jsonObj.gender, jsonObj.company, jsonObj.age);\r\n            pagedData.data.push(employee);\r\n        }\r\n        pagedData.page = page;\r\n        let resolveFunc: (data: PagedData<CorporateEmployee>) => void;\r\n        const promise = new Promise<PagedData<CorporateEmployee>>(\r\n            resolve => (resolveFunc = resolve)\r\n          );\r\n        setTimeout(() => resolveFunc(pagedData), this.timeout);\r\n        return promise;\r\n    }\r\n\r\n    private delay(timeout: number): Promise<{}> {\r\n        let resolveFunc: (value?: unknown) => void;;\r\n        const promise = new Promise(resolve => (resolveFunc = resolve));\r\n        setTimeout(() => resolveFunc(), timeout);\r\n        return promise;\r\n    }\r\n\r\n}\r\n","/**\r\n * A model for an individual corporate employee\r\n */\r\nexport class CorporateEmployee {\r\n    id: string;\r\n    name: string;\r\n    gender: string;\r\n    company: string;\r\n    age: number;\r\n\r\n    constructor(id: string, name: string, gender: string, company: string, age: number){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.gender = gender;\r\n        this.company = company;\r\n        this.age = age;\r\n    }\r\n}\r\n","/**\r\n * An object used to get page information from the server\r\n */\r\nexport class Page {\r\n    // The number of elements in the page\r\n    size: number = 0;\r\n    // The total number of elements\r\n    totalElements: number = 0;\r\n    // The total number of pages\r\n    totalPages: number = 0;\r\n    // The current page number\r\n    pageNumber: number = 0;\r\n}\r\n","import {Page} from './page';\r\n\r\n/**\r\n * An array of data with an associated page object used for paging\r\n */\r\nexport class PagedData<T> {\r\n    data = new Array<T>();\r\n    page = new Page();\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Client-side Paging\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/paging/paging-client.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style=\"height:100%;\">\r\n      <ngx-datatable\r\n        class=\"material ngx-flex\"\r\n        :rows=\"rows\"\r\n        :columns=\"[{name:'Name'},{name:'Gender'},{name:'Company'}]\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        :limit=\"30\">\r\n      </ngx-datatable>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class ClientPagingComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  page = 2;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport {MockServerResultsService} from './mock-server-results-service';\r\nimport {CorporateEmployee} from './model/corporate-employee';\r\nimport {Page} from './model/page';\r\n\r\n@Component({\r\n  name: 'paging-scrolling-novirtualization-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side Paging\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/paging/paging-server.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"[{name:'Name'},{name:'Gender'},{name:'Company'}]\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        :scrollbarV=\"true\"\r\n        :virtualization=\"false\"\r\n        :externalPaging=\"true\"\r\n        :count=\"page.totalElements\"\r\n        :offset=\"page.pageNumber\"\r\n        :limit=\"page.size\"\r\n        @page=\"setPage($event)\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class PagingScrollingNoVirtualizationComponent extends Vue {\r\n\r\n  page = new Page();\r\n  rows = new Array<CorporateEmployee>();\r\n  serverResultsService = new MockServerResultsService(100);\r\n\r\n  created() {\r\n    this.page.pageNumber = 0;\r\n    this.page.size = 20;\r\n  }\r\n\r\n  mounted() {\r\n    this.setPage({ offset: 0 });\r\n  }\r\n\r\n  /**\r\n   * Populate the table with new data based on the page number\r\n   * @param page The page to select\r\n   */\r\n  async setPage(pageInfo: { pageNumber?: number; offset: number }) {\r\n    this.page.pageNumber = pageInfo.offset;\r\n    const pagedData = await this.serverResultsService.getResults(this.page);\r\n    this.page = pagedData.page;\r\n    this.rows = pagedData.data;\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport {MockServerResultsService} from './mock-server-results-service';\r\nimport {CorporateEmployee} from './model/corporate-employee';\r\nimport {Page} from './model/page';\r\n\r\n@Component({\r\n  name: 'server-paging-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side Paging\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/paging/paging-server.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"[{name:'Name'},{name:'Gender'},{name:'Company'}]\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        :externalPaging=\"true\"\r\n        :count=\"page.totalElements\"\r\n        :offset=\"page.pageNumber\"\r\n        :limit=\"page.size\"\r\n        @page=\"setPage($event)\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ServerPagingComponent extends Vue {\r\n\r\n  page = new Page();\r\n  rows = new Array<CorporateEmployee>();\r\n  serverResultsService = new MockServerResultsService(100);\r\n\r\n  created() {\r\n    this.page.pageNumber = 0;\r\n    this.page.size = 20;\r\n  }\r\n\r\n  mounted() {\r\n    this.setPage({ offset: 0 });\r\n  }\r\n\r\n  /**\r\n   * Populate the table with new data based on the page number\r\n   * @param page The page to select\r\n   */\r\n  async setPage(pageInfo: { pageNumber?: number; offset: number }) {\r\n    this.page.pageNumber = pageInfo.offset;\r\n    const pagedData = await this.serverResultsService.getResults(this.page);\r\n    this.page = pagedData.page;\r\n    this.rows = pagedData.data;\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport {MockServerResultsService} from './mock-server-results-service';\r\nimport {CorporateEmployee} from './model/corporate-employee';\r\nimport {Page} from './model/page';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Virtual Server-side Paging\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/paging/paging-virtual.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :externalPaging=\"true\"\r\n        :loadingIndicator=\"isLoading > 0\"\r\n        :count=\"totalElements\"\r\n        :offset=\"pageNumber\"\r\n        @page=\"setPage($event)\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class VirtualPagingComponent extends Vue {\r\n\r\n  page: Page = null;\r\n  rows: Array<CorporateEmployee> = null;\r\n  columns = [{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }];\r\n  cache: any = {};\r\n  serverResultsService: MockServerResultsService;\r\n  isLoading = 0;\r\n  totalElements: number = 0;\r\n\r\n  created() {\r\n    this.serverResultsService = new MockServerResultsService();\r\n    setTimeout(() => {\r\n      this.page = new Page();\r\n      this.page.pageNumber = 4;\r\n    }, 1000);\r\n  }\r\n\r\n  get pageNumber() {\r\n    return this?.page?.pageNumber;\r\n  }\r\n\r\n  /**\r\n   * Populate the table with new data based on the page number\r\n   * @param page The page to select\r\n   */\r\n  async setPage(pageInfo: { pageNumber?: number; offset: number; pageSize: number }) {\r\n    if (!this.page || (this.rows?.length && pageInfo.offset === this.page.pageNumber)) {\r\n      return;\r\n    }\r\n    this.page.pageNumber = pageInfo.offset;\r\n    this.page.size = pageInfo.pageSize;\r\n\r\n    // cache results\r\n    if (this.cache[this.page.pageNumber]) return;\r\n    \r\n    // counter of pages loading\r\n    this.isLoading++;\r\n\r\n    let prevPagedData = null;\r\n    let page = this.page.pageNumber;\r\n    // for last page we will load prev page data too\r\n    if (pageInfo.offset === Math.floor(this.page.totalPages) && pageInfo.offset - 1 > 0 && !this.cache[pageInfo.offset - 1]) {\r\n      this.page.pageNumber = pageInfo.offset - 1;\r\n      page = this.page.pageNumber;\r\n      prevPagedData = await this.serverResultsService.getResults(this.page, new Date(Date.now() + 1000 * Math.random()).getMilliseconds());\r\n      this.page.pageNumber = pageInfo.offset;\r\n    }\r\n\r\n    const pagedData = await this.serverResultsService.getResults(this.page, new Date(Date.now() + 1000 * Math.random()).getMilliseconds());\r\n    if (prevPagedData && Array.isArray(prevPagedData.data)) {\r\n      pagedData.data = [...prevPagedData.data, ...pagedData.data]; \r\n    }\r\n\r\n    this.totalElements = pagedData.page.totalElements;\r\n\r\n    // create array to store data if missing\r\n    if (!this.rows) {\r\n      // length should be total count\r\n      this.rows = new Array<CorporateEmployee>(this.page.totalElements || 0);\r\n    }\r\n    \r\n    // calc start\r\n    const start = page * this.page.size;\r\n\r\n    // copy rows\r\n    const rows = [...this.rows];\r\n\r\n    // insert rows into new position\r\n    rows.splice(start, pagedData.data.length, ...pagedData.data);\r\n\r\n    // set rows to our new rows\r\n    this.rows = rows;\r\n\r\n    // add flag for results\r\n    this.cache[page] = true;\r\n    this.cache[pageInfo.offset] = true;\r\n    this.isLoading--;\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Selection Callback to Before Row Selection Check\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-before-select-check.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          :columnMode=\"'force'\"\r\n          :columns=\"columns\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"5\"\r\n          :beforeSelectRowCheck=\"beforeSelectCheck\"\r\n          :selected=\"selected\"\r\n          selectionType=\"single\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class BeforeSelectionCheckComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  selected: Array<Record<string, unknown>> = [];\r\n\r\n  columns: any[] = [\r\n    { prop: 'name'} , \r\n    { name: 'Company' }, \r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  beforeSelectCheck(newRow: Record<string, unknown>, oldSelected: Record<string, unknown>[]): boolean {\r\n    console.log('Before select check', newRow, oldSelected);\r\n    if (newRow.name !== 'Ethel Price') {\r\n      return true;\r\n    }\r\n    return confirm('Do you want to select Ethel Price?');\r\n  }\r\n\r\n}\r\n","import { TableColumn } from 'types/table-column.type';\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Cell Selection\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-cell.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material selection-cell\"\r\n        :rows=\"rows\"\r\n        columnMode=\"force\"\r\n        :columns=\"columns\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :selected=\"selected\"\r\n        :scrollbarV=\"true\"\r\n        selectionType=\"cell\"\r\n        @select=\"onSelect($event)\"\r\n        @activate=\"onActivate($event)\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class CellSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  selected: Array<Record<string, unknown>> = [];\r\n  columns: TableColumn[] = [\r\n    { prop: 'name'} , \r\n    { name: 'Company' }, \r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onFocus(event: FocusEvent) {\r\n    console.log('foooccuuuss', event);\r\n  }\r\n\r\n  onSelect(event: Array<Record<string, unknown>>) {\r\n    console.log('Event: select', event, this.selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Event: activate', event);\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Checkbox Selection with \"check is no select\" mode\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-chkbox.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" @click=\"add()\">Add</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"update()\">Update</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"remove()\">Remove</a> \r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <ngx-datatable\r\n          style=\"width: 90%\"\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          columnMode=\"force\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          rowHeight=\"auto\"\r\n          :limit=\"5\"\r\n          :selected=\"selected\"\r\n          :checked=\"checked\"\r\n          selectionType=\"single\"\r\n          checkMode=\"checkNoSelect\"\r\n          :selectAllRowsOnPage=\"true\"\r\n          :displayCheck=\"displayCheck\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'\r\n          @check='onCheck($event)'>\r\n          <ngx-datatable-column\r\n            :width=\"30\"\r\n            :sortable=\"false\"\r\n            :canAutoResize=\"false\"\r\n            :draggable=\"false\"\r\n            :resizeable=\"false\"\r\n            :headerCheckboxable=\"true\"\r\n            :checkboxable=\"true\">\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections <small>({{ selected ? selected.length: 0 }})</small></h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected || !selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n      <div class='selected-column'>\r\n        <h4>Checked rows <small>({{ checked ? checked.length: 0 }})</small></h4>\r\n        <ul>\r\n          <li v-for='check of checked'>\r\n            {{check.name}}\r\n          </li>\r\n          <li v-if=\"!checked || !checked.length\">No checked rows</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class CheckNoSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  selected: Array<Record<string, unknown>> = [];\r\n  checked: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onCheck({ checked }: { checked: Array<Record<string, unknown>> }) {\r\n    console.log('Check Event', checked, this.checked);\r\n\r\n    this.checked.splice(0, this.checked.length);\r\n    this.checked.push(...checked);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  add() {\r\n    this.selected.push(this.rows[1], this.rows[3]);\r\n  }\r\n\r\n  update() {\r\n    this.selected = [ this.rows[1], this.rows[3] ];\r\n  }\r\n\r\n  remove() {\r\n    this.selected = [];\r\n  }\r\n\r\n  displayCheck(row: Record<string, unknown>) {\r\n    return row.name !== 'Ethel Price';\r\n  }\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Custom Checkbox Selection\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-chkbox-template.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" @click=\"add()\">Add</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"update()\">Update</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"remove()\">Remove</a> \r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <ngx-datatable\r\n          style=\"width: 90%\"\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          :columnMode=\"'force'\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"5\"\r\n          :selected=\"selected\"\r\n          :selectionType=\"'checkbox'\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n          <ngx-datatable-column :width=\"30\" \r\n                :sortable=\"false\" \r\n                :canAutoResize=\"false\" :draggable=\"false\" :resizeable=\"false\">\r\n              <template slot=\"header\">\r\n                <input id=\"chb\" type=\"checkbox\" :checked=\"allSelected\" @change=\"selectAll\"/>\r\n              </template>\r\n              <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n                <input type=\"checkbox\" :checked=\"isSelected(scope.row)\" @change=\"onCheckboxChange($event, scope.row)\"/>\r\n              </template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections <small>({{ selected ? selected.length : 0 }})</small></h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected || !selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class CustomCheckboxSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  selected: Array<Record<string, unknown>> = [];\r\n  allSelected = false;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  selectAll() {\r\n    this.allSelected = !this.allSelected;\r\n    this.allSelected ? this.selected = [...this.rows] : this.selected = [];\r\n  }\r\n\r\n  isSelected(row: Record<string, unknown>) {\r\n    return this.selected.find(r => r === row);\r\n  }\r\n\r\n  onCheckboxChange(event: unknown, row: Record<string, unknown>) {\r\n    const found = this.isSelected(row);\r\n    if (!found) {\r\n      this.selected.push(row);\r\n    } else {\r\n      const i = this.selected.findIndex(r => r === row);\r\n      this.selected.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  add() {\r\n    this.selected.push(this.rows[1], this.rows[3]);\r\n  }\r\n\r\n  update() {\r\n    this.selected = [this.rows[1], this.rows[3]];\r\n  }\r\n\r\n  remove() {\r\n    this.selected = [];\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Checkbox Selection\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-chkbox.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" @click=\"add()\">Add</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"update()\">Update</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"remove()\">Remove</a> \r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <ngx-datatable\r\n          style=\"width: 90%\"\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          :columnMode=\"'force'\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"5\"\r\n          :selected=\"selected\"\r\n          selectionType=\"checkbox\"\r\n          :selectAllRowsOnPage=\"true\"\r\n          :displayCheck=\"displayCheck\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n          <ngx-datatable-column\r\n            :width=\"30\"\r\n            :sortable=\"false\"\r\n            :canAutoResize=\"false\"\r\n            :draggable=\"false\"\r\n            :resizeable=\"false\"\r\n            :headerCheckboxable=\"true\"\r\n            :checkboxable=\"true\">\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections <small>({{ selected ? selected.length: 0 }})</small></h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected || !selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class CheckboxSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  selected: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  add() {\r\n    this.selected.push(this.rows[1], this.rows[3]);\r\n  }\r\n\r\n  update() {\r\n    this.selected = [ this.rows[1], this.rows[3] ];\r\n  }\r\n\r\n  remove() {\r\n    this.selected = [];\r\n  }\r\n\r\n  displayCheck(row: Record<string, unknown>) {\r\n    return row.name !== 'Ethel Price';\r\n  }\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Selection Callback to Disable Selections\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-disabled.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          :columnMode=\"'force'\"\r\n          :columns=\"columns\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"5\"\r\n          :selectCheck=\"checkSelectable\"\r\n          :selected=\"selected\"\r\n          :selectionType=\"'multi'\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class MultiDisableSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  selected: Array<Record<string, unknown>> = [];\r\n\r\n  columns: any[] = [\r\n    { prop: 'name'} , \r\n    { name: 'Company' }, \r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  checkSelectable(event: Record<string, unknown>) {\r\n    console.log('Checking if selectable', event);\r\n    return event.name !== 'Ethel Price';\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Multi Click Selection\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-multi-click.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <div class=\"info\">\r\n          <p>This demonstrates multi selection table, where any click event causes a selection.</p>\r\n        </div>\r\n\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          :columnMode=\"'force'\"\r\n          :columns=\"columns\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"5\"\r\n          :selected=\"selected\"\r\n          :selectionType=\"'multiClick'\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class MultiClickSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  selected: Array<Record<string, unknown>> = [];\r\n\r\n  columns: any[] = [\r\n    { prop: 'name'} , \r\n    { name: 'Company' }, \r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Multi Select\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-multi.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <div class=\"info\">\r\n          <p>This demonstrates multi selection table, use CTRL or SHIFT click to select multiple items.</p>\r\n        </div>\r\n\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          :columnMode=\"'force'\"\r\n          :columns=\"columns\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"5\"\r\n          :selected=\"selected\"\r\n          :selectionType=\"'multi'\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class MultiSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  selected: Array<Record<string, unknown>> = [];\r\n\r\n  columns: any[] = [\r\n    { prop: 'name'} , \r\n    { name: 'Company' }, \r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Single Row Selection\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-single.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <div class=\"info\">\r\n          <p>This demonstrates a simple single selection table with the 3rd row selected by default.</p>\r\n        </div>\r\n\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          columnMode=\"force\"\r\n          :columns=\"columns\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"50\"\r\n          :scrollbarV=\"true\"\r\n          :selected=\"selected\"\r\n          selectionType=\"single\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class SingleSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  selected: Array<Record<string, unknown>> = [];\r\n\r\n  columns: any[] = [\r\n    { prop: 'name'} , \r\n    { name: 'Company' }, \r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.selected = [data[2]];\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    // console.log('Select Event', selected, this.selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    // console.log('Activate Event', event);\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Client-side Sorting\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/sorting/sorting-client.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        :sortType=\"'multi'\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :goToFirstAfterSort=\"false\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ClientSortingComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  columns = [\r\n    { name: 'Company' },\r\n    { name: 'Name' },\r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      const data = JSON.parse(req.response);\r\n      cb(data);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Custom Sorting Comparator\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/sorting/sorting-comparator.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class SortingComparatorComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  columns = [\r\n    { name: 'Company', comparator: this.companyComparator.bind(this) },\r\n    { name: 'Name', sortable: false },\r\n    { name: 'Gender', sortable: false }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      const data = JSON.parse(req.response);\r\n      cb(data.splice(0, 20));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  companyComparator(propA: string, propB: string) {\r\n    console.log('Sorting Comparator', propA, propB);\r\n\r\n    // Just a simple sort function comparisoins\r\n    if (propA.toLowerCase() < propB.toLowerCase()) return -1;\r\n    if (propA.toLowerCase() > propB.toLowerCase()) return 1;\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Client-side Sorting\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/sorting/sorting-default.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :sorts=\"[{prop: 'name', dir: 'desc'}]\">\r\n\r\n        <ngx-datatable-column name=\"Company\">\r\n          <!-- <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            {{ scope.row.company }}\r\n          </template> -->\r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Name\" :sortable=\"true\">\r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Gender\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class DefaultSortingComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      const data = JSON.parse(req.response);\r\n      cb(data);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { ISortEvent } from 'types/sort-prop-dir.type';\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side Sorting\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/sorting/sorting-server.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        :externalSorting=\"true\"\r\n        :loadingIndicator=\"loading\"\r\n        @sort=\"onSort($event)\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ServerSortingComponent extends Vue {\r\n\r\n  loading: boolean = false;\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  columns = [\r\n    { name: 'Company', sortable: true },\r\n    { name: 'Name', sortable: true },\r\n    { name: 'Gender', sortable: true }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      const data = JSON.parse(req.response);\r\n      cb(data.splice(0, 20));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSort(event: { sorts: ISortEvent }) {\r\n    // event was triggered, start sort sequence\r\n    console.log('Sort Event', event);\r\n    this.loading = true;\r\n    // emulate a server request with a timeout\r\n    setTimeout(() => {\r\n      const rows = [...this.rows];\r\n      // this is only for demo purposes, normally\r\n      // your server would return the result for\r\n      // you and you would just set the rows prop\r\n      const sort = event.sorts[0];\r\n      rows.sort((a, b) => {\r\n        return (a[sort.prop] as string).localeCompare(b[sort.prop] as string) * (sort.dir === 'desc' ? -1 : 1);\r\n      });\r\n\r\n      this.rows = rows;\r\n      this.loading = false;\r\n    }, 1000);\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\nimport './summary-row-inline-html.component.scss';\r\n\r\n@Component({\r\n  name: 'summary-row-inline-html',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>Inline HTML template\r\n        <small>\r\n        <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/summary/summary-row-inline-html.component.ts\">\r\n          Source\r\n        </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :summaryRow=\"enableSummary\"\r\n        :summaryPosition=\"summaryPosition\"\r\n        summaryHeight=\"auto\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        :rows=\"rows\">\r\n        <ngx-datatable-column prop=\"name\">\r\n          <template v-slot:summary=\"scope\">\r\n            <div class=\"name-container\">\r\n              <div class=\"chip\" v-for=\"name of names\">\r\n                <span class=\"chip-content\">{{ name }}</span>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" :summaryFunc=\"summaryForGender\"></ngx-datatable-column>\r\n        <ngx-datatable-column prop=\"age\" :summaryFunc=\"avgAge\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n})\r\n\r\nexport default class SummaryRowInlineHtmlComponent extends Vue {\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  enableSummary = true;\r\n  summaryPosition = 'top';\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  get names(): string[] {\r\n    return this.rows\r\n      .map(row => row['name'])\r\n      .map(fullName => (fullName as string).split(' ')[1]);\r\n  }\r\n\r\n  summaryForGender(cells: string[]) {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n\r\n  avgAge(cells: number[]): number {\r\n    const filteredCells = cells.filter(cell => !!cell);\r\n    return filteredCells.reduce((sum, cell) => sum += cell, 0) / filteredCells.length;\r\n  }\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport {MockServerResultsService} from '../paging/mock-server-results-service';\r\nimport {CorporateEmployee} from '../paging/model/corporate-employee';\r\nimport {Page} from '../paging/model/page';\r\n\r\n@Component({\r\n  name: 'summary-row-server-paging-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side paging\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/summary/summary-row-server-paging.component.ts\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :summaryRow=\"true\"\r\n        summaryHeight=\"auto\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        :externalPaging=\"true\"\r\n        :count=\"page.totalElements\"\r\n        :offset=\"page.pageNumber\"\r\n        :limit=\"page.size\"\r\n        @page='setPage($event)'>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class SummaryRowServerPagingComponent extends Vue {\r\n\r\n  page = new Page();\r\n  rows = new Array<CorporateEmployee>();\r\n  serverResultsService = new MockServerResultsService();\r\n\r\n  columns = [\r\n    // NOTE: cells for current page only !\r\n    { name: 'Name', summaryFunc: (cells: Array<string>) => `${cells.length} total` },\r\n    { name: 'Gender', summaryFunc: () => this.getGenderSummary() },\r\n    { name: 'Company', summaryFunc: (): string => null }\r\n  ];\r\n\r\n  created() {\r\n    this.page.pageNumber = 0;\r\n    this.page.size = 20;\r\n  }\r\n\r\n  mounted() {\r\n    this.setPage({ offset: 0 });\r\n  }\r\n\r\n  /**\r\n   * Populate the table with new data based on the page number\r\n   * @param page The page to select\r\n   */\r\n  async setPage(pageInfo: { offset: number }) {\r\n    this.page.pageNumber = pageInfo.offset;\r\n    const pagedData = await this.serverResultsService.getResults(this.page);\r\n    this.page = pagedData.page;\r\n    this.rows = pagedData.data;\r\n  }\r\n\r\n  getGenderSummary(): string {\r\n    // NOTE: there should be logic to get required informations from server\r\n    return '10 males, 10 females';\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\nimport './summary-row-simple.component.scss';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>Simple Summary Row\r\n        <small>\r\n        <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/summary/summary-row-simple.component.ts\">\r\n          Source\r\n        </a>\r\n        </small>\r\n      </h3>\r\n      <div class=\"controls\">\r\n        <div>\r\n          <input\r\n            id=\"enable-summary\"\r\n            type=\"checkbox\"\r\n            :checked=\"enableSummary\"\r\n            @change=\"enableSummary = !enableSummary\">\r\n          <label for=\"enable-summary\">Enable Summary Row</label>\r\n        </div>\r\n        <div>\r\n          <label for=\"position-select\">Position</label>\r\n          <select id=\"position-select\" @change=\"summaryPosition = $event.target.value\">\r\n            <option :value=\"'top'\">Top</option>\r\n            <option :value=\"'bottom'\">Bottom</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :summaryRow=\"enableSummary\"\r\n        :summaryPosition=\"summaryPosition\"\r\n        :summaryHeight=\"'auto'\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        :rows=\"rows\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n})\r\n\r\nexport default class SummaryRowSimpleComponent extends Vue {\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  columns = [\r\n    { prop: 'name', summaryFunc: null, },\r\n    { name: 'Gender', summaryFunc: (cells: Array<string>) => this.summaryForGender(cells) },\r\n    { prop: 'age', summaryFunc: (cells: Array<number>) => this.avgAge(cells) },\r\n  ];\r\n\r\n  enableSummary = true;\r\n  summaryPosition = 'top';\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSummaryStateChange(a: unknown) {\r\n    console.log(a);\r\n  }\r\n\r\n  private summaryForGender(cells: string[]) {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n\r\n  private avgAge(cells: number[]): number {\r\n    const filteredCells = cells.filter(cell => !!cell);\r\n    return filteredCells.reduce((sum, cell) => sum += cell, 0) / filteredCells.length;\r\n  }\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  name: 'inline-templates-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Expressive Templates\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/templates/template-dom.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :limit=\"5\"\r\n        rowHeight=\"auto\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\">\r\n          <template v-slot:header=\"scope\">\r\n            <span>Holla! {{scope.column.name}}</span>\r\n          </template>\r\n          <template v-slot:headerAppend=\"scope\">\r\n            <button>+</button>\r\n          </template>\r\n          <template v-slot:default=\"scope\">\r\n            <span v-if=\"scope.row\">Hi: <strong>{{scope.row.name}}</strong></span>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\">\r\n          <template v-slot:header=\"scope\">\r\n            <span>{{scope.column.name}}</span>\r\n          </template>\r\n          <template v-slot:default=\"scope\">\r\n            <div v-if=\"scope.row\">My name is: <i v-html=\"scope.row.name\"></i> and <i>{{scope.row.gender}}</i>\r\n              <br>\r\n              <div>{{joke}}</div>\r\n            </div>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\">\r\n          <template v-slot:default=\"scope\">\r\n            <div v-if=\"scope.row\" style=\"width:100%;height:40px;border:solid 1px #ddd;margin:5px;padding:3px\">\r\n              <div style=\"background:#999;height:10px\" :style=\"{'width': scope.row.age + '%'}\"></div>\r\n              <span>{{scope.row.age}}</span>\r\n            </div>\r\n          </template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class InlineTemplatesComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  joke = 'knock knock';\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 30);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  name: 'template-ref-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        TemplateRef via Column Property\r\n         <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/templates/template-obj.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\">\r\n      </ngx-datatable>\r\n\r\n      <slot name=\"hdrTpl\" v-bind:column=\"column\">\r\n        <strong>Fancy</strong>: {{column.name}} !!\r\n      </slot>\r\n\r\n      <slot name=\"editTmpl\">\r\n        <img\r\n          v-if=\"scope.value === 'male'\"\r\n          width=\"150\"\r\n          src=\"https://media.giphy.com/media/I8nepxWwlEuqI/giphy.gif\"\r\n        />\r\n        <img\r\n          v-if=\"scope.value === 'female'\"\r\n          width=\"150\"\r\n          src=\"https://media.giphy.com/media/sxSVG3XHf7yww/giphy.gif\"\r\n        />\r\n      </slot>\r\n    </div>\r\n  `\r\n})\r\nexport default class TemplateRefTemplatesComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  columns: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.columns = [{\r\n      cellTemplate: this.$slots.editTmpl,\r\n      headerTemplate: this.$slots.hdrTpl,\r\n      name: 'Gender'\r\n    }];\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  get column() {\r\n    return { name: 'columnName' };\r\n  }\r\n\r\n  get scope() {\r\n    return { value: 'male' };\r\n  }\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Flex Column Width Distribution\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/column-flex.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :columnMode=\"'flex'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        treeFromRelation=\"manager\"\r\n        treeToRelation=\"name\"\r\n        :rows=\"rows\"\r\n        @tree-action=\"onTreeAction($event)\">\r\n        <ngx-datatable-column name=\"Name\" :flexGrow=\"3\" :isTreeColumn=\"true\" :sortable=\"true\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            {{scope.row.name}}\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" :flexGrow=\"1\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" :flexGrow=\"1\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    '.icon {height: 10px; width: 10px; }',\r\n    '.disabled {opacity: 0.5; }'\r\n  ],\r\n\r\n})\r\nexport default class ClientTreeComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company_tree.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onTreeAction(event: any) {\r\n    const index = event.rowIndex;\r\n    const row = event.row;\r\n    if (row.treeStatus === 'collapsed') {\r\n      row.treeStatus = 'expanded';\r\n    } else {\r\n      row.treeStatus = 'collapsed';\r\n    }\r\n    this.rows = [...this.rows];\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Full Screen\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/tree/fullscreen.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material fullscreen\"\r\n        style=\"top: 52px\"\r\n        columnMode=\"standard\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"0\"\r\n        :rowHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :scrollbarH=\"true\"\r\n        :rows=\"rows\"\r\n        treeFromRelation=\"parentId\"\r\n        treeToRelation=\"id\"\r\n        :lazyTree=\"true\"\r\n        @tree-action=\"onTreeAction($event)\">\r\n        <ngx-datatable-column name=\"Id\" :width=\"80\"></ngx-datatable-column>\r\n        <ngx-datatable-column\r\n          name=\"Name\"\r\n          :isTreeColumn=\"true\"\r\n          :width=\"300\"\r\n          :treeLevelIndent=\"20\">\r\n          <!-- <ng-template ngx-datatable-tree-toggle let-tree=\"cellContext\">\r\n            <button [disabled]=\"tree.treeStatus==='disabled'\" (click)=\"tree.onTreeAction()\">\r\n              <span *ngIf=\"tree.treeStatus==='loading'\">\r\n                ...\r\n              </span>\r\n              <span *ngIf=\"tree.treeStatus==='collapsed'\">\r\n                ↑\r\n              </span>\r\n              <span *ngIf=\"tree.treeStatus==='expanded'\">\r\n                ↓\r\n              </span>\r\n              <span *ngIf=\"tree.treeStatus==='disabled'\">\r\n                ⃠\r\n              </span>\r\n            </button>\r\n          </ng-template> -->\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"City\" :width=\"300\" prop=\"address.city\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"State\" :width=\"300\" prop=\"address.state\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    '.icon {height: 10px; width: 10px; }',\r\n    '.disabled {opacity: 0.5; }'\r\n  ],\r\n})\r\nexport default class FullScreenTreeComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  lastIndex = 15;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      data = data.slice(1, this.lastIndex);\r\n      this.rows = data.map((d) => {\r\n        this.$set(d, 'treeStatus', 'collapsed');\r\n        d.parentId = null;\r\n        return d;\r\n      });\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      setTimeout(() => {\r\n        cb(JSON.parse(req.response));\r\n      }, 500);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onTreeAction(event: any) {\r\n    const index = event.rowIndex;\r\n    const row = event.row;\r\n    if (row.treeStatus === 'collapsed') {\r\n      row.treeStatus = 'loading';\r\n      this.fetch((data) => {\r\n        data = data.slice(this.lastIndex, this.lastIndex + 3)\r\n          .map((d) => {\r\n            this.$set(d, 'treeStatus', 'collapsed');\r\n            d.parentId = row.id;\r\n            return d;\r\n          });\r\n        this.lastIndex = this.lastIndex + 3;\r\n        row.treeStatus = 'expanded';\r\n        this.rows = [...this.rows, ...data];\r\n      });\r\n    } else {\r\n      row.treeStatus = 'collapsed';\r\n      this.rows = [...this.rows];\r\n    }\r\n  }\r\n\r\n}\r\n","import { IRowContext } from 'types/row-context.type';\r\nimport { TableColumn } from 'types/table-column.type';\r\nimport { Keys } from 'utils/keys';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\n\r\nexport type TreeStatus = 'collapsed' | 'expanded' | 'loading' | 'disabled';\r\n\r\n@Component\r\nexport default class DataTableBodyCellComponent extends Vue {\r\n  @Prop() column: TableColumn;\r\n  @Prop() rowContext: IRowContext;\r\n  @Prop() tabIndex: string;\r\n  @Prop() cellSlot: (obj: Record<string, unknown>) => VNode[];\r\n  @Prop() renderTracking: boolean;\r\n  @Prop() displayCheck: (row: Record<string, unknown>, column?: TableColumn, value?: unknown) => boolean;\r\n\r\n  sanitizedValue: string = null;\r\n  value: unknown = null;\r\n  // sortDir: SortDirection = null;\r\n  isFocused = false;\r\n  // activateFn = this.activate.emit.bind(this.activate); todo\r\n\r\n  @Watch('rowContext.row', { deep: true, immediate: true }) onRowChanged(): void {\r\n    this.checkValueUpdates();\r\n  }\r\n\r\n  created(): void {\r\n    if (this.cellSlot) {\r\n      this.$slots.default = this.cellSlot({\r\n        row: this.rowContext?.row ?? {},\r\n        column: this.column,\r\n        rowIndex: this.rowContext.rowIndex,\r\n        expanded: this.rowContext.expanded,\r\n        group: this.rowContext.group,\r\n        value: this.value,\r\n        updateCell: this.$forceUpdate.bind(this),\r\n      });\r\n    }\r\n    if (this.renderTracking) {\r\n      this.$emit('cell-created', this.column);\r\n    }\r\n  }\r\n\r\n  beforeUpdate(): void {\r\n    if (this.cellSlot) {\r\n      this.$slots.default = this.cellSlot({\r\n        row: this.rowContext?.row ?? {},\r\n        column: this.column,\r\n        rowIndex: this.rowContext.rowIndex,\r\n        expanded: this.rowContext.expanded,\r\n        group: this.rowContext.group,\r\n        value: this.value,\r\n        updateCell: this.$forceUpdate.bind(this),\r\n      });\r\n    }\r\n    if (this.renderTracking) {\r\n      this.$emit('cell-updated', this.column);\r\n    }\r\n  }\r\n\r\n  checkValueUpdates(): void {\r\n    let value = '';\r\n\r\n    if (!this.rowContext || !this.column) {\r\n      value = '';\r\n    } else {\r\n      // todo: make transform by vue filters\r\n      // const val = this.column.$$valueGetter(this.row, this.column.prop);\r\n      // const userPipe: PipeTransform = this.column.pipe;\r\n\r\n      // if (userPipe) {\r\n      //   value = userPipe.transform(val);\r\n      // } else if (value !== undefined) {\r\n      //   value = val;\r\n      // }\r\n      value = this.column.$$valueGetter(this.rowContext.row, this.column.prop) as string;\r\n    }\r\n    if (this.value !== value) {\r\n      this.value = value;\r\n      // eslint-disable-next-line no-undefined\r\n      this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\r\n    }\r\n  }\r\n\r\n  stripHtml(html: string): string {\r\n    if (!html.replace) {\r\n      return html;\r\n    }\r\n    return html.replace(/<\\/?[^>]+(>|$)/g, '');\r\n  }\r\n\r\n  onFocus(): void {\r\n    this.isFocused = true;\r\n  }\r\n\r\n  onBlur(): void {\r\n    this.isFocused = false;\r\n  }\r\n\r\n  onClick(event: MouseEvent): void {\r\n    // props.context.isFocused = true;\r\n    // props.context.abcd = true;\r\n    this.$emit('activate', {\r\n      type: 'click',\r\n      event,\r\n      row: this.rowContext.row,\r\n      rowHeight: this.rowContext.rowHeight,\r\n      column: this.column,\r\n      cellElement: this.$el,\r\n      value: this.value,\r\n      group: this.rowContext.group,\r\n    });\r\n  }\r\n\r\n  onDblClick(event: MouseEvent): void {\r\n    this.$emit('activate', {\r\n      type: 'dblclick',\r\n      event,\r\n      row: this.rowContext.row,\r\n      rowHeight: this.rowContext.rowHeight,\r\n      column: this.column,\r\n      cellElement: this.$el,\r\n      value: this.value,\r\n      group: this.rowContext.group,\r\n    });\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n    const isTargetCell = event.target === this.$el;\r\n    const isAction =\r\n      keyCode === Keys.return ||\r\n      keyCode === Keys.down ||\r\n      keyCode === Keys.up ||\r\n      keyCode === Keys.left ||\r\n      keyCode === Keys.right ||\r\n      keyCode === Keys.pageUp ||\r\n      keyCode === Keys.pageDown;\r\n\r\n    if (isAction && isTargetCell) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      this.$emit('activate', {\r\n        type: 'keydown',\r\n        event,\r\n        row: this.rowContext.row,\r\n        rowIndex: this.rowContext.rowIndex,\r\n        rowHeight: this.rowContext.rowHeight,\r\n        column: this.column,\r\n        cellElement: this.$el,\r\n        value: this.value,\r\n        group: this.rowContext.group,\r\n      });\r\n    }\r\n  }\r\n\r\n  onCheckboxChange(event: MouseEvent): void {\r\n    this.$emit('activate', {\r\n      type: 'checkbox',\r\n      event,\r\n      row: this.rowContext.row,\r\n      rowHeight: this.rowContext.rowHeight,\r\n      column: this.column,\r\n      cellElement: this.$el,\r\n      treeStatus: this.rowContext.treeStatus,\r\n      value: this.value,\r\n      group: this.rowContext.group,\r\n    });\r\n  }\r\n\r\n  onTreeAction(event: MouseEvent): void {\r\n    this.$emit('tree-action', { event, row: this.rowContext.row });\r\n  }\r\n\r\n  onMouseEnter(event: MouseEvent): void {\r\n    this.$emit('mouseenter', { event, row: this.rowContext.row });\r\n  }\r\n\r\n  get cssClasses(): Record<string, boolean> {\r\n    if (!this.rowContext) {\r\n      return null;\r\n    }\r\n    const result: Record<string, boolean> = {};\r\n    let func: (data: Record<string, unknown>) => string | Record<string, unknown>;\r\n    if (this.column.cellClass) {\r\n      let cssClass = this.column.cellClass;\r\n      if (!Array.isArray(cssClass)) {\r\n        cssClass = [cssClass];\r\n      }\r\n      (cssClass as Array<(data: Record<string, unknown>) => string | Record<string, unknown>>).forEach(value => {\r\n        func = null;\r\n        if (typeof value === 'string') {\r\n          result[value] = true;\r\n        } else if (Array.isArray(value)) {\r\n          (value as Array<string>).forEach(val => {\r\n            result[val] = true;\r\n          });\r\n        } else if (typeof value === 'function') {\r\n          func = value;\r\n        }\r\n        if (func) {\r\n          const res = func({\r\n            row: this.rowContext?.row,\r\n            group: this.rowContext?.group,\r\n            column: this.column,\r\n            value: this.value,\r\n            rowHeight: this.rowContext?.rowHeight,\r\n          });\r\n\r\n          if (typeof res === 'string') {\r\n            result[res] = true;\r\n          } else if (typeof res === 'object') {\r\n            const keys = Object.keys(res);\r\n            for (const k of keys) {\r\n              if (res[k] === true) {\r\n                result[` ${k}`] = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // result['sort-active'] = !this.sortDir;\r\n    result['active'] = this.isFocused;\r\n    // result['sort-asc'] = this.sortDir === SortDirection.asc;\r\n    // result['sort-desc'] = this.sortDir === SortDirection.desc;\r\n    return result;\r\n  }\r\n\r\n  get styles(): Record<string, string | number> {\r\n    if (!this.rowContext) {\r\n      return {};\r\n    }\r\n    return {\r\n      width: `${this.column.width}px`,\r\n      // eslint-disable-next-line no-undefined\r\n      minWidth: this.column.minWidth ? `${this.column.minWidth}px` : undefined,\r\n      // eslint-disable-next-line no-undefined\r\n      maxWidth: this.column.maxWidth ? `${this.column.maxWidth}px` : undefined,\r\n      height: this.rowContext.rowHeight === 'auto' ? this.rowContext.rowHeight : `${this.rowContext.rowHeight}px`, // this.cellHeight(this.rowContext.rowHeight),\r\n    };\r\n  }\r\n\r\n  get marginCellStyle(): Record<string, string> {\r\n    if (!this.rowContext) {\r\n      return {};\r\n    }\r\n    return {\r\n      'margin-left': `${this.calcLeftMargin(this.column, this.rowContext.row)}px`,\r\n    };\r\n  }\r\n\r\n  get isCheckboxable(): boolean {\r\n    return (\r\n      this.column.checkboxable &&\r\n      (!this.displayCheck || this.displayCheck(this.rowContext.row, this.column, this.value))\r\n    );\r\n  }\r\n\r\n  cellHeight(rowHeight: number): string | number {\r\n    const height = rowHeight;\r\n    if (isNaN(height)) {\r\n      return height;\r\n    }\r\n    return `${height}px`;\r\n  }\r\n\r\n  calcLeftMargin(column: TableColumn, row: Record<string, unknown>): number {\r\n    const levelIndent = column.treeLevelIndent ? column.treeLevelIndent : 50;\r\n    return column.isTreeColumn ? (row.level as number) * levelIndent : 0;\r\n  }\r\n}\r\n","import { TGroupByField } from 'components/datatable.component';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport DataTableBodyGroupHeaderComponent from './body-group-header.component';\r\nimport DataTableBodyRowComponent from './body-row.component.vue';\r\nimport DataTableBodyRowDetailComponent from './body-row-detail.component';\r\n\r\n@Component({\r\n  name: 'datatable-row-wrapper',\r\n  components: {\r\n    'datatable-group-header': DataTableBodyGroupHeaderComponent,\r\n    'datatable-row-detail': DataTableBodyRowDetailComponent,\r\n    'datatable-body-row': DataTableBodyRowComponent,\r\n  },\r\n})\r\nexport default class DataTableRowWrapperComponent extends Vue {\r\n  @Prop() innerWidth: number;\r\n  @Prop() rowDetail: boolean;\r\n  @Prop() groupHeader: boolean;\r\n  @Prop() groupLevel: number;\r\n  @Prop() offsetX: number;\r\n  @Prop() rowDetailHeight: number;\r\n  @Prop() groupRowHeight: number;\r\n  @Prop() groupHeaderStyles: Record<string, string | number>;\r\n  @Prop() groupHeaderClasses: string | Array<string>;\r\n  @Prop() row: Record<string, unknown>;\r\n  @Prop() rowIdentity: (row: Record<string, unknown>) => string | number;\r\n  @Prop() groupRowsBy: Array<TGroupByField | Array<TGroupByField>>;\r\n  @Prop() rowIndex: number;\r\n  @Prop() expanded: boolean;\r\n  @Prop() styleObject: Record<string, string>;\r\n  @Prop() groupHeaderSlot: (obj: Record<string, unknown>) => VNode[];\r\n  @Prop() rowDetailSlot: (obj: Record<string, unknown>) => VNode[];\r\n\r\n  mounted(): void {\r\n    this.$emit('set-row-element', this.$el);\r\n  }\r\n\r\n  updated(): void {\r\n    this.$emit('set-row-element', this.$el);\r\n  }\r\n\r\n  onContextmenu($event: MouseEvent): void {\r\n    this.$emit('rowContextmenu', { event: $event, row: this.row });\r\n  }\r\n\r\n  get groupTitleStyles(): Record<string, string | number> {\r\n    const styles = this.groupHeaderStyles ?? {};\r\n    styles['backface-visibility'] = 'hidden';\r\n    styles['height'] = this.groupRowHeight ? `${this.groupRowHeight}px` : 'auto';\r\n    return styles;\r\n  }\r\n\r\n  get rowId(): string | number | null {\r\n    if (!this.row) {\r\n      return null;\r\n    }\r\n    if (this.rowIdentity) {\r\n      const result = this.rowIdentity(this.row);\r\n      if (typeof result === 'object') {\r\n        return null;\r\n      }\r\n      return result;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { IRowContext } from 'types/row-context.type';\r\nimport { IColumnsByPinRecord, IColumnsWidth } from 'utils/column';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { TableColumn } from '../../types/table-column.type';\r\nimport { Keys } from '../../utils/keys';\r\nimport DataTableBodyCellComponent from './body-cell.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'datatable-body-cell': DataTableBodyCellComponent,\r\n  },\r\n})\r\nexport default class DataTableBodyRowComponent extends Vue {\r\n  @Prop() row: Record<string, unknown>;\r\n  @Prop() rowContext: IRowContext;\r\n  @Prop() columnsByPin: IColumnsByPinRecord[];\r\n  @Prop() columnGroupWidths: IColumnsWidth;\r\n  @Prop() groupStyles: Record<string, string | number>;\r\n  @Prop() rowClass: (row: Record<string, unknown>, rowIndex: number) => string | string;\r\n  @Prop() displayCheck: (row: Record<string, unknown>, column?: TableColumn, value?: unknown) => boolean;\r\n  @Prop() slots: () => Record<string, (arg?: Record<string, unknown>) => VNode[]>;\r\n  @Prop() renderTracking: boolean;\r\n\r\n  counter = 0; // it's need to update cells after row's changing\r\n  isFocused = false;\r\n\r\n  created(): void {\r\n    if (this.renderTracking) {\r\n      this.$emit('row-created', this.row);\r\n    }\r\n  }\r\n\r\n  updated(): void {\r\n    if (this.renderTracking) {\r\n      this.$emit('row-updated', this.row);\r\n    }\r\n    if (this.isFocused) {\r\n      (this.$el as HTMLElement).focus();\r\n    }\r\n  }\r\n\r\n  // @Watch('row', { deep: true }) onRowChanged(newVal, oldVal) {\r\n  //   if (newVal === oldVal) {\r\n  //     // there was only row's properties changed - it's need to update cells\r\n  //     this.counter++;\r\n  //   }\r\n  // }\r\n\r\n  onCellRendered(column: TableColumn): void {\r\n    this.$emit('row-updated', this.row);\r\n  }\r\n\r\n  onFocus(): void {\r\n    this.isFocused = true;\r\n  }\r\n\r\n  onBlur(): void {\r\n    this.isFocused = false;\r\n  }\r\n\r\n  onActivate(event: { cellIndex: number; rowElement: Element }, index: number): void {\r\n    event.cellIndex = index;\r\n    event.rowElement = this.$el;\r\n    this.$emit('activate', event);\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n    const isTargetRow = event.target === this.$el;\r\n\r\n    const isAction =\r\n      keyCode === Keys.return ||\r\n      keyCode === Keys.down ||\r\n      keyCode === Keys.up ||\r\n      keyCode === Keys.pageUp ||\r\n      keyCode === Keys.pageDown;\r\n\r\n    if (isAction && isTargetRow) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      this.$emit('activate', {\r\n        type: 'keydown',\r\n        event,\r\n        row: this.row,\r\n        rowIndex: this.rowContext.rowIndex,\r\n        rowElement: this.$el,\r\n      });\r\n    }\r\n  }\r\n\r\n  onMouseenter(event: MouseEvent): void {\r\n    this.$emit('activate', {\r\n      type: 'mouseenter',\r\n      event,\r\n      row: this.row,\r\n      rowElement: this.$el,\r\n    });\r\n  }\r\n\r\n  onTreeAction(event: Event): void {\r\n    this.$emit('tree-action', event);\r\n  }\r\n\r\n  get styles(): Record<string, string> {\r\n    if (this.rowContext) {\r\n      return {\r\n        width: `${this.columnGroupWidths.total}px`,\r\n        height: this.rowContext.rowHeight === 'auto' ? this.rowContext.rowHeight : `${this.rowContext.rowHeight}px`,\r\n      };\r\n    }\r\n    return {\r\n      width: `${this.columnGroupWidths.total}px`,\r\n    };\r\n  }\r\n\r\n  get cssClasses(): string {\r\n    let cls = '';\r\n    if (this.rowContext?.isSelected) {\r\n      cls += ' active';\r\n    }\r\n    if (this.rowContext?.rowIndex % 2 !== 0) {\r\n      cls += ' datatable-row-odd';\r\n    } else {\r\n      cls += ' datatable-row-even';\r\n    }\r\n    if (typeof this.rowClass === 'function') {\r\n      const res = this.rowClass(this.rowContext.row, this.rowContext.rowIndex);\r\n      if (typeof res === 'string') {\r\n        cls += ` ${res}`;\r\n      } else if (typeof res === 'object') {\r\n        const keys = Object.keys(res);\r\n        for (const k of keys) {\r\n          if (res[k] === true) {\r\n            cls += ` ${k}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return cls;\r\n  }\r\n}\r\n","import { TreeStatus } from 'components/body/body-cell.component';\r\nimport { TGroupByField } from 'components/datatable.component';\r\nimport { ScrollbarHelper } from 'services/scrollbar-helper.service';\r\nimport { CheckMode } from 'types/check.type';\r\nimport { IGroupedRows } from 'types/grouped-rows';\r\nimport { IRowContext } from 'types/row-context.type';\r\nimport { SelectionType } from 'types/selection.type';\r\nimport { TableColumn } from 'types/table-column.type';\r\nimport { columnGroupWidths, columnsByPin, columnsByPinArr, IColumnsByPinRecord, IColumnsWidth } from 'utils/column';\r\nimport { RowHeightCache } from 'utils/row-height-cache';\r\nimport { translateXY } from 'utils/translate';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\nimport DataTableBodyGroupHeaderComponent from './body-group-header.component';\r\nimport DataTableBodyRowComponent from './body-row.component.vue';\r\nimport DataTableBodyRowDetailComponent from './body-row-detail.component';\r\nimport DataTableRowWrapperComponent from './body-row-wrapper.component.vue';\r\nimport ProgressBarComponent from './progress-bar.component';\r\nimport ScrollerComponent from './scroller.component';\r\nimport DataTableSelectionComponent, { Model } from './selection.component';\r\n// import DataTableRowWrapperComponent from './body-row-wrapper.component.vue';\r\n// import DataTableBodyRowComponent from './body-row.component.vue';\r\nimport DataTableSummaryRowComponent from './summary/summary-row.component';\r\n\r\n@Component({\r\n  components: {\r\n    'datatable-selection': DataTableSelectionComponent,\r\n    'datatable-progress': ProgressBarComponent,\r\n    'datatable-scroller': ScrollerComponent,\r\n    'datatable-summary-row': DataTableSummaryRowComponent,\r\n    'datatable-row-wrapper': DataTableRowWrapperComponent,\r\n    'datatable-body-row': DataTableBodyRowComponent,\r\n    'datatable-group-header': DataTableBodyGroupHeaderComponent,\r\n    'datatable-row-detail': DataTableBodyRowDetailComponent,\r\n  },\r\n})\r\nexport default class DataTableBodyComponent extends Vue {\r\n  @Prop() scrollbarV: boolean;\r\n  @Prop() scrollbarH: boolean;\r\n  @Prop() loadingIndicator: boolean;\r\n  @Prop() externalPaging: boolean;\r\n  @Prop() rowHeight: number | ((row: Record<string, unknown>, index?: number) => number);\r\n  @Prop() groupRowHeight: number | ((row: Record<string, unknown>, index?: number) => number);\r\n  @Prop() groupHeaderStyles: Record<string, string | number>;\r\n  @Prop() groupHeaderClasses: string | Array<string>;\r\n  @Prop() offsetX: number;\r\n  @Prop() emptyMessage: string;\r\n  @Prop() selectionType: SelectionType;\r\n  @Prop() checkMode: CheckMode;\r\n  @Prop({ type: Array, default: () => [] as Array<Record<string, unknown>> }) selected: Array<Record<string, unknown>>;\r\n  @Prop({ type: Array, default: () => [] as Array<Record<string, unknown>> }) checked: Array<Record<string, unknown>>;\r\n  @Prop() rowIdentity: (row: Record<string, unknown>) => string | number;\r\n  @Prop() rowDetail: boolean;\r\n  @Prop() rowDetailHeight: number | string | ((row?: Record<string, unknown>, index?: number) => number);\r\n  @Prop() groupHeader: boolean;\r\n  @Prop() selectCheck: () => void;\r\n  @Prop() displayCheck: (row: Record<string, unknown>, column?: TableColumn, value?: unknown) => boolean;\r\n  @Prop() trackByProp: string;\r\n  @Prop() rowClass: (row: Record<string, unknown>, rowIndex: number) => string | string;\r\n  // @Prop() groupedRows: any;\r\n  @Prop() groupExpansionDefault: boolean;\r\n  @Prop() innerWidth: number;\r\n  @Prop() groupRowsBy: Array<TGroupByField | Array<TGroupByField>>;\r\n  @Prop() virtualization: boolean;\r\n  @Prop() summaryRow: boolean;\r\n  @Prop() summaryPosition: string;\r\n  @Prop() summaryHeight: number | string;\r\n  @Prop() pageSize: number;\r\n  @Prop() limit: number;\r\n  @Prop() rows: Record<string, unknown>[];\r\n  @Prop() columns: TableColumn[];\r\n  @Prop() offset: number;\r\n  @Prop({ default: 0 }) rowCount: number;\r\n  @Prop({ default: 0 }) bodyHeight: number;\r\n  @Prop({ type: [Number, String], default: null }) minItemHeight: number | string;\r\n  @Prop({ type: [String], default: 'height' }) heightField: string;\r\n  @Prop() groupHeaderSlot: (obj: Record<string, unknown>) => VNode[];\r\n  @Prop() rowDetailSlot: (obj: Record<string, unknown>) => VNode[];\r\n  @Prop() renderTracking: boolean;\r\n  @Prop() beforeSelectRowCheck: (\r\n    newRow: Record<string, unknown>,\r\n    oldSelected: Record<string, unknown>[]\r\n  ) => boolean | Promise<boolean>;\r\n\r\n  scroller: ScrollerComponent = null; // ScrollerComponent\r\n  selector: DataTableSelectionComponent = null; // DataTableSelectionComponent;\r\n  rowHeightsCache: RowHeightCache = new RowHeightCache();\r\n  offsetY = 0;\r\n  myOffset = 0;\r\n  myOffsetX = 0;\r\n  indexes: { first: number; last: number } = { first: 0, last: 0 };\r\n  columnGroupWidths: IColumnsWidth = null;\r\n  // columnGroupWidthsWithoutGroup = null;\r\n  rowIndexes = new Map<Record<string, unknown>, number>();\r\n  rowExpansions = new Map<Record<string, unknown> | IGroupedRows, boolean>();\r\n  myBodyHeight: string = null;\r\n  columnsByPin: IColumnsByPinRecord[] = null;\r\n  groupStyles = {\r\n    left: {},\r\n    center: {},\r\n    right: {},\r\n  };\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n  // onBodyScrollHandler = throttle(this.onBodyScroll.bind(this), 10, { trailing: true });\r\n\r\n  rowTrackingFn: (row: Record<string, unknown>) => string | number;\r\n  lastFirst: number;\r\n  lastLast: number;\r\n  lastRowCount: number;\r\n  rowsChanged: boolean;\r\n  rowContexts: Array<IRowContext> = [];\r\n  private readonly scrollbarHelper = new ScrollbarHelper();\r\n  private renderCounter = 0;\r\n  private renderId: number = null;\r\n\r\n  @Watch('pageSize') onPageSize(): void {\r\n    this.recalcLayout();\r\n  }\r\n\r\n  @Watch('rows', { immediate: true }) async onRowsChanged(): Promise<void> {\r\n    this.rowsChanged = true;\r\n    this.rowExpansions.clear();\r\n    // const updateOffset = this.rows && this.rows.length && this.offset || (!this.offset && this.offsetY);\r\n    const updateOffset =\r\n      this.rows && this.rows.length && ((this.offset && !this.offsetY) || (!this.offset && this.offsetY));\r\n    if (updateOffset) {\r\n      this.updateOffsetY(this.offset, true);\r\n      await this.$nextTick();\r\n      if (this.offset && !this.offsetY) {\r\n        // if offsetY wasn't set, try one more time\r\n        this.updateOffsetY(this.offset, true);\r\n        await this.$nextTick();\r\n      }\r\n    }\r\n    this.recalcLayout();\r\n    // this.$nextTick(() => {\r\n    //   this.scroller = this.$refs.scroller;\r\n    //   if (updateOffset) {\r\n    //     this.updateOffsetY(this.offset, true);\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  // @Watch('groupedRows') onGroupedRowsChanged() {\r\n  //   this.onRowsChanged();\r\n  // }\r\n\r\n  @Watch('selected', { deep: true }) async onSelectedChanged(): Promise<void> {\r\n    await this.$nextTick();\r\n    this.rowContexts.forEach(rowContext => {\r\n      rowContext.isSelected = this.isSelect(rowContext.row);\r\n      rowContext.isChecked = this.isChecked(rowContext.row);\r\n    });\r\n  }\r\n\r\n  @Watch('checked', { deep: true }) async onCheckedChanged(): Promise<void> {\r\n    await this.$nextTick();\r\n    this.rowContexts.forEach(rowContext => {\r\n      rowContext.isChecked = this.isChecked(rowContext.row);\r\n    });\r\n  }\r\n\r\n  @Watch('columns', { immediate: true }) onColumnsChanged(): void {\r\n    this.recalculateColumns();\r\n    this.buildStylesByGroup();\r\n  }\r\n\r\n  @Watch('offset', { immediate: true }) onOffsetChanged(): void {\r\n    this.myOffset = this.offset;\r\n  }\r\n\r\n  @Watch('offsetX', { immediate: true }) onOffsetXChanged(): void {\r\n    this.myOffsetX = this.offsetX;\r\n  }\r\n\r\n  @Watch('myOffsetX') onMyOffsetXChanged(): void {\r\n    this.buildStylesByGroup();\r\n  }\r\n\r\n  @Watch('innerWidth') onInnerWidthChanged(): void {\r\n    this.recalculateColumns();\r\n    this.buildStylesByGroup();\r\n  }\r\n\r\n  @Watch('myOffset') onMyOffsetChanged(): void {\r\n    if (this.limit) {\r\n      this.recalcLayout();\r\n    }\r\n  }\r\n\r\n  @Watch('rowCount') onRowCountChanged(): void {\r\n    this.recalcLayout();\r\n  }\r\n\r\n  @Watch('bodyHeight', { immediate: true }) onBodyHeightChanged(): void {\r\n    this.myBodyHeight = this.bodyHeight.toString();\r\n    if (this.bodyHeight === -1) {\r\n      this.myBodyHeight = '0px';\r\n      return;\r\n    }\r\n    if (this.scrollbarV) {\r\n      this.myBodyHeight = this.myBodyHeight + 'px';\r\n    } else {\r\n      this.myBodyHeight = 'auto';\r\n    }\r\n    this.recalcLayout();\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of DataTableBodyComponent.\r\n   */\r\n  created(): void {\r\n    // declare fn here so we can get access to the `this` property\r\n    this.rowTrackingFn = (row: Record<string, unknown>): string | number => {\r\n      const idx = this.getRowIndex(row);\r\n      if (this.trackByProp) {\r\n        return `${idx}-${this.trackByProp}`;\r\n      }\r\n      return idx;\r\n    };\r\n  }\r\n\r\n  mounted(): void {\r\n    this.selector = this.$refs.selector as DataTableSelectionComponent;\r\n    this.scroller = this.$refs.scroller as ScrollerComponent;\r\n  }\r\n\r\n  get bodyWidth(): string {\r\n    if (this.scrollbarH) {\r\n      return `${this.innerWidth}px`;\r\n    }\r\n    return '100%';\r\n  }\r\n\r\n  get styleObject(): Record<string, string> {\r\n    return {\r\n      width: this.bodyWidth ? this.bodyWidth : 'auto',\r\n      height: this.myBodyHeight ? this.myBodyHeight : 'auto',\r\n      'overflow-anchor': 'auto',\r\n      contain: 'content',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns if selection is enabled.\r\n   */\r\n  get selectEnabled(): boolean {\r\n    return Boolean(this.selectionType);\r\n  }\r\n\r\n  get checkEnabled(): boolean {\r\n    return this.checkMode === CheckMode.checkNoSelect || this.selectionType === SelectionType.checkbox;\r\n  }\r\n\r\n  get isUseRowHeightCache(): boolean {\r\n    if (typeof this.rowHeight === 'function' || this.rowDetailHeight || this.groupRowsBy) {\r\n      return true;\r\n    }\r\n    return false;\r\n    // if (\r\n    //   (this.fixedRowHeight && !this.rowDetailHeight && !this.groupRowsBy) ||\r\n    //   (this.scrollbarV && !this.virtualization) ||\r\n    //   !this.scrollbarV\r\n    // ) {\r\n    //   return false;\r\n    // }\r\n    // return true;\r\n  }\r\n\r\n  get fixedRowHeight(): boolean {\r\n    if (this.rowHeight && typeof this.rowHeight === 'number') {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Property that would calculate the height of scroll bar\r\n   * based on the row heights cache for virtual scroll and virtualization. Other scenarios\r\n   * calculate scroll height automatically (as height will be undefined).\r\n   */\r\n  get scrollHeight(): number | undefined {\r\n    if (this.scrollbarV && this.virtualization && this.rowCount) {\r\n      if (!this.isUseRowHeightCache) {\r\n        const height = this.rowHeight as number;\r\n        return height * this.rowCount;\r\n      }\r\n      return this.rowHeightsCache.query(this.rowCount - 1);\r\n    }\r\n    if (!this.rowCount) {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  get scrollWidth(): string {\r\n    return this.columnGroupWidths ? this.columnGroupWidths.total.toString() : 'auto';\r\n  }\r\n\r\n  get cellSlots(): () => Record<string, (arg?: Record<string, unknown>) => VNode[]> {\r\n    const result = {};\r\n    if (this.columns) {\r\n      this.columns.forEach(column => {\r\n        if (column.cellTemplate) {\r\n          result[column.prop] = column.cellTemplate;\r\n        }\r\n      });\r\n    }\r\n    return () => result;\r\n  }\r\n\r\n  /**\r\n   * Called once, before the instance is destroyed.\r\n   */\r\n  destroyed(): void {\r\n    // todo\r\n    // if (this.rowDetail) this.listener.unsubscribe();\r\n    // if (this.groupHeader) this.listener.unsubscribe();\r\n  }\r\n\r\n  reset(): void {\r\n    this.myOffsetX = 0;\r\n    this.offsetY = 0;\r\n  }\r\n\r\n  onSelect(event: { selected: Array<Record<string, unknown>>; index: number }): void {\r\n    this.$emit('select', event);\r\n  }\r\n\r\n  recalculateColumns(width?: number): void {\r\n    const colsByPin = columnsByPin(this.columns);\r\n    this.columnsByPin = columnsByPinArr(this.columns);\r\n    // eslint-disable-next-line no-undefined\r\n    if (width === null || width === undefined) {\r\n      width = this.scroller ? this.scroller.$el.clientWidth : this.innerWidth;\r\n    }\r\n    this.columnGroupWidths = columnGroupWidths(colsByPin, this.columns, width);\r\n  }\r\n\r\n  /**\r\n   * Updates the Y offset given a new offset.\r\n   */\r\n  updateOffsetY(offset?: number, fromPager: boolean = false): number {\r\n    // scroller is missing on empty table\r\n    if (!this.scroller) {\r\n      return;\r\n    }\r\n    let offsetY = 0;\r\n    if (this.scrollbarV && this.virtualization && offset) {\r\n      // First get the row Index that we need to move to.\r\n      const rowIndex = this.pageSize * offset;\r\n      if (this.isUseRowHeightCache || typeof this.rowHeight === 'function') {\r\n        offsetY = this.rowHeightsCache.query(rowIndex - 1);\r\n      } else {\r\n        offsetY = rowIndex * this.rowHeight;\r\n      }\r\n    } else if (this.scrollbarV && !this.virtualization) {\r\n      offsetY = 0;\r\n    }\r\n    if (offset && !offsetY) {\r\n      return 0;\r\n    }\r\n    this.scroller.setOffset(offsetY || 0, fromPager);\r\n    return offsetY || 0;\r\n  }\r\n\r\n  onScrollerWidthChanged(width: number) {\r\n    this.recalculateColumns(width);\r\n  }\r\n\r\n  onScrollSetup(event: { scrollYPos: number; scrollXPos: number }): void {\r\n    this.myOffsetX = event.scrollXPos;\r\n    this.offsetY = event.scrollYPos;\r\n  }\r\n\r\n  /**\r\n   * Body was scrolled, this is mainly useful for\r\n   * when a user is server-side pagination via virtual scroll.\r\n   */\r\n  onBodyScroll(event: { direction: string; scrollYPos: number; scrollXPos: number; fromPager: boolean }): void {\r\n    const scrollYPos: number = event.scrollYPos;\r\n    const scrollXPos: number = event.scrollXPos;\r\n\r\n    // if scroll change, trigger update\r\n    // this is mainly used for header cell positions\r\n    if (this.offsetY !== scrollYPos || this.myOffsetX !== scrollXPos) {\r\n      // Math.abs(scrollYPos - this.offsetY) > 50\r\n      this.$emit('scroll', {\r\n        offsetY: scrollYPos,\r\n        offsetX: scrollXPos,\r\n      });\r\n    }\r\n    this.offsetY = scrollYPos;\r\n    this.myOffsetX = scrollXPos;\r\n    this.$nextTick(() => {\r\n      this.updateIndexes(event.direction);\r\n      this.updatePage(event.direction, event.fromPager);\r\n      this.updateRows();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the page given a direction.\r\n   */\r\n  updatePage(direction: string, fromPager: boolean): void {\r\n    let offset = this.indexes.first / this.pageSize;\r\n\r\n    if (fromPager) {\r\n      offset = Math.ceil(offset);\r\n    } else if (direction === 'up') {\r\n      offset = Math.ceil(offset);\r\n    } else if (direction === 'down') {\r\n      offset = Math.floor(offset);\r\n    }\r\n\r\n    if (!fromPager && ['up', 'down'].includes(direction) && !isNaN(offset)) {\r\n      this.$emit('page', { offset });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the rows in the view port\r\n   */\r\n  updateRows(force: boolean = false): void {\r\n    const { first, last } = this.indexes;\r\n    if (!force && !this.rowsChanged && this.lastFirst === first && this.lastLast === last) {\r\n      // console.log('this.lastFirst === first');\r\n      return;\r\n    }\r\n    this.rowsChanged = false;\r\n    if (this.rows?.length) {\r\n      this.lastFirst = first;\r\n      this.lastLast = last;\r\n    }\r\n    this.lastRowCount = this.rowCount;\r\n    // if (!this.pagination) {\r\n    //   first = Math.max(0, first - 20);\r\n    //   last = Math.min(this.rowCount, last + 10);\r\n    // }\r\n    let rowIndex = first;\r\n    let idx = 0;\r\n    this.rowIndexes.clear();\r\n\r\n    // if grouprowsby has been specified treat row paging\r\n    // parameters as group paging parameters ie if limit 10 has been\r\n    // specified treat it as 10 groups rather than 10 rows\r\n    // if (this.groupedRows) {\r\n    //   let maxRowsPerGroup = 3;\r\n    //   // if there is only one group set the maximum number of\r\n    //   // rows per group the same as the total number of rows\r\n    //   if (this.groupedRows.length === 1) {\r\n    //     maxRowsPerGroup = this.groupedRows[0].value.length;\r\n    //   }\r\n    //   let index = 0;\r\n    //   while (rowIndex < last && rowIndex < this.groupedRows.length) {\r\n    //     // Add the groups into this page\r\n    //     const group = this.groupedRows[rowIndex];\r\n    //     group.value.forEach(row => this.rowIndexes.set(row, ++index));\r\n    //     temp[idx] = group;\r\n    //     idx++;\r\n\r\n    //     // Group index in this context\r\n    //     rowIndex++;\r\n    //   }\r\n    // } else {\r\n    const temp: Array<IRowContext> = [];\r\n    // let rowContext: IRowContext;\r\n    let group;\r\n    while (rowIndex < last && rowIndex < this.rowCount) {\r\n      const row = this.rows[rowIndex];\r\n      if (row) {\r\n        if (row.__isGroup) {\r\n          group = row;\r\n        }\r\n        this.rowIndexes.set(row, rowIndex);\r\n        // rowContext = this.rowContexts[idx];\r\n        // if (!rowContext) {\r\n        //   // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        //   rowContext = {} as any;\r\n        // }\r\n        // rowContext.row = row;\r\n        // rowContext.rowIndex = rowIndex;\r\n        // rowContext.rowHeight = this.getRowHeight(row);\r\n        // rowContext.isSelected = this.isSelect(row);\r\n        // rowContext.isChecked = this.isChecked(row);\r\n        // rowContext.expanded = this.getRowExpanded(row);\r\n        // rowContext.treeStatus = this.treeStatus(row);\r\n        // temp[idx] = rowContext;\r\n        temp[idx] = {\r\n          row,\r\n          rowIndex,\r\n          rowHeight: this.getRowHeight(row),\r\n          isSelected: this.isSelect(row),\r\n          isChecked: this.isChecked(row),\r\n          expanded: this.getRowExpanded(row),\r\n          treeStatus: this.treeStatus(row),\r\n          group: group as unknown as IGroupedRows,\r\n        };\r\n        idx++;\r\n      }\r\n      rowIndex++;\r\n    }\r\n    // }\r\n    this.rowContexts = temp;\r\n    // console.log('updateRows first = ', first);\r\n  }\r\n\r\n  /**\r\n   * Get the row height\r\n   */\r\n  getRowHeight(row: Record<string, unknown>): number {\r\n    // if its a function return it\r\n    if (typeof this.rowHeight === 'function') {\r\n      return this.rowHeight(row);\r\n    }\r\n    return this.rowHeight;\r\n  }\r\n\r\n  /**\r\n   * @param group the group with all rows\r\n   */\r\n  getGroupHeight(group: { value: Array<Record<string, unknown>> }): number {\r\n    let rowHeight = 0;\r\n    if (Array.isArray(group.value)) {\r\n      for (const value of group.value) {\r\n        rowHeight += this.getRowAndDetailHeight(value);\r\n      }\r\n    }\r\n    return rowHeight;\r\n  }\r\n\r\n  /**\r\n   * Calculate row height based on the expanded state of the row.\r\n   */\r\n  getRowAndDetailHeight(row: Record<string, unknown>): number {\r\n    let rowHeight = this.getRowHeight(row);\r\n    const expanded = this.rowExpansions.get(row);\r\n\r\n    // Adding detail row height if its expanded.\r\n    if (expanded) {\r\n      rowHeight += this.getDetailRowHeight(row);\r\n    }\r\n\r\n    return rowHeight;\r\n  }\r\n\r\n  /**\r\n   * Get the height of the detail row.\r\n   */\r\n  getDetailRowHeight = (row?: Record<string, unknown>, index?: number): number => {\r\n    if (!this.rowDetail) {\r\n      return 0;\r\n    }\r\n    const rowHeight = this.rowDetailHeight || this.getRowHeight(row) || 50;\r\n    return typeof rowHeight === 'function' ? rowHeight(row, index) : Number(rowHeight);\r\n  };\r\n\r\n  /**\r\n   * Calculates the styles for the row so that the rows can be moved in 2D space\r\n   * during virtual scroll inside the DOM.   In the below case the Y position is\r\n   * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\r\n   * 100 px then following styles are generated:\r\n   *\r\n   * transform: translate3d(0px, 0px, 0px);    ->  row0\r\n   * transform: translate3d(0px, 30px, 0px);   ->  row1\r\n   * transform: translate3d(0px, 130px, 0px);  ->  row2\r\n   *\r\n   * Row heights have to be calculated based on the row heights cache as we wont\r\n   * be able to determine which row is of what height before hand.  In the above\r\n   * case the positionY of the translate3d for row2 would be the sum of all the\r\n   * heights of the rows before it (i.e. row0 and row1).\r\n   *\r\n   * @param {*} row The row that needs to be placed in the 2D space.\r\n   * @returns {*} Returns the CSS3 style to be applied\r\n   *\r\n   * @memberOf DataTableBodyComponent\r\n   */\r\n  getRowWrapperStyles(rowContext: IRowContext): Record<string, string> {\r\n    if (!rowContext) {\r\n      return null;\r\n    }\r\n    const styles = {};\r\n    // only add styles for the group if there is a group\r\n    if (this.groupRowsBy) {\r\n      styles['width'] = `${this.columnGroupWidths.total}px`;\r\n    }\r\n\r\n    if (this.scrollbarV && this.virtualization) {\r\n      let idx = 0;\r\n      // let row = rows;\r\n      // if (this.groupedRows) {\r\n      //   // Get the latest row rowindex in a group\r\n      //   row = rows[rows.length - 1];\r\n      //   idx = row ? this.getRowIndex(row) : 0;\r\n      // } else {\r\n      idx = rowContext.rowIndex;\r\n      // }\r\n      // const pos = idx * rowHeight;\r\n      // The position of this row would be the sum of all row heights\r\n      // until the previous row position.\r\n      let pos = 0;\r\n      let height = 50;\r\n      if (!this.isUseRowHeightCache) {\r\n        height = this.rowHeight as number;\r\n        pos = idx * height;\r\n      } else {\r\n        pos = this.rowHeightsCache.query(idx - 1);\r\n      }\r\n      translateXY(styles, 0, pos);\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  getRowOffsetY(index: number): { offsetY: number; height: number } {\r\n    if (this.isUseRowHeightCache || typeof this.rowHeight === 'function') {\r\n      let result = this.rowHeightsCache.queryWithHeight(index);\r\n      if (!result) {\r\n        result = { height: 0, offsetY: 0 };\r\n      }\r\n      return result;\r\n    }\r\n    return {\r\n      offsetY: this.rowHeight * index,\r\n      height: this.rowHeight,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate bottom summary row offset for scrollbar mode.\r\n   * For more information about cache and offset calculation\r\n   * see description for `getRowsStyles` method\r\n   *\r\n   * @returns {*} Returns the CSS3 style to be applied\r\n   *\r\n   * @memberOf DataTableBodyComponent\r\n   */\r\n  getBottomSummaryRowStyles(): Record<string, string> {\r\n    if (!this.scrollbarV || !this.rows || !this.rows.length) {\r\n      return null;\r\n    }\r\n\r\n    const styles = { position: 'absolute' };\r\n    let pos = 0;\r\n    if (this.isUseRowHeightCache || typeof this.rowHeight === 'function') {\r\n      pos = this.rowHeightsCache.query(this.rows.length - 1);\r\n    } else {\r\n      pos = this.rowHeight * (this.rowCount - 1);\r\n    }\r\n\r\n    translateXY(styles, 0, pos);\r\n\r\n    return styles;\r\n  }\r\n\r\n  /**\r\n   * Hides the loading indicator\r\n   */\r\n  // hideIndicator(): void {\r\n  //   setTimeout(() => this.loadingIndicator = false, 500);\r\n  // }\r\n\r\n  /**\r\n   * Updates the index of the rows in the viewport\r\n   */\r\n  updateIndexes(direction?: string): void {\r\n    let first = 0;\r\n    let last = 0;\r\n\r\n    if (this.scrollbarV && !this.limit) {\r\n      if (this.virtualization) {\r\n        // Calculation of the first and last indexes will be based on where the\r\n        // scrollY position would be at.  The last index would be the one\r\n        // that shows up inside the view port the last.\r\n        const height = this.bodyHeight;\r\n        if (this.isUseRowHeightCache || typeof this.rowHeight === 'function') {\r\n          first = this.rowHeightsCache.getRowIndex(this.offsetY);\r\n          last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\r\n        } else {\r\n          first = Math.floor(this.offsetY / this.rowHeight);\r\n          last = Math.ceil((height + this.offsetY + this.rowHeight) / this.rowHeight);\r\n        }\r\n      } else {\r\n        // If virtual rows are not needed\r\n        // We render all in one go\r\n        first = 0;\r\n        last = this.rowCount;\r\n      }\r\n    } else {\r\n      // The server is handling paging and will pass an array that begins with the\r\n      // element at a specified offset.  first should always be 0 with external paging.\r\n      if (!this.externalPaging) {\r\n        first = Math.max(this.myOffset * this.pageSize, 0);\r\n      }\r\n      last = Math.min(first + this.pageSize, this.rowCount);\r\n    }\r\n    // if (direction === 'down') {\r\n    //   last = last === this.rowCount ? last : last + 1;\r\n    // }\r\n    this.indexes = { first, last };\r\n  }\r\n\r\n  /**\r\n   * Refreshes the full Row Height cache.  Should be used\r\n   * when the entire row array state has changed.\r\n   */\r\n  refreshRowHeightCache(): void {\r\n    if (!this.isUseRowHeightCache) {\r\n      return;\r\n    }\r\n    // clear the previous row height cache if already present.\r\n    // this is useful during sorts, filters where the state of the\r\n    // rows array is changed.\r\n    this.rowHeightsCache.clearCache();\r\n\r\n    // Initialize the tree only if there are rows inside the tree.\r\n    if (this.rows && this.rows.length) {\r\n      this.rowHeightsCache.initCache({\r\n        rows: this.rows,\r\n        rowHeight: this.rowHeight,\r\n        rowDetailHeight: this.getDetailRowHeight,\r\n        groupRowHeight: this.groupRowHeight,\r\n        externalVirtual: this.scrollbarV && this.externalPaging,\r\n        rowCount: this.rowCount,\r\n        rowIndexes: this.rowIndexes,\r\n        rowExpansions: this.rowExpansions,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the index for the view port\r\n   */\r\n  getAdjustedViewPortIndex(): number {\r\n    // Capture the row index of the first row that is visible on the viewport.\r\n    // If the scroll bar is just below the row which is highlighted then make that as the\r\n    // first index.\r\n    const viewPortFirstRowIndex = this.indexes.first;\r\n\r\n    let offsetScroll;\r\n    if (this.isUseRowHeightCache || typeof this.rowHeight === 'function') {\r\n      offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex);\r\n      return offsetScroll <= this.offsetY ? Math.max(0, viewPortFirstRowIndex - 1) : viewPortFirstRowIndex;\r\n    }\r\n    offsetScroll = this.rowHeight * viewPortFirstRowIndex;\r\n    return offsetScroll <= this.offsetY ? Math.max(0, viewPortFirstRowIndex - 1) : viewPortFirstRowIndex;\r\n    // return viewPortFirstRowIndex;\r\n  }\r\n\r\n  /**\r\n   * Toggle the Expansion of the row i.e. if the row is expanded then it will\r\n   * collapse and vice versa.   Note that the expanded status is stored as\r\n   * a part of the row object itself as we have to preserve the expanded row\r\n   * status in case of sorting and filtering of the row set.\r\n   */\r\n  toggleRowExpansion(rowContext: IRowContext): boolean {\r\n    // Capture the row index of the first row that is visible on the viewport.\r\n    // const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\r\n    let expanded = rowContext.expanded;\r\n\r\n    // If the rowDetailHeight is auto --> only in case of non-virtualized scroll\r\n    if (this.isUseRowHeightCache) {\r\n      const rowDetailHeight = this.getDetailRowHeight(rowContext.row) * (expanded ? -1 : 1);\r\n      this.rowHeightsCache.update(rowContext.rowIndex, rowDetailHeight);\r\n    }\r\n    // Update the toggled row and update thive nevere heights in the cache.\r\n    expanded = !expanded;\r\n    this.rowExpansions.set(rowContext.row, expanded);\r\n\r\n    this.$emit('detail-toggle', {\r\n      rows: [rowContext.row],\r\n      currentIndex: rowContext.rowIndex, // viewPortFirstRowIndex\r\n    });\r\n    return Boolean(expanded);\r\n  }\r\n\r\n  /**\r\n   * Expand/Collapse all the rows no matter what their state is.\r\n   */\r\n  toggleAllRows(expanded: boolean): void {\r\n    // clear prev expansions\r\n    this.rowExpansions.clear();\r\n\r\n    const rowExpanded = Boolean(expanded);\r\n\r\n    // Capture the row index of the first row that is visible on the viewport.\r\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\r\n\r\n    for (const row of this.rows) {\r\n      this.rowExpansions.set(row, rowExpanded);\r\n    }\r\n\r\n    if (this.scrollbarV) {\r\n      // Refresh the full row heights cache since every row was affected.\r\n      this.recalcLayout();\r\n    }\r\n\r\n    // Emit all rows that have been expanded.\r\n    this.$emit('detail-toggle', {\r\n      rows: this.rows,\r\n      currentIndex: viewPortFirstRowIndex,\r\n    });\r\n  }\r\n\r\n  onGroupToggle($event: { value: Record<string, unknown> }): void {\r\n    this.$emit('group-toggle', $event);\r\n    // if ($event.type === 'group') {\r\n    //   this.toggleRowExpansion($event.value);\r\n    // } else if ($event.type === 'all') {\r\n    //   this.toggleAllRows($event.value);\r\n    // }\r\n    // this.updateIndexes();\r\n    // this.updateRows(true);\r\n  }\r\n\r\n  /**\r\n   * Recalculates the table\r\n   */\r\n  recalcLayout(): void {\r\n    this.refreshRowHeightCache();\r\n    this.updateIndexes();\r\n    this.updateRows();\r\n  }\r\n\r\n  /**\r\n   * Tracks the column\r\n   */\r\n  columnTrackingFn(index: number, column: TableColumn): string {\r\n    return column.$$id;\r\n  }\r\n\r\n  /**\r\n   * Gets the row pinning group styles\r\n   */\r\n  // stylesByGroup(group: string) {\r\n  //   const widths = this.columnGroupWidths;\r\n  //   const offsetX = this.myOffsetX;\r\n\r\n  //   const styles = {\r\n  //     width: `${widths[group]}px`\r\n  //   };\r\n\r\n  //   if (group === 'left') {\r\n  //     translateXY(styles, offsetX, 0);\r\n  //   } else if (group === 'right') {\r\n  //     const bodyWidth = parseInt(this.innerWidth + '', 0);\r\n  //     const totalDiff = widths.total - bodyWidth;\r\n  //     const offsetDiff = totalDiff - offsetX;\r\n  //     const offset = offsetDiff * -1;\r\n  //     translateXY(styles, offset, 0);\r\n  //   }\r\n\r\n  //   return styles;\r\n  // }\r\n\r\n  initExpansions(group: IGroupedRows): void {\r\n    this.rowExpansions.set(group, true);\r\n    if (group.groups) {\r\n      for (const gr of group.groups) {\r\n        this.initExpansions(gr);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns if the row was expanded and set default row expansion when row expansion is empty\r\n   */\r\n  getRowExpanded(row: Record<string, unknown>): boolean {\r\n    // if (this.rowExpansions.size === 0 && this.groupExpansionDefault && this.groupedRows) {\r\n    //   for (const group of this.groupedRows) {\r\n    //     this.initExpansions(group);\r\n    //   }\r\n    // }\r\n    if (!this.rowDetail) {\r\n      return false;\r\n    }\r\n    const expanded = Boolean(this.rowExpansions.get(row));\r\n    return expanded;\r\n  }\r\n\r\n  /**\r\n   * Gets the row index given a row\r\n   */\r\n  getRowIndex(row: Record<string, unknown>): number {\r\n    return row ? this.rowIndexes.get(row) || 0 : 0;\r\n  }\r\n\r\n  onTreeAction(event: unknown): void {\r\n    this.$emit('tree-action', event);\r\n  }\r\n\r\n  isSelect(row: Record<string, unknown>): boolean {\r\n    if (!this.selectEnabled) {\r\n      return false;\r\n    }\r\n    return this.selector ? this.selector.getRowSelected(row) : false;\r\n  }\r\n\r\n  isChecked(row: Record<string, unknown>): boolean {\r\n    if (!this.checkEnabled) {\r\n      return false;\r\n    }\r\n    return this.selector ? this.selector.getRowChecked(row) : false;\r\n  }\r\n\r\n  onActivate(model: Model, index: number): void {\r\n    if (this.selector) {\r\n      this.selector.onActivate(model, this.indexes.first + index);\r\n    }\r\n  }\r\n\r\n  onRowRendered(row: Record<string, unknown>): void {\r\n    if (this.renderCounter === 0) {\r\n      // eslint-disable-next-line no-console\r\n      console.time('render');\r\n    }\r\n    this.renderCounter++;\r\n    const counter = this.renderCounter;\r\n    clearTimeout(this.renderId);\r\n    this.renderId = setTimeout(() => this.checkRenderFinish(counter), 100) as unknown as number;\r\n  }\r\n\r\n  checkRenderFinish(counter: number): void {\r\n    if (counter === this.renderCounter) {\r\n      // eslint-disable-next-line no-console\r\n      console.timeEnd('render');\r\n      this.renderCounter = 0;\r\n      this.$emit('rendered');\r\n    } else {\r\n      counter = this.renderCounter;\r\n      clearTimeout(this.renderId);\r\n      this.renderId = setTimeout(() => this.checkRenderFinish(counter), 100) as unknown as number;\r\n    }\r\n  }\r\n\r\n  buildStylesByGroup(): void {\r\n    this.groupStyles['left'] = this.calcStylesByGroup('left');\r\n    this.groupStyles['center'] = this.calcStylesByGroup('center');\r\n    this.groupStyles['right'] = this.calcStylesByGroup('right');\r\n  }\r\n\r\n  calcStylesByGroup(group: keyof IColumnsWidth): Record<string, string> {\r\n    const widths = this.columnGroupWidths;\r\n    const offsetX = this.myOffsetX;\r\n    const styles = {\r\n      width: `${widths[group]}px`,\r\n    };\r\n    if (group === 'left') {\r\n      translateXY(styles, offsetX, 0);\r\n    } else if (group === 'right') {\r\n      const bodyWidth = parseInt(this.innerWidth.toString(), 10);\r\n      const totalDiff = widths.total - bodyWidth;\r\n      const offsetDiff = totalDiff - offsetX;\r\n      const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\r\n      translateXY(styles, offset, 0);\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  getGroupStyles(colGroup: { type: 'left' | 'center' | 'right' }): Record<string, string | number> {\r\n    if (colGroup && colGroup.type) {\r\n      return {\r\n        width: `${this.columnGroupWidths.total}px`,\r\n        ...this.groupStyles[colGroup.type],\r\n      };\r\n    }\r\n    return {\r\n      width: `${this.columnGroupWidths.total}px`,\r\n    };\r\n  }\r\n\r\n  treeStatus(row: Record<string, unknown>): TreeStatus {\r\n    if (!row) {\r\n      return null;\r\n    }\r\n    return row.treeStatus as TreeStatus;\r\n  }\r\n\r\n  isRowVisible(row: Record<string, unknown>): boolean {\r\n    const rowContext = this.rowContexts.find(c => c.row === row);\r\n    if (!rowContext) {\r\n      return false;\r\n    }\r\n    let rowOffsetY;\r\n    if (this.isUseRowHeightCache || typeof this.rowHeight === 'function') {\r\n      rowOffsetY = this.rowHeightsCache.query(rowContext.rowIndex);\r\n    } else {\r\n      rowOffsetY = this.rowHeight * rowContext.rowIndex;\r\n    }\r\n    return rowOffsetY >= this.offsetY && rowOffsetY <= this.offsetY + this.bodyHeight;\r\n  }\r\n\r\n  onCellFocus($event: Event): void {\r\n    // eslint-disable-next-line no-console\r\n    console.log('onCellFocus($event)');\r\n  }\r\n\r\n  /**\r\n   * Toggle the expansion of the row\r\n   */\r\n  toggleExpandDetail(row: Record<string, unknown>): void {\r\n    const rowContext = this.rowContexts.find(c => c.row === row);\r\n    if (!rowContext) {\r\n      throw new Error('row context is not found');\r\n    }\r\n    rowContext.expanded = this.toggleRowExpansion(rowContext);\r\n    this.updateIndexes();\r\n    this.updateRows(true);\r\n    this.$emit('detail-toggle', {\r\n      type: 'row',\r\n      value: row,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Expand all the rows.\r\n   */\r\n  expandAllDetails(): void {\r\n    this.toggleAllRows(true);\r\n    this.$emit('detail-toggle', {\r\n      type: 'all',\r\n      value: true,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Collapse all the rows.\r\n   */\r\n  collapseAllDetails(): void {\r\n    this.toggleAllRows(false);\r\n    this.$emit('detail-toggle', {\r\n      type: 'all',\r\n      value: false,\r\n    });\r\n  }\r\n}\r\n","import '../themes/material.scss';\r\nimport '../themes/dark.scss';\r\nimport '../themes/bootstrap.scss';\r\nimport '../../assets/icons.css';\r\nimport { CheckMode } from 'types/check.type';\r\nimport { ColumnMode } from 'types/column-mode.type';\r\nimport { ContextmenuType } from 'types/contextmenu.type';\r\nimport { IGroupedRows } from 'types/grouped-rows';\r\nimport { SelectionType } from 'types/selection.type';\r\nimport { SortType } from 'types/sort.type';\r\nimport { ISortEvent, ISortPropDir } from 'types/sort-prop-dir.type';\r\nimport { TableColumn } from 'types/table-column.type';\r\nimport { setColumnDefaults, setColumnsDefaults } from 'utils/column-helper';\r\nimport { isArrayEqual } from 'utils/equal.array';\r\nimport { adjustColumnWidths, forceFillColumnWidths } from 'utils/math';\r\nimport { sortRows } from 'utils/sort';\r\nimport { throttleable } from 'utils/throttle';\r\nimport { groupRowsByParents, optionalGetterForProp } from 'utils/tree';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\nimport VisibilityDirective from '../directives/visibility.directive';\r\nimport { DimensionsHelper } from '../services/dimensions-helper.service';\r\nimport { ScrollbarHelper } from '../services/scrollbar-helper.service';\r\nimport DataTableBody from './body/body.component';\r\nimport DataTableBodyComponent from './body/body.component.vue';\r\nimport DataTableBodyCellComponent from './body/body-cell.component.vue';\r\nimport DataTableColumnComponent from './columns/column.component';\r\nimport DataTableFooterComponent from './footer/footer.component';\r\nimport DataTableHeaderComponent from './header/header.component';\r\n\r\nVue.component('datatable-column', DataTableColumnComponent);\r\nVue.component('datatable-body-cell', DataTableBodyCellComponent);\r\n\r\ninterface IGroup {\r\n  title: string;\r\n  prop: string;\r\n  valueGetter?: (value: unknown) => string;\r\n}\r\n\r\nexport type TGroupByField = string | IGroup;\r\n\r\ntype TRowHeightFunc = (row: Record<string, unknown>, index?: number) => number;\r\n\r\n@Component({\r\n  directives: {\r\n    'v-visibility-observer': VisibilityDirective,\r\n  },\r\n  components: {\r\n    'datatable-header': DataTableHeaderComponent,\r\n    'datatable-body': DataTableBodyComponent,\r\n    'datatable-footer': DataTableFooterComponent,\r\n  },\r\n})\r\nexport default class DatatableComponent extends Vue {\r\n  @Prop({ default: false }) visibilityCheck: boolean;\r\n  @Prop({ default: 1000 }) visibilityCheckTimeout: number;\r\n  /**\r\n   * Rows that are displayed in the table.\r\n   */\r\n  @Prop() rows: Array<Record<string, unknown>>;\r\n  /**\r\n   * This attribute allows the user to set the names of the columns to group the data with\r\n   */\r\n  @Prop() groupRowsBy: Array<TGroupByField | Array<TGroupByField>>;\r\n  @Prop() columns: TableColumn[];\r\n  /**\r\n   * List of row objects that should be\r\n   * represented as selected in the grid.\r\n   * Default value: `[]`\r\n   */\r\n  @Prop({ type: Array, default: (): Array<Record<string, unknown>> => [] }) selected: Array<Record<string, unknown>>;\r\n  /**\r\n   * List of row objects that should be\r\n   * represented as checked in the grid.\r\n   * Default value: `[]`\r\n   */\r\n  @Prop({ type: Array, default: (): Array<Record<string, unknown>> => [] }) checked: Array<Record<string, unknown>>;\r\n  /**\r\n   * Enable vertical scrollbars\r\n   */\r\n  @Prop({ type: Boolean, default: false }) scrollbarV: boolean;\r\n  /**\r\n   * Enable horz scrollbars\r\n   */\r\n  @Prop({ type: Boolean, default: false }) scrollbarH: boolean;\r\n  /**\r\n   * The row height; which is necessary\r\n   * to calculate the height for the lazy rendering.\r\n   */\r\n  @Prop({ default: 'auto' }) rowHeight: TRowHeightFunc | number | string;\r\n  /**\r\n   * The group header row height\r\n   */\r\n  @Prop() groupRowHeight: number | string;\r\n  /**\r\n   * The group header row styles\r\n   */\r\n  @Prop() groupHeaderStyles: Record<string, string | number>;\r\n  /**\r\n   * The group header row css classes\r\n   */\r\n  @Prop() groupHeaderClasses: string | Array<string>;\r\n  /**\r\n   * The detail row height\r\n   */\r\n  @Prop() rowDetailHeight: number | string;\r\n  /**\r\n   * Type of column width distribution formula.\r\n   * Example: flex, force, standard\r\n   */\r\n  @Prop({ type: String, validator: (value: string) => ['standard', 'flex', 'force'].indexOf(value) !== -1 })\r\n  columnMode: string;\r\n  /**\r\n   * The minimum header height in pixels.\r\n   * Pass a falsey for no header\r\n   */\r\n  @Prop({ type: Number, default: 30 }) headerHeight: number;\r\n  /**\r\n   * The minimum footer height in pixels.\r\n   * Pass falsey for no footer\r\n   */\r\n  @Prop({ type: Number, default: 0 }) footerHeight: number;\r\n  /**\r\n   * If the table should use external paging\r\n   * otherwise its assumed that all data is preloaded.\r\n   */\r\n  @Prop({ type: Boolean, default: false }) externalPaging: boolean;\r\n  /**\r\n   * If the table should use external page switcher\r\n   */\r\n  @Prop({ type: Boolean, default: false }) externalPager: boolean;\r\n  /**\r\n   * If the table should use external sorting or\r\n   * the built-in basic sorting.\r\n   */\r\n  @Prop({ type: Boolean, default: false }) externalSorting: boolean;\r\n  /**\r\n   * The page size to be shown.\r\n   * Default value: `undefined`\r\n   */\r\n  @Prop() limit: number;\r\n  /**\r\n   * The total count of all rows.\r\n   * Default value: `0`\r\n   */\r\n  @Prop({ type: Number, default: 0 }) count: number;\r\n  /**\r\n   * The current offset ( page - 1 ) shown.\r\n   * Default value: `0`\r\n   */\r\n  @Prop({ type: Number, default: 0 }) offset: number;\r\n  /**\r\n   * Show the linear loading bar.\r\n   * Default value: `false`\r\n   */\r\n  @Prop({ type: Boolean, default: false }) loadingIndicator: boolean;\r\n  /**\r\n   * Type of row selection. Options are:\r\n   *\r\n   *  - `single`\r\n   *  - `multi`\r\n   *  - `checkbox`\r\n   *  - `multiClick`\r\n   *  - `cell`\r\n   *\r\n   * For no selection pass a `false`.\r\n   * Default value: `undefined`\r\n   */\r\n  @Prop() selectionType: SelectionType;\r\n  /**\r\n   * Type of row check type. Options are:\r\n   *\r\n   *  - `checkIsSelect`\r\n   *  - `checkNoSelect`\r\n   *\r\n   * Default value: `checkIsSelect`\r\n   */\r\n  @Prop({ default: CheckMode.checkIsSelect }) checkMode: CheckMode;\r\n  /**\r\n   * Enable/Disable ability to re-order columns\r\n   * by dragging them.\r\n   */\r\n  @Prop({ type: Boolean, default: true }) reorderable: boolean;\r\n  /**\r\n   * Swap columns on re-order columns or\r\n   * move them.\r\n   */\r\n  @Prop({ type: Boolean, default: false }) swapColumns: boolean;\r\n  /**\r\n   * The type of sorting\r\n   */\r\n  @Prop({ type: String, validator: (value: string) => ['single', 'multi'].indexOf(value) !== -1 }) sortType: string;\r\n  /**\r\n   * Array of sorted columns by property and type.\r\n   * Default value: `[]`\r\n   */\r\n  @Prop({ type: Array, default: (): Array<ISortPropDir> => [] }) sorts: ISortPropDir[];\r\n  /**\r\n   * Go to first page when sorting to see the newly sorted data\r\n   * Default value: true\r\n   */\r\n  @Prop({ default: true }) goToFirstAfterSort: boolean;\r\n  /**\r\n   * Css class overrides\r\n   */\r\n  @Prop({\r\n    type: Object,\r\n    default: () => ({\r\n      sortAscending: 'datatable-icon-up',\r\n      sortDescending: 'datatable-icon-down',\r\n      pagerLeftArrow: 'datatable-icon-left',\r\n      pagerRightArrow: 'datatable-icon-right',\r\n      pagerPrevious: 'datatable-icon-prev',\r\n      pagerNext: 'datatable-icon-skip',\r\n    }),\r\n  })\r\n  cssClasses: Record<string, unknown>;\r\n  /**\r\n   * Message overrides for localization\r\n   *\r\n   * emptyMessage     [default] = 'No data to display'\r\n   * totalMessage     [default] = 'total'\r\n   * selectedMessage  [default] = 'selected'\r\n   */\r\n  @Prop({\r\n    type: Object,\r\n    default: () => ({\r\n      emptyMessage: 'No data to display',\r\n      // Footer total message\r\n      totalMessage: 'total',\r\n      // Footer selected message\r\n      selectedMessage: 'selected',\r\n    }),\r\n  })\r\n  messages: Record<string, string>;\r\n  /**\r\n   * This will be used when displaying or selecting rows.\r\n   * when tracking/comparing them, we'll use the value of this fn,\r\n   *\r\n   * (`fn(x) === fn(y)` instead of `x === y`)\r\n   */\r\n  @Prop({ type: Function, default: (x: Record<string, unknown>) => x }) rowIdentity: (\r\n    x: Record<string, unknown>\r\n  ) => string | number;\r\n  /**\r\n   * Row specific classes.\r\n   * Similar implementation to ngClass.\r\n   *\r\n   *  [rowClass]=\"'first second'\"\r\n   *  [rowClass]=\"{ 'first': true, 'second': true, 'third': false }\"\r\n   */\r\n  @Prop() rowClass: (row: Record<string, unknown>, rowIndex: number) => string | string;\r\n  /**\r\n   * A boolean/function you can use to check whether you want\r\n   * to select a particular row based on a criteria. Example:\r\n   *\r\n   *    (selection) => {\r\n   *      return selection !== 'Ethel Price';\r\n   *    }\r\n   */\r\n  @Prop() selectCheck: () => void;\r\n  /**\r\n   * A function you can use to check whether you want\r\n   * to show the checkbox for a particular row based on a criteria. Example:\r\n   *\r\n   *    (row, column, value) => {\r\n   *      return row.name !== 'Ethel Price';\r\n   *    }\r\n   */\r\n  @Prop({ type: Function, default: null }) displayCheck: (\r\n    row: Record<string, unknown>,\r\n    column?: TableColumn,\r\n    value?: unknown\r\n  ) => boolean;\r\n  /**\r\n   * A boolean you can use to set the detault behaviour of rows and groups\r\n   * whether they will start expanded or not. If ommited the default is NOT expanded.\r\n   *\r\n   */\r\n  @Prop({ type: Boolean, default: false }) groupExpansionDefault: boolean;\r\n  /**\r\n   * Property to which you can use for custom tracking of rows.\r\n   * Example: 'name'\r\n   */\r\n  @Prop() trackByProp: string;\r\n  /**\r\n   * Property to which you can use for determining select all\r\n   * rows on current page or not.\r\n   *\r\n   * @type {boolean}\r\n   * @memberOf DatatableComponent\r\n   */\r\n  @Prop({ type: Boolean, default: false }) selectAllRowsOnPage: boolean;\r\n  /**\r\n   * A flag for row virtualization on / off\r\n   */\r\n  @Prop({ type: Boolean, default: true }) virtualization: boolean;\r\n  /**\r\n   * Tree from relation\r\n   */\r\n  @Prop() treeFromRelation: string;\r\n  /**\r\n   * Tree to relation\r\n   */\r\n  @Prop() treeToRelation: string;\r\n  /**\r\n   * Is the tree will be lazy loading\r\n   */\r\n  @Prop({ default: false }) lazyTree: boolean;\r\n  /**\r\n   * A flag for switching summary row on / off\r\n   */\r\n  @Prop({ type: Boolean, default: false }) summaryRow: boolean;\r\n  /**\r\n   * A height of summary row\r\n   */\r\n  @Prop({ default: 30 }) summaryHeight: number | string;\r\n  /**\r\n   * A property holds a summary row position: top/bottom\r\n   */\r\n  @Prop({ type: String, default: 'top' }) summaryPosition: string;\r\n  /**\r\n   * Before selection row check function. If return false selection will be cancel\r\n   */\r\n  @Prop() beforeSelectRowCheck: (\r\n    newRow: Record<string, unknown>,\r\n    oldSelected: Record<string, unknown>[]\r\n  ) => boolean | Promise<boolean>;\r\n\r\n  // non-reactive\r\n  /**\r\n   * Reference to the body component for manually\r\n   * invoking functions on the body.\r\n   */\r\n  bodyComponent: DataTableBody;\r\n  /**\r\n   * Reference to the header component for manually\r\n   * invoking functions on the header.\r\n   *\r\n   * @private\r\n   * @type {DataTableHeaderComponent}\r\n   * @memberOf DatatableComponent\r\n   */\r\n  headerComponent: DataTableHeaderComponent;\r\n\r\n  resizeHandler: () => void;\r\n  resizeObserver?: ResizeObserver;\r\n\r\n  groupedRows: IGroupedRows[] = null;\r\n\r\n  innerWidth = 0;\r\n  pageSize = 0;\r\n  bodyHeight = 0;\r\n  rowCount = 0;\r\n  offsetX = 0;\r\n  internalRows: Array<Record<string, unknown>> = null;\r\n  initialRows: Array<Record<string, unknown>> = null;\r\n  internalColumns: TableColumn[] = null;\r\n  myColumnMode: ColumnMode = ColumnMode.standard;\r\n  mySortType: SortType = SortType.single;\r\n  innerOffset = 0; // page number after scrolling\r\n  mySelected: Array<Record<string, unknown>> = [];\r\n  myChecked: Array<Record<string, unknown>> = [];\r\n  expandedGroups: Record<string, boolean> = {};\r\n  renderTracking = false;\r\n  isVisible = false;\r\n\r\n  rowDetail = false; // DatatableRowDetailDirective;\r\n  groupHeader = false; // DatatableGroupHeaderDirective;\r\n\r\n  groupHeaderSlot: (obj: Record<string, unknown>) => VNode[] = null;\r\n  rowDetailSlot: (obj: Record<string, unknown>) => VNode[] = null;\r\n  footerSlot: (obj: Record<string, unknown>) => VNode[] = null;\r\n  // isColumnsInited = false;\r\n  // isColumnsInitedTimeoutId: number;\r\n\r\n  private readonly scrollbarHelper: ScrollbarHelper = new ScrollbarHelper();\r\n  private readonly dimensionsHelper: DimensionsHelper = new DimensionsHelper();\r\n  private needToCalculateDims = true;\r\n  private activeGroupRow: IGroupedRows = null;\r\n\r\n  @Watch('rows', { immediate: true }) onRowsChanged(val: Array<Record<string, unknown>>): void {\r\n    if (val) {\r\n      this.internalRows = [...val];\r\n    }\r\n    const treeFrom = optionalGetterForProp(this.treeFromRelation);\r\n    const treeTo = optionalGetterForProp(this.treeToRelation);\r\n    if (treeFrom && treeTo) {\r\n      this.initialRows = this.internalRows;\r\n    }\r\n\r\n    // auto sort on new updates\r\n    if (!this.externalSorting) {\r\n      this.sortInternalRows();\r\n    }\r\n\r\n    // auto group by parent on new update\r\n    this.internalRows = groupRowsByParents(\r\n      this.internalRows as Array<{ level: number; treeStatus?: string }>,\r\n      treeFrom,\r\n      treeTo,\r\n      this.lazyTree\r\n    );\r\n    this.groupedRows = null;\r\n    if (this.rows && this.groupRowsBy) {\r\n      // this.groupedRows = this.groupArrayBy(this.rows, this.groupRowsBy);\r\n      this.groupedRows = this.groupArrayBy(this.rows, this.groupRowsBy, 0);\r\n      this.internalRows = this.processGroupedRows(this.groupedRows) as Array<Record<string, unknown>>;\r\n    }\r\n\r\n    // recalculate sizes/etc\r\n    if (this.$el) {\r\n      this.recalculate();\r\n    }\r\n  }\r\n\r\n  @Watch('groupRowsBy') onGroupRowsByChanged(\r\n    newVal: Array<TGroupByField | Array<TGroupByField>>,\r\n    oldVal: Array<TGroupByField | Array<TGroupByField>>\r\n  ): void {\r\n    if (isArrayEqual(newVal, oldVal)) {\r\n      return;\r\n    }\r\n    this.expandedGroups = {};\r\n    this.groupHeader = Boolean(this.groupRowsBy);\r\n    this.groupedRows = null;\r\n    if (this.groupRowsBy) {\r\n      this.groupedRows = this.groupArrayBy(this.rows, this.groupRowsBy, 0);\r\n      this.internalRows = this.processGroupedRows(this.groupedRows) as Array<Record<string, unknown>>;\r\n    } else {\r\n      this.internalRows = this.rows;\r\n    }\r\n    // auto sort on new updates\r\n    if (!this.externalSorting) {\r\n      this.sortInternalRows();\r\n    }\r\n    this.recalculate();\r\n  }\r\n\r\n  /**\r\n   * Columns to be displayed.\r\n   */\r\n  @Watch('columns', { immediate: true }) onColumnsChanged(newVal: TableColumn[]): void {\r\n    if (newVal) {\r\n      setColumnsDefaults(newVal, this);\r\n      this.internalColumns = [...newVal];\r\n      this.$nextTick(() => this.recalculateColumns());\r\n    }\r\n  }\r\n  /**\r\n   * The page size to be shown.\r\n   * Default value: `undefined`\r\n   */\r\n  @Watch('limit') onLimitChanged(): void {\r\n    // recalculate sizes/etc\r\n    this.recalculate();\r\n  }\r\n  /**\r\n   * The total count of all rows.\r\n   * Default value: `0`\r\n   */\r\n  @Watch('count') onCountChanged(): void {\r\n    // recalculate sizes/etc\r\n    this.recalculate();\r\n  }\r\n\r\n  @Watch('columnMode', { immediate: true }) onColumnModeChanged(): void {\r\n    this.myColumnMode = ColumnMode[this.columnMode] as ColumnMode;\r\n  }\r\n\r\n  @Watch('sortType', { immediate: true }) onSortTypeChanged(): void {\r\n    if (SortType[this.sortType]) {\r\n      this.mySortType = SortType[this.sortType] as SortType;\r\n    }\r\n  }\r\n\r\n  @Watch('offset', { immediate: true }) onOffsetChanged(): void {\r\n    if (this.innerOffset !== this.offset) {\r\n      this.innerOffset = this.offset;\r\n      if (this.pageSize && this.innerOffset >= 0) {\r\n        this.onFooterPage({ page: this.innerOffset + 1 });\r\n      }\r\n    }\r\n  }\r\n\r\n  @Watch('pageSize') onPageSizeChanged(): void {\r\n    if (this.pageSize && this.innerOffset >= 0) {\r\n      this.$nextTick(() => this.onFooterPage({ page: this.innerOffset + 1 }));\r\n    }\r\n  }\r\n\r\n  @Watch('selected', { immediate: true }) onSelectedChanged(): void {\r\n    this.mySelected = this.selected;\r\n  }\r\n\r\n  @Watch('checked', { immediate: true }) onCheckedChanged(): void {\r\n    this.myChecked = this.checked;\r\n  }\r\n\r\n  @Watch('sorts') onSortsChanged(): void {\r\n    this.innerSortRows();\r\n  }\r\n\r\n  /**\r\n   * Window resize handler to update sizes.\r\n   */\r\n  @throttleable(5)\r\n  onWindowResize(): void {\r\n    this.recalculate();\r\n  }\r\n\r\n  created(): void {\r\n    this.groupHeader = Boolean(this.groupRowsBy);\r\n    if (this.$listeners.rendered) {\r\n      this.renderTracking = true;\r\n    }\r\n  }\r\n\r\n  beforeDestroy(): void {\r\n    if (this.resizeHandler) {\r\n      window.removeEventListener('resize', this.resizeHandler);\r\n    }\r\n    if (this.resizeObserver) {\r\n      this.resizeObserver.unobserve(this.$el);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hook that is called after data-bound\r\n   * properties of a directive are initialized.\r\n   */\r\n  mounted(): void {\r\n    this.bodyComponent = this.$refs.datatableBody as DataTableBody;\r\n    this.headerComponent = this.$refs.datatableHeader as DataTableHeaderComponent;\r\n    this.groupHeaderSlot = this.$scopedSlots.groupHeader;\r\n    this.rowDetailSlot = this.$scopedSlots.rowDetail;\r\n    this.footerSlot = this.$scopedSlots.footer;\r\n    this.rowDetail = Boolean(this.rowDetailSlot);\r\n\r\n    if (!this.externalSorting) {\r\n      this.sortInternalRows();\r\n    }\r\n    if ((window as Window).ResizeObserver) {\r\n      this.needToCalculateDims = false;\r\n      this.resizeObserver = new (window as Window).ResizeObserver(entries => {\r\n        let height = 0;\r\n        if (entries.length && entries[0].contentRect) {\r\n          this.innerWidth = Math.floor(entries[0].contentRect.width);\r\n          height = entries[0].contentRect.height;\r\n        } else {\r\n          height = this.$el.clientHeight;\r\n          this.innerWidth = this.$el.clientWidth;\r\n        }\r\n        if (this.scrollbarV) {\r\n          if (this.headerHeight) {\r\n            height = height - this.headerHeight;\r\n          }\r\n          if (this.footerHeight) {\r\n            height = height - this.footerHeight;\r\n          }\r\n          this.bodyHeight = height;\r\n        }\r\n        if (typeof requestAnimationFrame === 'undefined') {\r\n          this.recalculate();\r\n        } else {\r\n          requestAnimationFrame(() => {\r\n            this.recalculate();\r\n          });\r\n        }\r\n      });\r\n      this.resizeObserver.observe(this.$el);\r\n    } else {\r\n      this.resizeHandler = this.onWindowResize.bind(this) as () => void;\r\n      window.addEventListener('resize', this.resizeHandler);\r\n    }\r\n    const init = () => {\r\n      this.recalculate();\r\n      // emit page for virtual server-side kickoff\r\n      if (this.externalPaging && this.scrollbarV) {\r\n        this.$emit('page', {\r\n          count: this.count,\r\n          pageSize: this.pageSize,\r\n          limit: this.limit,\r\n          offset: this.innerOffset,\r\n        });\r\n      }\r\n    };\r\n    if (typeof requestAnimationFrame === 'undefined') {\r\n      init();\r\n    } else {\r\n      requestAnimationFrame(() => {\r\n        init();\r\n      });\r\n    }\r\n  }\r\n\r\n  get myRowHeight(): number | string | TRowHeightFunc {\r\n    if (typeof this.rowHeight === 'string') {\r\n      return this.rowHeight === 'auto' ? 'auto' : Number(this.rowHeight);\r\n    }\r\n    return this.rowHeight;\r\n  }\r\n\r\n  get myOffset(): number {\r\n    if (this.rowCount) {\r\n      return Math.max(Math.min(this.innerOffset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\r\n    }\r\n    return this.innerOffset;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied if the header height if fixed height.\r\n   */\r\n  get isFixedHeader(): boolean {\r\n    const headerHeight: number | string = this.headerHeight;\r\n    return typeof headerHeight === 'string' ? <string>headerHeight !== 'auto' : true;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to the root element if\r\n   * the row heights are fixed heights.\r\n   */\r\n  get isFixedRow(): boolean {\r\n    if (typeof this.rowHeight === 'function' || this.rowHeight === 'auto') {\r\n      return false;\r\n    }\r\n    return true;\r\n    // const rowHeight: number | string = this.rowHeight;\r\n    // return typeof rowHeight === 'string' ? rowHeight !== 'auto' : true;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root element if\r\n   * vertical scrolling is enabled.\r\n   */\r\n  get isVertScroll(): boolean {\r\n    return this.scrollbarV;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root element if\r\n   * virtualization is enabled.\r\n   */\r\n  get isVirtualized(): boolean {\r\n    return this.virtualization;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to the root element\r\n   * if the horziontal scrolling is enabled.\r\n   */\r\n  get isHorScroll(): boolean {\r\n    return this.scrollbarH;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root element is selectable.\r\n   */\r\n  get isSelectable(): boolean {\r\n    // eslint-disable-next-line no-undefined\r\n    return this.selectionType !== undefined;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root is checkbox selection.\r\n   */\r\n  get isCheckboxSelection(): boolean {\r\n    return this.selectionType === SelectionType.checkbox;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root if cell selection.\r\n   */\r\n  get isCellSelection(): boolean {\r\n    return this.selectionType === SelectionType.cell;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root if single select.\r\n   */\r\n  get isSingleSelection(): boolean {\r\n    return this.selectionType === SelectionType.single;\r\n  }\r\n\r\n  get isSingleFocusSelection(): boolean {\r\n    return this.selectionType === SelectionType.singleFocus;\r\n  }\r\n\r\n  /**\r\n   * CSS class added to root element if mulit select\r\n   */\r\n  get isMultiSelection(): boolean {\r\n    return this.selectionType === SelectionType.multi;\r\n  }\r\n\r\n  /**\r\n   * CSS class added to root element if mulit click select\r\n   */\r\n  get isMultiClickSelection(): boolean {\r\n    return this.selectionType === SelectionType.multiClick;\r\n  }\r\n\r\n  get classObject(): Record<string, unknown> {\r\n    return {\r\n      'fixed-header': this.isFixedHeader,\r\n      'fixed-row': this.isFixedRow,\r\n      'scroll-vertical': this.isVertScroll,\r\n      virtualized: this.isVirtualized,\r\n      'scroll-horz': this.isHorScroll,\r\n      selectable: this.isSelectable,\r\n      'checkbox-selection': this.isCheckboxSelection,\r\n      'cell-selection': this.isCellSelection,\r\n      'single-selection': this.isSingleSelection,\r\n      'multi-selection': this.isMultiSelection,\r\n      'multi-click-selection': this.isMultiClickSelection,\r\n    };\r\n  }\r\n\r\n  get allRowsSelected(): boolean {\r\n    let arr = this.mySelected;\r\n    if (this.checkMode === CheckMode.checkNoSelect) {\r\n      arr = this.myChecked;\r\n    }\r\n    let allRowsSelected = this.rows && arr && arr.length === this.rows.length;\r\n\r\n    if (this.selectAllRowsOnPage && this.bodyComponent) {\r\n      const indexes: { first: number; last: number } = this.bodyComponent.indexes;\r\n      let rowsOnPage = this.rows.length;\r\n      if (this.limit && !this.scrollbarV && !this.virtualization) {\r\n        rowsOnPage = indexes.last - indexes.first;\r\n      }\r\n      allRowsSelected = arr.length === rowsOnPage;\r\n    }\r\n\r\n    return arr && this.rows && this.rows.length !== 0 && allRowsSelected;\r\n  }\r\n\r\n  get scrollbarWidth(): number {\r\n    return this.scrollbarHelper.width;\r\n  }\r\n\r\n  reset(): void {\r\n    this.bodyComponent.reset();\r\n  }\r\n\r\n  adjust(): void {\r\n    this.bodyHeight = -1;\r\n    setTimeout(() => {\r\n      this.recalculateDims();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Recalc's the sizes of the grid.\r\n   *\r\n   * Updated automatically on changes to:\r\n   *\r\n   *  - Columns\r\n   *  - Rows\r\n   *  - Paging related\r\n   *\r\n   * Also can be manually invoked or upon window resize.\r\n   */\r\n  recalculate(): void {\r\n    if (this.needToCalculateDims) {\r\n      // this.recalculatePages will be called in this.recalculateDims\r\n      this.recalculateDims();\r\n    } else {\r\n      this.recalculatePages();\r\n    }\r\n    this.recalculateColumns();\r\n  }\r\n\r\n  /**\r\n   * Recalulcates the column widths based on column width\r\n   * distribution mode and scrollbar offsets.\r\n   */\r\n  recalculateColumns(\r\n    columns: TableColumn[] = this.internalColumns,\r\n    forceIdx: number = -1,\r\n    allowBleed: boolean = this.scrollbarH\r\n  ): TableColumn[] | null {\r\n    if (!columns) {\r\n      return null;\r\n    }\r\n    let width = this.innerWidth;\r\n    if (this.scrollbarV || this.treeFromRelation) {\r\n      width = width - this.scrollbarHelper.width;\r\n    }\r\n    this.calculateColumnsWidth(width, columns, forceIdx, allowBleed);\r\n    return columns;\r\n  }\r\n\r\n  calculateColumnsWidth(\r\n    width: number,\r\n    columns: TableColumn[] = this.internalColumns,\r\n    forceIdx: number = -1,\r\n    allowBleed: boolean = this.scrollbarH\r\n  ) {\r\n    if (this.myColumnMode === ColumnMode.force) {\r\n      forceFillColumnWidths(columns, width, forceIdx, allowBleed);\r\n    } else if (this.myColumnMode === ColumnMode.flex) {\r\n      adjustColumnWidths(columns, width);\r\n    }\r\n    const hiddenColumns = columns.filter(col => col.hidden);\r\n    if (hiddenColumns.length && this.bodyComponent) {\r\n      this.bodyComponent.onInnerWidthChanged();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recalculates the dimensions of the table size.\r\n   * Internally calls the page size and row count calcs too.\r\n   *\r\n   */\r\n  recalculateDims(): void {\r\n    const dims = this.dimensionsHelper.getDimensions(this.$el);\r\n    this.innerWidth = Math.floor(dims.width);\r\n\r\n    if (this.scrollbarV) {\r\n      let height = dims.height;\r\n      if (this.headerHeight) {\r\n        height = height - this.headerHeight;\r\n      }\r\n      if (this.footerHeight) {\r\n        height = height - this.footerHeight;\r\n      }\r\n      this.bodyHeight = height;\r\n    }\r\n    this.recalculatePages();\r\n  }\r\n\r\n  /**\r\n   * Recalculates the pages after a update.\r\n   */\r\n  recalculatePages(): void {\r\n    this.pageSize = this.calcPageSize();\r\n    this.rowCount = this.calcRowCount();\r\n    this.$emit('row-count', this.rowCount);\r\n  }\r\n\r\n  /**\r\n   * Body triggered a page event.\r\n   */\r\n  onBodyPage({ offset }: { offset: number }): void {\r\n    // Avoid pagination caming from body events like scroll when the table\r\n    // has no virtualization and the external paging is enable.\r\n    // This means, let's the developer handle pagination by my him(her) self\r\n    if (this.externalPaging && !this.virtualization) {\r\n      return;\r\n    }\r\n    if (this.innerOffset === offset) {\r\n      return;\r\n    }\r\n    this.innerOffset = offset;\r\n    this.$emit('page', {\r\n      count: this.count,\r\n      pageSize: this.pageSize,\r\n      limit: this.limit,\r\n      offset: this.innerOffset,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The body triggered a scroll event.\r\n   */\r\n  onBodyScroll(event: MouseEvent): void {\r\n    this.offsetX = event.offsetX;\r\n    // this.$emit('offsetX', event.offsetX);\r\n    this.$emit('scroll', event);\r\n  }\r\n\r\n  /**\r\n   * The footer triggered a page event.\r\n   */\r\n  onFooterPage(event: { page: number }): void {\r\n    this.innerOffset = event.page - 1;\r\n    if (this.bodyComponent) {\r\n      this.bodyComponent.updateOffsetY(this.innerOffset, true);\r\n    }\r\n\r\n    this.$emit('page', {\r\n      count: this.count,\r\n      pageSize: this.pageSize,\r\n      limit: this.limit,\r\n      offset: this.innerOffset,\r\n    });\r\n\r\n    if (this.selectAllRowsOnPage && !this.scrollbarV && this.limit) {\r\n      this.mySelected = [];\r\n      this.$emit('select', {\r\n        selected: this.mySelected,\r\n      });\r\n    }\r\n  }\r\n\r\n  onVisible(visible: boolean): void {\r\n    if (this.isVisible !== visible) {\r\n      this.isVisible = visible;\r\n      if (this.isVisible) {\r\n        this.recalculate();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recalculates the sizes of the page\r\n   */\r\n  calcPageSize(val: Array<Record<string, unknown>> = this.rows): number {\r\n    // Keep the page size constant even if the row has been expanded.\r\n    // This is because an expanded row is still considered to be a child of\r\n    // the original row.  Hence calculation would use rowHeight only.\r\n    if (this.scrollbarV && this.virtualization) {\r\n      let rowHeight = 50;\r\n      if (typeof this.rowHeight === 'number') {\r\n        rowHeight = this.rowHeight;\r\n      }\r\n      const size = Math.ceil(this.bodyHeight / rowHeight);\r\n      return Math.max(size, 0);\r\n    }\r\n\r\n    // if limit is passed, we are paging\r\n    // eslint-disable-next-line no-undefined\r\n    if (this.limit !== undefined && this.limit !== null) {\r\n      return Number(this.limit);\r\n    }\r\n\r\n    // otherwise use row length\r\n    if (val) {\r\n      return val.length;\r\n    }\r\n\r\n    // other empty :(\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Calculates the row count.\r\n   */\r\n  calcRowCount(val: Array<Record<string, unknown>> = this.rows): number {\r\n    if (!this.externalPaging) {\r\n      if (!val) {\r\n        return 0;\r\n      }\r\n\r\n      if (this.groupRowsBy) {\r\n        return this.internalRows.length;\r\n      }\r\n      if (this.treeFromRelation !== null && this.treeToRelation !== null) {\r\n        return this.internalRows.length;\r\n      }\r\n      return val.length;\r\n    }\r\n    return this.count;\r\n  }\r\n\r\n  /**\r\n   * The header triggered a contextmenu event.\r\n   */\r\n  onColumnContextmenu({ event, column }: { event: MouseEvent; column: TableColumn }): void {\r\n    this.$emit('tableContextmenu', { event, type: ContextmenuType.header, content: column });\r\n  }\r\n\r\n  /**\r\n   * The body triggered a contextmenu event.\r\n   */\r\n  onRowContextmenu({ event, row }: { event: MouseEvent; row: Record<string, unknown> }): void {\r\n    this.$emit('tableContextmenu', { event, type: ContextmenuType.body, content: row });\r\n  }\r\n\r\n  /**\r\n   * The header triggered a column resize event.\r\n   */\r\n  onColumnResize({ column, newValue }: { column: TableColumn; newValue: number }): void {\r\n    /* Safari/iOS 10.2 workaround */\r\n    // eslint-disable-next-line no-undefined\r\n    if (column === undefined) {\r\n      return;\r\n    }\r\n\r\n    let idx: number;\r\n    this.internalColumns.map((c, i) => {\r\n      if (c.$$id === column.$$id) {\r\n        idx = i;\r\n        c.width = newValue;\r\n        c.canAutoResize = false;\r\n\r\n        // set this so we can force the column\r\n        // width distribution to be to this value\r\n        c.$$oldWidth = newValue;\r\n      }\r\n\r\n      return c;\r\n    });\r\n\r\n    this.recalculateColumns(this.internalColumns, idx);\r\n\r\n    this.$emit('resize', {\r\n      column,\r\n      newValue,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The header triggered a column re-order event.\r\n   */\r\n  onColumnReorder({ column, newValue, prevValue }: { column: TableColumn; newValue: number; prevValue: number }): void {\r\n    const cols = [...this.internalColumns];\r\n\r\n    if (this.swapColumns) {\r\n      const prevCol = cols[newValue];\r\n      if (column.$$id === prevCol.$$id) {\r\n        return;\r\n      }\r\n      cols[newValue] = column;\r\n      cols[prevValue] = prevCol;\r\n    } else if (newValue > prevValue) {\r\n      const movedCol = cols[prevValue];\r\n      for (let i = prevValue; i < newValue; i++) {\r\n        cols[i] = cols[i + 1];\r\n      }\r\n      cols[newValue] = movedCol;\r\n    } else {\r\n      const movedCol = cols[prevValue];\r\n      for (let i = prevValue; i > newValue; i--) {\r\n        cols[i] = cols[i - 1];\r\n      }\r\n      cols[newValue] = movedCol;\r\n    }\r\n\r\n    this.internalColumns = cols;\r\n\r\n    this.$emit('reorder', {\r\n      column,\r\n      newValue,\r\n      prevValue,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The header triggered a column sort event.\r\n   */\r\n  onColumnSort(event: ISortEvent): void {\r\n    // clean all checked rows\r\n    if (this.selectAllRowsOnPage) {\r\n      this.myChecked = [];\r\n      this.$emit('check', {\r\n        checked: this.myChecked,\r\n      });\r\n    }\r\n\r\n    // this.mySorts = event.sorts;\r\n    if (Array.isArray(this.sorts) && Array.isArray(event.sorts)) {\r\n      this.sorts.length = 0;\r\n      event.sorts.forEach(item => this.sorts.push(item));\r\n      if (this.sorts.length === 0) {\r\n        this.sorts.push({ dir: null, prop: null });\r\n      }\r\n    }\r\n\r\n    // let rows = this.internalRows;\r\n    this.innerSortRows();\r\n\r\n    // Go to first page when sorting to see the newly sorted data\r\n    if (this.goToFirstAfterSort) {\r\n      this.innerOffset = 0;\r\n    }\r\n    this.bodyComponent.updateOffsetY(this.myOffset, true);\r\n    this.$emit('sort', { ...event, sorts: event?.sorts?.filter(s => s.prop) });\r\n  }\r\n\r\n  /**\r\n   * Toggle all row selection\r\n   */\r\n  onHeaderSelect(isChecked: boolean): void {\r\n    let evName = 'select';\r\n    if (this.selectAllRowsOnPage) {\r\n      // before we splice, check if we currently have all selected\r\n      const first = this.bodyComponent.indexes.first;\r\n      const last = this.bodyComponent.indexes.last;\r\n      if (this.checkMode === CheckMode.checkIsSelect) {\r\n        const allSelected = this.mySelected.length === last - first;\r\n        // remove all existing either way\r\n        this.mySelected = [];\r\n        // do the opposite here\r\n        if (!allSelected) {\r\n          this.mySelected.push(...this.internalRows.slice(first, last));\r\n        }\r\n      } else {\r\n        evName = 'check';\r\n        let allChecked = this.myChecked.length === last - first;\r\n        if (this.scrollbarV && this.virtualization && !this.limit) {\r\n          allChecked = this.myChecked.length === this.internalRows.length;\r\n        }\r\n        // remove all existing either way\r\n        this.myChecked = [];\r\n        // do the opposite here\r\n        if (isChecked && !allChecked) {\r\n          if (this.scrollbarV && this.virtualization) {\r\n            this.myChecked.push(...this.internalRows);\r\n          } else {\r\n            this.myChecked.push(...this.internalRows.slice(first, last));\r\n          }\r\n        }\r\n      }\r\n    } else if (this.checkMode === CheckMode.checkIsSelect) {\r\n      // before we splice, chk if we currently have all selected\r\n      const allSelected = this.mySelected.length === this.rows.length;\r\n      // remove all existing either way\r\n      this.mySelected = [];\r\n      // do the opposite here\r\n      if (!allSelected) {\r\n        this.mySelected.push(...this.rows);\r\n      }\r\n    } else {\r\n      const allChecked = this.myChecked.length === this.rows.length;\r\n      this.myChecked = [];\r\n      if (!allChecked) {\r\n        this.myChecked.push(...this.rows);\r\n      }\r\n    }\r\n\r\n    this.$emit(evName, {\r\n      selected: this.mySelected,\r\n      checked: this.myChecked,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A row was selected from body\r\n   */\r\n  onBodySelect(event: Event): void {\r\n    this.$emit('select', event);\r\n  }\r\n\r\n  /**\r\n   * A row was checked from body\r\n   */\r\n  onBodyCheck(event: Event): void {\r\n    this.$emit('check', event);\r\n  }\r\n\r\n  onGroupToggle(event: { value: IGroupedRows | boolean }): void {\r\n    if (!event) {\r\n      return;\r\n    }\r\n    if (typeof event.value !== 'boolean') {\r\n      event.value.__expanded = !event.value.__expanded;\r\n      this.expandedGroups[event.value.key] = event.value.__expanded;\r\n      if (this.activeGroupRow) {\r\n        this.activeGroupRow.active = false;\r\n      }\r\n      this.activeGroupRow = event.value;\r\n      this.activeGroupRow.active = true;\r\n    }\r\n    this.internalRows = this.processGroupedRows(this.groupedRows) as Array<Record<string, unknown>>;\r\n    this.recalculate();\r\n    this.$emit('group-toggle', Object.freeze(event));\r\n  }\r\n\r\n  /**\r\n   * A row was expanded or collapsed for tree\r\n   */\r\n  onTreeAction(event: { row: Record<string, unknown> }): void {\r\n    const row = event.row;\r\n    // TODO: For duplicated items this will not work\r\n    const rowIndex = this.rows.findIndex(r => r[this.treeToRelation] === event.row[this.treeToRelation]);\r\n    this.$emit('tree-action', { row, rowIndex });\r\n  }\r\n\r\n  onColumnInsert(column: TableColumn): void {\r\n    setColumnDefaults(column, this);\r\n    if (!this.internalColumns) {\r\n      this.internalColumns = [column];\r\n    } else {\r\n      this.internalColumns = [...this.internalColumns, column];\r\n    }\r\n    // if (!this.internalColumns) {\r\n    //   setColumnDefaults(column, this);\r\n    //   this.internalColumns = [column];\r\n    // }\r\n    // const colIndex = this.internalColumns.findIndex(c => {\r\n    //   if (column.prop) {\r\n    //     return c.prop === column.prop;\r\n    //   } else {\r\n    //     return c.name === column.name;\r\n    //   }\r\n    // });\r\n    // if (colIndex < 0) {\r\n    //   setColumnDefaults(column, this);\r\n    //   this.internalColumns = [...this.internalColumns, column];\r\n    // } else {\r\n    //   const col = this.internalColumns[colIndex];\r\n    //   this.$set(col, 'headerTemplate', column.headerTemplate);\r\n    //   this.$set(col, 'cellTemplate', column.cellTemplate);\r\n    // }\r\n    if (this.isVisible) {\r\n      this.recalculateColumns();\r\n    }\r\n    // clearTimeout(this.isColumnsInitedTimeoutId);\r\n    // this.isColumnsInitedTimeoutId = setTimeout(() => this.$set(this, 'isColumnsInited', true), 50) as unknown as number;\r\n  }\r\n\r\n  onColumnRemoved(column: TableColumn): void {\r\n    const colIndex = this.internalColumns.findIndex(c => c.name === column.name);\r\n    const cols = [...this.internalColumns];\r\n    cols.splice(colIndex, 1);\r\n    this.internalColumns = [...cols];\r\n    this.recalculateColumns();\r\n  }\r\n\r\n  onColumnChangeVisible(column: TableColumn): void {\r\n    // we have to allow the cell's element to set it's width\r\n    setTimeout(() => this.recalculateColumns(), 100);\r\n  }\r\n\r\n  /**\r\n   * listen for changes to input bindings of all DataTableColumnDirective and\r\n   * trigger the columnTemplates.changes observable to emit\r\n   */\r\n  // todo\r\n  // private listenForColumnInputChanges(): void {\r\n  //   this._subscriptions.push(this.columnChangesService\r\n  //     .columnInputChanges$\r\n  //     .subscribe(() => {\r\n  //       if (this.columnTemplates) {\r\n  //         this.columnTemplates.notifyOnChanges();\r\n  //       }\r\n  //     }));\r\n  // }\r\n\r\n  /**\r\n   * Toggle the expansion of the row\r\n   */\r\n  toggleExpandDetail(row: Record<string, unknown>): void {\r\n    this.bodyComponent.toggleExpandDetail(row);\r\n    this.$emit('detail-toggle', {\r\n      type: 'row',\r\n      value: row,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Expand all the rows.\r\n   */\r\n  expandAllDetails(): void {\r\n    this.bodyComponent.expandAllDetails();\r\n    this.$emit('detail-toggle', {\r\n      type: 'all',\r\n      value: true,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Collapse all the rows.\r\n   */\r\n  collapseAllDetails(): void {\r\n    this.bodyComponent.collapseAllDetails();\r\n    this.$emit('detail-toggle', {\r\n      type: 'all',\r\n      value: false,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Expand all the group rows.\r\n   */\r\n  expandAllGroups(): void {\r\n    this.groupedRows.forEach(row => {\r\n      this.expandCollapseRow(row, true);\r\n    });\r\n    this.onGroupToggle({\r\n      type: 'all',\r\n      value: true,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Collapse all the rows.\r\n   */\r\n  collapseAllGroups(): void {\r\n    this.groupedRows.forEach(row => {\r\n      this.expandCollapseRow(row, false);\r\n    });\r\n    this.onGroupToggle({\r\n      type: 'all',\r\n      value: false,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Is the row visible in the current page\r\n   */\r\n  isRowVisible(row: Record<string, unknown>): boolean {\r\n    return this.bodyComponent?.isRowVisible(row);\r\n  }\r\n\r\n  /**\r\n   * Is the group row expanded\r\n   */\r\n  private isGroupExpanded(key: string): boolean {\r\n    return this.expandedGroups[key] ?? true;\r\n  }\r\n\r\n  private innerSortRows(): void {\r\n    const treeFrom = optionalGetterForProp(this.treeFromRelation);\r\n    const treeTo = optionalGetterForProp(this.treeToRelation);\r\n    if (treeFrom && treeTo) {\r\n      this.internalRows = this.initialRows;\r\n    }\r\n\r\n    // this could be optimized better since it will resort\r\n    // the rows again on the 'push' detection...\r\n    if (this.externalSorting === false) {\r\n      // don't use normal setter so we don't resort\r\n      this.sortInternalRows();\r\n    }\r\n\r\n    // auto group by parent on new update\r\n    this.internalRows = groupRowsByParents(\r\n      this.internalRows as Array<{ level: number; treeStatus?: string }>,\r\n      treeFrom,\r\n      treeTo,\r\n      this.lazyTree\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Creates a map with the data grouped by the user choice of grouping index\r\n   *\r\n   * @param originalArray the original array passed via parameter\r\n   * @param groupByIndex  the index of the column to group the data by\r\n   */\r\n  private groupArrayBy(\r\n    originalArray: Record<string, unknown>[],\r\n    groupRowsBy: Array<TGroupByField | Array<TGroupByField>>,\r\n    level: number = 0\r\n  ): IGroupedRows[] {\r\n    let groupBy: Array<TGroupByField | Array<TGroupByField>> | TGroupByField | Array<TGroupByField> = groupRowsBy;\r\n    if (Array.isArray(groupRowsBy)) {\r\n      groupBy = groupRowsBy[level];\r\n    }\r\n\r\n    // create a map to hold groups with their corresponding results\r\n    const map = new Map<string, Record<string, string>[]>();\r\n\r\n    const getValue = (row: Record<string, string>, groupDescr: TGroupByField): string => {\r\n      if (typeof groupDescr === 'string') {\r\n        return row[groupDescr];\r\n      }\r\n      if ('prop' in groupDescr) {\r\n        return groupDescr.valueGetter ? groupDescr.valueGetter(row[groupDescr.prop]) : row[groupDescr.prop];\r\n      }\r\n    };\r\n\r\n    const getKey = (\r\n      row: Record<string, string>,\r\n      groupByArr: Array<TGroupByField | Array<TGroupByField>> | TGroupByField\r\n    ): string => {\r\n      if (!Array.isArray(groupByArr)) {\r\n        return getValue(row, groupByArr);\r\n      }\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n      const result = groupByArr.reduce(\r\n        (key: string, groupDescr: Array<TGroupByField | Array<TGroupByField>> | TGroupByField) => {\r\n          let res: string = null;\r\n          if (Array.isArray(groupDescr)) {\r\n            return getKey(row, groupDescr);\r\n          }\r\n          res = getValue(row, groupDescr);\r\n          if (!res) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n            return res;\r\n          }\r\n          return key ? `${key}^^${res}` : `${res}`;\r\n        },\r\n        ''\r\n      ) as string;\r\n      return result;\r\n    };\r\n\r\n    const itemsToRemove: Record<string, string>[] = [];\r\n    originalArray.forEach((item: Record<string, string>) => {\r\n      const key = getKey(item, groupBy);\r\n      // eslint-disable-next-line no-undefined\r\n      if (key !== undefined || key !== null) {\r\n        itemsToRemove.push(item);\r\n        if (!map.has(key)) {\r\n          map.set(key, [item]);\r\n        } else {\r\n          map.get(key).push(item);\r\n        }\r\n      }\r\n    });\r\n    if (level > 0 && itemsToRemove.length) {\r\n      itemsToRemove.forEach(item => {\r\n        const i = originalArray.indexOf(item);\r\n        if (i >= 0) {\r\n          originalArray.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    const keysDescr: Array<{\r\n      title: string;\r\n      prop: string; // | Array<TGroupByField | Array<TGroupByField>> | TGroupByField | Array<TGroupByField>;\r\n    }> = [];\r\n    if (Array.isArray(groupBy)) {\r\n      groupBy.forEach(prop => {\r\n        const title = this.getGroupTitle(prop);\r\n        keysDescr.push({ title, prop: prop as string });\r\n      });\r\n    } else {\r\n      const title = this.getGroupTitle(groupBy);\r\n      keysDescr.push({ title, prop: groupBy as string });\r\n    }\r\n    // convert map back to a simple array of objects\r\n    const result = Array.from(map, x => this.addGroup(x[0], x[1], level, keysDescr));\r\n    if (Array.isArray(groupRowsBy) && level < groupRowsBy.length - 1) {\r\n      result.forEach(item => {\r\n        item.groups = this.groupArrayBy(item.rows, groupRowsBy, level + 1);\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private addGroup(\r\n    key: string,\r\n    value: Record<string, unknown>[],\r\n    level1: number,\r\n    keysDescr: Array<{\r\n      title: string;\r\n      prop: string;\r\n    }>\r\n  ): IGroupedRows {\r\n    const keys = key ? key.toString().split('^^') : null;\r\n    const keysObj: {\r\n      title: string;\r\n      prop: string; // | Array<TGroupByField | Array<TGroupByField>> | TGroupByField | Array<TGroupByField>;\r\n      value: string;\r\n    }[] = [];\r\n    keysDescr.forEach((descr, index) => {\r\n      keysObj.push({ title: descr.title, prop: descr.prop, value: keys && keys.length > index ? keys[index] : '' });\r\n    });\r\n    return {\r\n      key,\r\n      rows: value,\r\n      level: level1,\r\n      keys: keysObj,\r\n      __expanded: this.isGroupExpanded(key),\r\n      __isGroup: true,\r\n    };\r\n  }\r\n\r\n  private getGroupTitle(\r\n    prop: Array<TGroupByField | Array<TGroupByField>> | TGroupByField | Array<TGroupByField>\r\n  ): string {\r\n    let title = prop;\r\n    if (typeof prop === 'string') {\r\n      const column = this.columns && this.columns.find(c => c.prop === prop);\r\n      title = column ? column.name : prop;\r\n    } else if ('title' in prop) {\r\n      title = prop.title;\r\n    }\r\n    return <string>title;\r\n  }\r\n\r\n  private sortInternalRows(): void {\r\n    if (this.groupedRows) {\r\n      this.groupedRows = this.sortGroupedRows(this.groupedRows);\r\n      this.internalRows = this.processGroupedRows(this.groupedRows) as Array<Record<string, unknown>>;\r\n    } else {\r\n      this.internalRows = sortRows(this.internalRows, this.internalColumns, this.sorts);\r\n    }\r\n  }\r\n\r\n  private sortGroupedRows(groupedRows: IGroupedRows[]): IGroupedRows[] {\r\n    const rows: Array<Record<string, unknown>> = [];\r\n    groupedRows.forEach(gr => {\r\n      const row = { __group: gr };\r\n      gr.keys.forEach(keyDescr => {\r\n        row[keyDescr.prop] = keyDescr.value;\r\n      });\r\n      rows.push(row);\r\n      if (gr.groups && gr.groups.length) {\r\n        gr.groups = this.sortGroupedRows(gr.groups);\r\n      }\r\n      if (gr.rows && gr.rows) {\r\n        gr.rows = sortRows(gr.rows, this.internalColumns, this.sorts);\r\n      }\r\n    });\r\n    const sortedRows = sortRows(rows, this.internalColumns, this.sorts);\r\n    const result = sortedRows.map(r => r.__group);\r\n    return result as IGroupedRows[];\r\n  }\r\n\r\n  private expandCollapseRow(group: IGroupedRows, expand: boolean): void {\r\n    group.__expanded = expand;\r\n    this.expandedGroups[group.key] = group.__expanded;\r\n    if (Array.isArray(group.groups)) {\r\n      group.groups.forEach(gr => {\r\n        this.expandCollapseRow(gr, expand);\r\n      });\r\n    }\r\n  }\r\n\r\n  private addRow(group: IGroupedRows, rows: Array<IGroupedRows | Record<string, unknown>>): void {\r\n    // (group as any).__isGroup = true;\r\n    // group.__expanded = true;\r\n    rows.push(group);\r\n    if (group.rows && group.__expanded) {\r\n      group.rows.forEach(r => {\r\n        rows.push(r);\r\n      });\r\n    }\r\n    if (group.groups && group.__expanded) {\r\n      group.groups.forEach(gr => {\r\n        this.addRow(gr, rows);\r\n      });\r\n    }\r\n  }\r\n\r\n  private processGroupedRows(groupedRows: IGroupedRows[]): Array<IGroupedRows | Record<string, unknown>> {\r\n    const rows: Array<IGroupedRows | Record<string, unknown>> = [];\r\n    if (groupedRows && groupedRows.length) {\r\n      // creates a new array with the data grouped\r\n      groupedRows.forEach(g => {\r\n        this.addRow(g, rows);\r\n      });\r\n    }\r\n    return rows;\r\n  }\r\n}\r\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  name: 'responsive-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: ``,\r\n})\r\nexport default class ResponsiveComponent extends Vue {\r\n  rows: Array<Record<string, unknown>> = [];\r\n  timeout: number;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  onPage(event: Record<string, unknown>) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = (setTimeout(() => {\r\n      console.log('paged!', event);\r\n    }, 100) as unknown) as number;\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  toggleExpandRow(row: Record<string, unknown>) {\r\n    console.log('Toggled Expand Row!', row);\r\n    (this.$refs.table as any).toggleExpandDetail(row);\r\n  }\r\n\r\n  onDetailToggle(event: Record<string, unknown>) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n}\r\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport { CorporateEmployee } from './model/corporate-employee';\r\n\r\nconst companyData = require('../../assets/data/company.json');\r\n\r\nclass PagedData<T> {\r\n  data: T[];\r\n}\r\n\r\n/**\r\n * A server used to mock a paged data result from a server\r\n */\r\nexport class MockServerResultsService {\r\n  public getResults(offset: number, limit: number): Promise<PagedData<CorporateEmployee>> {\r\n    const result = companyData.slice(offset, offset + limit);\r\n    let resolveFunc: (data: PagedData<CorporateEmployee>) => void;\r\n    const promise = new Promise<PagedData<CorporateEmployee>>(resolve => (resolveFunc = resolve));\r\n    setTimeout(() => resolveFunc({ data: result }), 2000);\r\n    return promise;\r\n  }\r\n}\r\n\r\n@Component({\r\n  name: 'server-scrolling-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n})\r\nexport default class ServerScrollingComponent extends Vue {\r\n  readonly headerHeight = 50;\r\n  readonly rowHeight = 50;\r\n  readonly pageLimit = 10;\r\n\r\n  rows: CorporateEmployee[] = [];\r\n  isLoading: boolean = false;\r\n  serverResultsService = new MockServerResultsService();\r\n\r\n  mounted() {\r\n    this.onScroll(0);\r\n  }\r\n\r\n  onScroll(offsetY: number) {\r\n    // total height of all rows in the viewport\r\n    const viewHeight = this.$el.getBoundingClientRect().height - this.headerHeight;\r\n\r\n    // check if we scrolled to the end of the viewport\r\n    if (!this.isLoading && offsetY + viewHeight >= this.rows.length * this.rowHeight) {\r\n      // total number of results to load\r\n      let limit = this.pageLimit;\r\n\r\n      // check if we haven't fetched any results yet\r\n      if (this.rows.length === 0) {\r\n        // calculate the number of rows that fit within viewport\r\n        const pageSize = Math.ceil(viewHeight / this.rowHeight);\r\n\r\n        // change the limit to pageSize such that we fill the first page entirely\r\n        // (otherwise, we won't be able to scroll past it)\r\n        limit = Math.max(pageSize, this.pageLimit);\r\n      }\r\n      this.loadPage(limit);\r\n    }\r\n  }\r\n\r\n  private async loadPage(limit: number) {\r\n    // set the loading flag, which serves two purposes:\r\n    // 1) it prevents the same page from being loaded twice\r\n    // 2) it enables display of the loading indicator\r\n    this.isLoading = true;\r\n\r\n    const result = await this.serverResultsService.getResults(this.rows.length, limit);\r\n    const rows = [...this.rows, ...result.data];\r\n    this.rows = rows;\r\n    this.isLoading = false;\r\n  }\r\n}\r\n","import { TGroupByField } from 'components/datatable.component';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { IGroupedRows } from '../../types/grouped-rows';\r\n\r\n@Component({\r\n  template: `\r\n    <div\r\n      :class=\"{ 'datatable-icon-right': !expanded, 'datatable-icon-down': expanded, 'active': active }\"\r\n      :style=\"styles\"\r\n      title=\"Expand/Collapse Group\"\r\n      @click=\"toggleExpandGroup\"\r\n    >\r\n      <slot name=\"groupHeader\" v-bind=\"{ group: group, expanded: expanded, level: groupLevel, groupBy: groupBy }\">\r\n        <span\r\n          ><b>{{ groupTitle }}</b></span\r\n        >\r\n      </slot>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableBodyGroupHeaderComponent extends Vue {\r\n  @Prop({ default: 0 }) rowHeight: number | ((group?: IGroupedRows, index?: number) => number);\r\n  @Prop() group: IGroupedRows;\r\n  @Prop() expanded: boolean;\r\n  @Prop() active: boolean;\r\n  @Prop() groupHeaderSlot: (obj: Record<string, unknown>) => VNode[];\r\n  @Prop() groupLevel: number;\r\n  @Prop() groupRowsBy: Array<TGroupByField | Array<TGroupByField>>;\r\n  @Prop() offsetX: number;\r\n\r\n  created(): void {\r\n    if (this.groupHeaderSlot) {\r\n      this.$slots.groupHeader = this.groupHeaderSlot({\r\n        group: this.group,\r\n        expanded: this.expanded,\r\n        level: this.groupLevel,\r\n        groupBy: this.groupBy,\r\n      });\r\n    }\r\n  }\r\n\r\n  beforeUpdate(): void {\r\n    if (this.groupHeaderSlot) {\r\n      this.$slots.groupHeader = this.groupHeaderSlot({\r\n        group: this.group,\r\n        expanded: this.expanded,\r\n        level: this.groupLevel,\r\n        groupBy: this.groupBy,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the expansion of a group\r\n   */\r\n  toggleExpandGroup(): void {\r\n    this.$emit('group-toggle', {\r\n      type: 'group',\r\n      value: this.group,\r\n    });\r\n  }\r\n\r\n  get groupTitle(): string {\r\n    let result = '';\r\n    if (this.group && this.group.keys) {\r\n      this.group.keys.forEach(gr => {\r\n        if (!result) {\r\n          result += `${gr.title} - ${gr.value}`;\r\n        } else {\r\n          result += `; ${gr.title} - ${gr.value}`;\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get styles(): Record<string, string> {\r\n    return {\r\n      'padding-left': this.groupLevel ? `${this.groupLevel * 10}px` : '5px',\r\n      // don't horizontal scroll for group rows headers\r\n      // transform: `translateX(${this.offsetX}px)`,\r\n    };\r\n  }\r\n\r\n  get groupBy(): TGroupByField | Array<TGroupByField> {\r\n    if (this.groupLevel && Array.isArray(this.groupRowsBy) && this.groupRowsBy.length - 1 >= this.groupLevel) {\r\n      return this.groupRowsBy[this.groupLevel];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { IGroupedRows } from 'types/grouped-rows';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\n@Component({\r\n  template: `\r\n    <div style=\"padding-left:5px;\">\r\n      <slot name=\"rowDetail\" v-bind=\"{ row: row, expanded: expanded }\">\r\n        <h3>detail row info</h3>\r\n      </slot>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableBodyRowDetailComponent extends Vue {\r\n  @Prop({ default: 0 }) rowHeight: number | ((group?: IGroupedRows, index?: number) => number);\r\n  @Prop() row: Record<string, unknown>;\r\n  @Prop() expanded: boolean;\r\n  @Prop() rowDetailSlot: (obj: Record<string, unknown>) => VNode[];\r\n\r\n  created(): void {\r\n    if (this.rowDetailSlot) {\r\n      this.$slots.rowDetail = this.rowDetailSlot({ row: this.row, expanded: this.expanded });\r\n    }\r\n  }\r\n\r\n  beforeUpdate(): void {\r\n    if (this.rowDetailSlot) {\r\n      this.$slots.rowDetail = this.rowDetailSlot({ row: this.row, expanded: this.expanded });\r\n    }\r\n  }\r\n\r\n  toggleExpandGroup(): void {\r\n    //\r\n  }\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\n\r\n@Component({\r\n  template: `\r\n    <div class=\"progress-linear\" role=\"progressbar\">\r\n      <div class=\"ngx-container\">\r\n        <div class=\"ngx-bar\"></div>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport default class ProgressBarComponent extends Vue {}\r\n","import { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\n\r\n@Component({\r\n  template: `\r\n    <div class=\"datatable-scroll\" :style=\"styleObject\">\r\n      <slot></slot>\r\n    </div>\r\n  `,\r\n})\r\nexport default class ScrollerComponent extends Vue {\r\n  @Prop({ type: Boolean, default: false }) scrollbarV: boolean;\r\n  @Prop({ type: Boolean, default: false }) scrollbarH: boolean;\r\n  @Prop() scrollHeight: number;\r\n  @Prop() scrollWidth: string;\r\n\r\n  fromPager = true;\r\n  innerWidth = 0;\r\n\r\n  get styleObject(): Record<string, unknown> {\r\n    return {\r\n      height: this.scrollHeight ? `${this.scrollHeight}px` : null,\r\n      width: '100%', // `${this.scrollWidth}px`,\r\n      position: 'relative',\r\n      transform: 'translateZ(0)',\r\n    };\r\n  }\r\n\r\n  scrollYPos = 0;\r\n  scrollXPos = 0;\r\n  prevScrollYPos = 0;\r\n  prevScrollXPos = 0;\r\n  parentElement: Element;\r\n  // onScrollListener: (event: MouseEvent) => void;\r\n  onInitScrollHandler: () => void;\r\n  // scrollDirty = false;\r\n  resizeObserver?: ResizeObserver;\r\n\r\n  @Watch('innerWidth') onInnerWidthChanged() {\r\n    this.$emit('change-width', this.innerWidth);\r\n  }\r\n\r\n  created(): void {\r\n    this.$emit('setup', {\r\n      scrollYPos: this.scrollYPos,\r\n      scrollXPos: this.scrollXPos,\r\n    });\r\n  }\r\n\r\n  mounted(): void {\r\n    // manual bind so we don't always listen\r\n    if (this.scrollbarV || this.scrollbarH) {\r\n      // const renderer = this.renderer;\r\n      this.parentElement = this.$el.closest('.datatable-body');\r\n      // .parentElement; //  renderer.parentNode(renderer.parentNode(this.element));\r\n      // this.onScrollListener = this.onScrolled.bind(this) as (event: MouseEvent) => void;\r\n      // this.parentElement.addEventListener('scroll', this.onScrollListener, {\r\n      //   passive: true,\r\n      // });\r\n      this.onInitScrollHandler = this.onInitScroll.bind(this) as () => void;\r\n      'mousedown DOMMouseScroll mousewheel wheel touchstart keyup'.split(' ').forEach(event => {\r\n        this.parentElement.addEventListener(event, this.onInitScrollHandler, {\r\n          passive: true,\r\n        });\r\n      });\r\n      this.tick();\r\n    }\r\n    if ((window as Window).ResizeObserver) {\r\n      this.resizeObserver = new (window as Window).ResizeObserver(entries => {\r\n        if (entries.length && entries[0].contentRect) {\r\n          this.innerWidth = Math.floor(entries[0].contentRect.width);\r\n        } else {\r\n          this.innerWidth = this.$el.clientWidth;\r\n        }\r\n      });\r\n      this.resizeObserver.observe(this.$el);\r\n    }\r\n  }\r\n\r\n  beforeDestroy(): void {\r\n    if (this.resizeObserver) {\r\n      this.resizeObserver.unobserve(this.$el);\r\n    }\r\n    if (this.scrollbarV || this.scrollbarH) {\r\n      // this.parentElement.removeEventListener('scroll', this.onScrollListener);\r\n      'mousedown DOMMouseScroll mousewheel wheel touchstart keyup'.split(' ').forEach(event => {\r\n        this.parentElement.removeEventListener(event, this.onInitScrollHandler);\r\n      });\r\n    }\r\n  }\r\n\r\n  setOffset(offsetY: number, fromPager: boolean = false): void {\r\n    if (this.parentElement) {\r\n      this.fromPager = fromPager;\r\n      this.parentElement.scrollTop = offsetY;\r\n    }\r\n  }\r\n\r\n  incOffset(offsetY: number): void {\r\n    if (this.parentElement) {\r\n      this.parentElement.scrollTop += offsetY;\r\n    }\r\n  }\r\n\r\n  onInitScroll(): void {\r\n    this.fromPager = false;\r\n  }\r\n\r\n  // onScrolled(event: MouseEvent): void {\r\n  //   if (this.scrollbarV || this.scrollbarH) {\r\n  //     if (!this.scrollDirty) {\r\n  //       this.scrollDirty = true;\r\n  //       const dom: Element = <Element>event.currentTarget;\r\n  //       requestAnimationFrame(() => {\r\n  //         this.scrollYPos = dom.scrollTop;\r\n  //         this.scrollXPos = dom.scrollLeft;\r\n  //         this.updateOffset();\r\n  //         this.scrollDirty = false;\r\n  //       });\r\n  //     } else {\r\n  //       // eslint-disable-next-line no-console\r\n  //       console.log('this.scrollDirty is true');\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  tick(): void {\r\n    requestAnimationFrame(() => this.tick());\r\n    // this.loading = Boolean(this.scrollTo !== ScrollTo.None);\r\n    if (this.scrollbarV || this.scrollbarH) {\r\n      const list: Element = this.parentElement; // this.$refs.list as HTMLElement;\r\n      if (!list) {\r\n        return;\r\n      }\r\n      const scrollTop = list.scrollTop;\r\n      const scrollLeft = list.scrollLeft;\r\n      if (this.scrollYPos === scrollTop && this.scrollXPos === scrollLeft) {\r\n        return;\r\n      }\r\n      this.scrollYPos = scrollTop;\r\n      this.scrollXPos = scrollLeft;\r\n      this.updateOffset();\r\n    }\r\n  }\r\n\r\n  updateOffset(): void {\r\n    let direction: string;\r\n    if (this.scrollYPos < this.prevScrollYPos) {\r\n      direction = 'down';\r\n    } else if (this.scrollYPos > this.prevScrollYPos) {\r\n      direction = 'up';\r\n    } else if (this.scrollXPos < this.prevScrollXPos) {\r\n      direction = 'right';\r\n    } else if (this.scrollXPos > this.prevScrollXPos) {\r\n      direction = 'left';\r\n    }\r\n    if (direction) {\r\n      this.$emit('scroll', {\r\n        direction,\r\n        scrollYPos: this.scrollYPos,\r\n        scrollXPos: this.scrollXPos,\r\n        fromPager: this.fromPager,\r\n      });\r\n    }\r\n    this.prevScrollYPos = this.scrollYPos;\r\n    this.prevScrollXPos = this.scrollXPos;\r\n  }\r\n}\r\n","import DataTableBodyComponent from 'components/body/body.component';\r\nimport ScrollerComponent from 'components/body/scroller.component';\r\nimport { CheckMode } from 'types/check.type';\r\nimport { SelectionType } from 'types/selection.type';\r\nimport { TableColumn } from 'types/table-column.type';\r\nimport { Keys } from 'utils/keys';\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n// import { MouseEvent, KeyboardEvent } from '../../events';\r\n\r\nexport interface Model {\r\n  type: string;\r\n  event: MouseEvent | KeyboardEvent;\r\n  row: Record<string, unknown>;\r\n  rowIndex: number;\r\n  rowElement: Element;\r\n  cellElement: Element;\r\n  cellIndex: number;\r\n  column?: TableColumn;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <div id=\"selector\">\r\n      <slot> selection </slot>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableSelectionComponent extends Vue {\r\n  @Prop() rows: Record<string, unknown>[];\r\n  @Prop() selected: Record<string, unknown>[];\r\n  @Prop() checked: Record<string, unknown>[];\r\n  @Prop() selectEnabled: boolean;\r\n  @Prop() selectionType: SelectionType;\r\n  @Prop() checkMode: CheckMode;\r\n  @Prop() rowIdentity: (row: Record<string, unknown>) => string | number;\r\n  @Prop() selectCheck: () => void;\r\n  @Prop() scroller: ScrollerComponent;\r\n  @Prop() pageSize: number;\r\n  @Prop() bodyHeight: number;\r\n  @Prop() beforeSelectRowCheck: (\r\n    newRow: Record<string, unknown>,\r\n    oldSelected: Record<string, unknown>[]\r\n  ) => boolean | Promise<boolean>;\r\n\r\n  prevIndex: number;\r\n\r\n  async selectRow(event: KeyboardEvent | MouseEvent, index: number, row: Record<string, unknown>): Promise<void> {\r\n    if (!this.selectEnabled) {\r\n      return;\r\n    }\r\n    let doSelect: boolean | Promise<boolean> = true;\r\n    if (typeof this.beforeSelectRowCheck === 'function') {\r\n      doSelect = this.beforeSelectRowCheck(this.rows[index], this.selected);\r\n    }\r\n    if (doSelect instanceof Promise) {\r\n      doSelect = await doSelect;\r\n    }\r\n    if (!doSelect) {\r\n      return;\r\n    }\r\n    const chkbox = this.selectionType === SelectionType.checkbox && this.checkMode === CheckMode.checkIsSelect;\r\n    const multi = this.selectionType === SelectionType.multi;\r\n    const multiClick = this.selectionType === SelectionType.multiClick;\r\n    let selected: Record<string, unknown>[] = [];\r\n    if (multi || chkbox || multiClick) {\r\n      if (event.shiftKey) {\r\n        selected = this.selectRowsBetween([], this.rows, index, this.prevIndex);\r\n      } else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\r\n        selected = this.selectRows([...this.selected], row);\r\n      } else {\r\n        selected = this.selectRows([], row);\r\n      }\r\n    } else {\r\n      selected = this.selectRows([], row);\r\n    }\r\n    this.prevIndex = index;\r\n    if (typeof this.selectCheck === 'function') {\r\n      selected = selected.filter(this.selectCheck.bind(this) as () => void);\r\n    }\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n    this.$emit('select', {\r\n      selected,\r\n      index,\r\n    });\r\n  }\r\n\r\n  checkRow(event: KeyboardEvent | MouseEvent, index: number, row: Record<string, unknown>): void {\r\n    if (!this.selectEnabled) {\r\n      return;\r\n    }\r\n    let checked: Record<string, unknown>[] = [];\r\n    if (event.shiftKey) {\r\n      checked = this.selectRowsBetween([], this.rows, index, this.prevIndex);\r\n    } else {\r\n      checked = this.selectRows([...this.checked], row);\r\n    }\r\n    this.prevIndex = index;\r\n\r\n    if (typeof this.selectCheck === 'function') {\r\n      checked = checked.filter(this.selectCheck.bind(this) as () => void);\r\n    }\r\n\r\n    this.checked.splice(0, this.checked.length);\r\n    this.checked.push(...checked);\r\n\r\n    this.$emit('check', {\r\n      checked,\r\n    });\r\n  }\r\n\r\n  onActivate(model: Model, index: number): void {\r\n    const { type, event, row, column } = model;\r\n    const chkbox = this.selectionType === SelectionType.checkbox && this.checkMode === CheckMode.checkIsSelect;\r\n    let select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\r\n    if (this.checkMode === CheckMode.checkNoSelect && column?.checkboxable) {\r\n      select = false;\r\n    }\r\n    if (select) {\r\n      this.selectRow(event, index, row);\r\n    } else if (type === 'checkbox' && this.checkMode === CheckMode.checkNoSelect) {\r\n      this.checkRow(event, index, row);\r\n    } else if (type === 'keydown') {\r\n      if ((<KeyboardEvent>event).keyCode === Keys.return) {\r\n        this.selectRow(event, index, row);\r\n      } else {\r\n        this.onKeyboardFocus(model);\r\n      }\r\n    }\r\n    this.$emit('activate', model);\r\n  }\r\n\r\n  onKeyboardFocus(model: Model): void {\r\n    const { keyCode } = <KeyboardEvent>model.event;\r\n    const shouldFocus =\r\n      keyCode === Keys.up ||\r\n      keyCode === Keys.down ||\r\n      keyCode === Keys.right ||\r\n      keyCode === Keys.left ||\r\n      keyCode === Keys.pageUp ||\r\n      keyCode === Keys.pageDown;\r\n\r\n    if (shouldFocus) {\r\n      const isCellSelection = this.selectionType === SelectionType.cell;\r\n\r\n      if (!model.cellElement || !isCellSelection) {\r\n        this.focusRow(model, keyCode);\r\n      } else if (isCellSelection) {\r\n        this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  focusRow(model: Model, keyCode: number): void {\r\n    const nextRowElement = this.getPrevNextRow(model.rowElement, keyCode);\r\n    let index = 0;\r\n    if (keyCode === Keys.up) {\r\n      if (model.rowIndex - 1 < 0) {\r\n        return;\r\n      }\r\n      index = model.rowIndex - 1;\r\n    } else if (keyCode === Keys.down) {\r\n      if (model.rowIndex + 1 >= this.rows.length) {\r\n        return;\r\n      }\r\n      index = model.rowIndex + 1;\r\n    } else if (keyCode === Keys.pageUp) {\r\n      index = model.rowIndex - this.pageSize;\r\n      index = index < 0 ? 0 : index;\r\n    } else if (keyCode === Keys.pageDown) {\r\n      index = model.rowIndex + this.pageSize;\r\n      index = index >= this.rows.length ? this.rows.length - 1 : index;\r\n    }\r\n    const { offsetY, height } = (this.$parent as DataTableBodyComponent).getRowOffsetY(index + 1);\r\n    if (!height) {\r\n      if (nextRowElement) {\r\n        (nextRowElement as HTMLElement).focus();\r\n      }\r\n      return;\r\n    }\r\n    let scrolled = false;\r\n    let h = 0;\r\n    if ([Keys.down, Keys.pageDown].includes(keyCode)) {\r\n      h = offsetY + height - (this.$parent.$el.scrollTop + this.bodyHeight);\r\n    } else if ([Keys.up, Keys.pageUp].includes(keyCode)) {\r\n      h = offsetY - height - this.$parent.$el.scrollTop;\r\n    }\r\n    if (h > 0 && [Keys.down, Keys.pageDown].includes(keyCode)) {\r\n      this.scroller.incOffset(h);\r\n      // scrolled = model.rowIndex === this.rows.length - 2 ? false : true;\r\n    } else if (h < 0 && [Keys.up, Keys.pageUp].includes(keyCode)) {\r\n      this.scroller.incOffset(h);\r\n      scrolled = model.rowIndex !== 1;\r\n    } else if (h === 0 && [Keys.up, Keys.pageUp].includes(keyCode) && [0, 1, 2].includes(model.rowIndex)) {\r\n      this.scroller.setOffset(h);\r\n      // scrolled = true;\r\n    }\r\n    if (scrolled || [Keys.left, Keys.right].includes(keyCode)) {\r\n      (model.rowElement as HTMLElement).focus();\r\n    } else if (nextRowElement) {\r\n      (nextRowElement as HTMLElement).focus();\r\n    }\r\n  }\r\n\r\n  focusRow1(keyCode: number): void {\r\n    let index = 0;\r\n    if (keyCode === Keys.up) {\r\n      if (this.prevIndex - 1 < 0) {\r\n        return;\r\n      }\r\n      index = this.prevIndex - 1;\r\n    } else if (keyCode === Keys.down) {\r\n      if (this.prevIndex + 1 >= this.rows.length) {\r\n        return;\r\n      }\r\n      index = this.prevIndex + 1;\r\n    } else if (keyCode === Keys.pageUp) {\r\n      index = this.prevIndex - this.pageSize;\r\n      index = index < 0 ? 0 : index;\r\n    } else if (keyCode === Keys.pageDown) {\r\n      index = this.prevIndex + this.pageSize;\r\n      index = index >= this.rows.length ? this.rows.length - 1 : index;\r\n    }\r\n    const nextRow = this.rows[index];\r\n    if (!nextRow) {\r\n      return;\r\n    }\r\n    setTimeout(() => this.selectRow({ shiftKey: false, ctrlKey: false } as KeyboardEvent | MouseEvent, index, nextRow));\r\n    const { offsetY, height } = (this.$parent as DataTableBodyComponent).getRowOffsetY(index);\r\n    let h = 0;\r\n    if ([Keys.down, Keys.pageDown].includes(keyCode)) {\r\n      h = offsetY - this.bodyHeight;\r\n    } else if ([Keys.up, Keys.pageUp].includes(keyCode)) {\r\n      h = offsetY - height - this.scroller.scrollYPos;\r\n    }\r\n    if (h > 0 && [Keys.down, Keys.pageDown].includes(keyCode)) {\r\n      this.scroller.setOffset(h);\r\n    } else if (h < 0 && [Keys.up, Keys.pageUp].includes(keyCode)) {\r\n      this.scroller.incOffset(h);\r\n    }\r\n\r\n    // const { el: rowElement, height } = (this.$parent as any).getRowElementAndHeight(this.rows[this.prevIndex]);\r\n    // if (!rowElement) {\r\n    //   return;\r\n    // }\r\n    // const nextRowElement = this.getPrevNextRowElement(rowElement, keyCode);\r\n    // // const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\r\n    // if (nextRowElement) {\r\n    //   // nextRowElement.focus();\r\n    //   let index = this.prevIndex;\r\n    //   if (keyCode === Keys.up) {\r\n    //     if (this.prevIndex - 1 < 0) {\r\n    //       return;\r\n    //     }\r\n    //     index = this.prevIndex - 1;\r\n    //   } else if (keyCode === Keys.down) {\r\n    //     if (this.prevIndex + 1 >= this.rows.length) {\r\n    //       return;\r\n    //     }\r\n    //     index = this.prevIndex + 1\r\n    //   }\r\n    //   const row = this.rows[index];\r\n    //   this.selectRow({ shiftKey: false, ctrlKey: false } as any, index, row);\r\n    //   const bodyRect = this.$parent.$el.getBoundingClientRect();\r\n    //   const rowRect = nextRowElement.getBoundingClientRect();\r\n    //   const top = rowRect.top - bodyRect.top;\r\n    //   let h = 0;\r\n    //   if (keyCode === Keys.down) {\r\n    //     h = (top + height) - bodyRect.height;\r\n    //   } else if (keyCode === Keys.up) {\r\n    //     h = top;\r\n    //   }\r\n    //   // console.log('before incOffset', h, bodyRect, rowRect, nextRowElement);\r\n    //   if (h > 0 && keyCode === Keys.down) {\r\n    //     // console.log('incOffset', h + 5);\r\n    //     (this.scroller as any).incOffset(h + 5);\r\n    //   } else if (h < 0 && keyCode === Keys.up) {\r\n    //     (this.scroller as any).incOffset(h);\r\n    //   }\r\n    //   // (this.$el as any).focus();\r\n    //   (nextRowElement as any).focus();\r\n    // }\r\n  }\r\n\r\n  getPrevNextRowElement(rowElement: Element, keyCode: number): Element {\r\n    if (rowElement) {\r\n      let focusElement: Element;\r\n      if (keyCode === Keys.up) {\r\n        focusElement = rowElement.previousElementSibling;\r\n      } else if (keyCode === Keys.down) {\r\n        focusElement = rowElement.nextElementSibling;\r\n      }\r\n      return focusElement;\r\n    }\r\n  }\r\n\r\n  getPrevNextRow(rowElement: Element, keyCode: number): Element {\r\n    const parentElement = rowElement.parentElement;\r\n\r\n    if (parentElement) {\r\n      let focusElement: Element;\r\n      if (keyCode === Keys.up) {\r\n        focusElement = parentElement.previousElementSibling;\r\n      } else if (keyCode === Keys.down) {\r\n        focusElement = parentElement.nextElementSibling;\r\n      }\r\n\r\n      if (focusElement && focusElement.children.length) {\r\n        return focusElement.children[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrevNextRow1(rowElement: Element, keyCode: number): Element {\r\n    const parentElement = rowElement.parentElement;\r\n    // const parentElement = rowElement.closest('.datatable-row-wrapper');\r\n\r\n    if (parentElement) {\r\n      let focusElement: Element;\r\n      if (keyCode === Keys.up) {\r\n        focusElement = parentElement.previousElementSibling;\r\n      } else if (keyCode === Keys.down) {\r\n        focusElement = parentElement.nextElementSibling;\r\n      }\r\n      // return focusElement;\r\n      if (focusElement && focusElement.children.length) {\r\n        return focusElement.children[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  focusCell(cellElement: Element, rowElement: Element, keyCode: number, cellIndex: number): void {\r\n    let nextCellElement: Element;\r\n\r\n    if (keyCode === Keys.left) {\r\n      nextCellElement = cellElement.previousElementSibling;\r\n    } else if (keyCode === Keys.right) {\r\n      nextCellElement = cellElement.nextElementSibling;\r\n    } else if (keyCode === Keys.up || keyCode === Keys.down) {\r\n      const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\r\n      if (nextRowElement) {\r\n        const children = nextRowElement.getElementsByClassName('datatable-body-cell');\r\n        if (children.length) {\r\n          nextCellElement = children[cellIndex];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (nextCellElement) {\r\n      (nextCellElement as HTMLElement).focus();\r\n    }\r\n  }\r\n\r\n  getRowSelected(row: Record<string, unknown>): boolean {\r\n    return this.getRowSelectedIdx(row, this.selected) > -1;\r\n  }\r\n\r\n  getRowChecked(row: Record<string, unknown>): boolean {\r\n    const arr = this.checkMode === CheckMode.checkIsSelect ? this.selected : this.checked;\r\n    return this.getRowSelectedIdx(row, arr) > -1;\r\n  }\r\n\r\n  getRowSelectedIdx(row: Record<string, unknown>, selected: Record<string, unknown>[]): number {\r\n    if (!selected || !selected.length) {\r\n      return -1;\r\n    }\r\n    const rowId = this.rowIdentity(row);\r\n    return selected.findIndex(r => {\r\n      const id = this.rowIdentity(r);\r\n      return id === rowId;\r\n    });\r\n  }\r\n\r\n  private selectRowsBetween(\r\n    selected: Record<string, unknown>[],\r\n    rows: Record<string, unknown>[],\r\n    index: number,\r\n    prevIndex: number\r\n  ): Record<string, unknown>[] {\r\n    const reverse = index < prevIndex;\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      const row = rows[i];\r\n      const greater = i >= prevIndex && i <= index;\r\n      const lesser = i <= prevIndex && i >= index;\r\n      let range = { start: 0, end: 0 };\r\n      if (reverse) {\r\n        range = {\r\n          start: index,\r\n          end: prevIndex,\r\n        };\r\n      } else {\r\n        range = {\r\n          start: prevIndex,\r\n          end: index + 1,\r\n        };\r\n      }\r\n      if ((reverse && lesser) || (!reverse && greater)) {\r\n        // if in the positive range to be added to `selected`, and\r\n        // not already in the selected array, add it\r\n        if (i >= range.start && i <= range.end) {\r\n          selected.push(row);\r\n        }\r\n      }\r\n    }\r\n    return selected;\r\n  }\r\n\r\n  private selectRows(selected: Record<string, unknown>[], row: Record<string, unknown>): Record<string, unknown>[] {\r\n    const selectedIndex = this.getRowSelectedIdx(row, selected);\r\n    if (selectedIndex > -1) {\r\n      selected.splice(selectedIndex, 1);\r\n    } else {\r\n      selected.push(row);\r\n    }\r\n    return selected;\r\n  }\r\n}\r\n","import { IRowContext } from 'types/row-context.type';\r\nimport { IColumnsByPinRecord, IColumnsWidth } from 'utils/column';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\nimport DataTableBodyRowComponent from '../body-row.component.vue';\r\n\r\nexport interface ISummaryColumn {\r\n  summaryFunc?: (cells: unknown[]) => string;\r\n  summaryTemplate?: (arg?: Record<string, unknown>) => VNode[];\r\n  cellTemplate?: string;\r\n\r\n  prop: string;\r\n  // pipe?: PipeTransform;\r\n  filter?: (...args: Array<unknown>) => string;\r\n}\r\n\r\nfunction defaultSumFunc(cells: number[]): number {\r\n  const cellsWithValues = cells.filter(cell => Boolean(cell));\r\n\r\n  if (!cellsWithValues.length) {\r\n    return null;\r\n  }\r\n  if (cellsWithValues.some(cell => typeof cell !== 'number')) {\r\n    return null;\r\n  }\r\n  return cellsWithValues.reduce((res, cell) => res + cell);\r\n}\r\n\r\nfunction noopSumFunc(cells: unknown[]): void {\r\n  return null;\r\n}\r\n\r\n@Component({\r\n  components: {\r\n    'datatable-body-row': DataTableBodyRowComponent,\r\n  },\r\n  template: `\r\n    <datatable-body-row\r\n      v-if=\"summaryRow && internalColumns\"\r\n      tabindex=\"-1\"\r\n      :columnsByPin=\"columnsByPin\"\r\n      :columnGroupWidths=\"columnGroupWidths\"\r\n      :groupStyles=\"groupStyles\"\r\n      :rowContext=\"myRowContext\"\r\n      :row=\"summaryRow\"\r\n      :slots=\"mySlotsFunc\"\r\n      @activate=\"onActivate\"\r\n    >\r\n    </datatable-body-row>\r\n  `,\r\n})\r\nexport default class DataTableSummaryRowComponent extends Vue {\r\n  @Prop() rows: Record<string, unknown>[];\r\n  @Prop() columns: ISummaryColumn[];\r\n  @Prop() rowHeight: number;\r\n  @Prop() offsetX: number;\r\n  @Prop() innerWidth: number;\r\n\r\n  @Prop() columnsByPin: IColumnsByPinRecord[];\r\n  @Prop() columnGroupWidths: IColumnsWidth;\r\n  @Prop() groupStyles: Record<string, string | number>;\r\n  @Prop() groupClass: string;\r\n  @Prop() slots: () => Record<string, (arg?: Record<string, unknown>) => VNode[]>;\r\n\r\n  internalColumns: ISummaryColumn[] = [];\r\n  summaryRow: Record<string, unknown> = {};\r\n  mySlotsFunc: () => Record<string, (arg?: Record<string, unknown>) => VNode[]> = null;\r\n  myRowContext: IRowContext = null;\r\n\r\n  @Watch('rows', { immediate: true }) onRowsChanged(): void {\r\n    this.onChanges();\r\n  }\r\n\r\n  @Watch('columns') onColumnsChanged(): void {\r\n    this.onChanges();\r\n  }\r\n\r\n  onChanges(): void {\r\n    if (!this.columns || !this.rows) {\r\n      return;\r\n    }\r\n    this.updateInternalColumns();\r\n    this.updateValues();\r\n  }\r\n\r\n  onActivate(event: Event): void {\r\n    this.$emit('summary-activate', event, this.summaryRow);\r\n  }\r\n\r\n  private updateInternalColumns() {\r\n    this.mySlotsFunc = this.slots;\r\n    const summarySlots: Record<string, (arg?: Record<string, unknown>) => VNode[]> = {};\r\n    this.internalColumns = this.columns.map(col => {\r\n      if (col.summaryTemplate) {\r\n        summarySlots[col.prop] = col.summaryTemplate;\r\n      }\r\n      return col;\r\n    });\r\n    if (Object.keys(summarySlots).length) {\r\n      const slots = Object.assign({}, this.slots());\r\n      Object.keys(summarySlots).forEach(column => {\r\n        slots[column] = summarySlots[column];\r\n      });\r\n      this.mySlotsFunc = () => slots;\r\n    }\r\n  }\r\n\r\n  private updateValues() {\r\n    this.summaryRow = {};\r\n\r\n    this.columns\r\n      .filter(col => !col.summaryTemplate)\r\n      .forEach(col => {\r\n        const cellsFromSingleColumn = this.rows.map(row => row[col.prop]);\r\n        const sumFunc = this.getSummaryFunction(col);\r\n\r\n        // this.summaryRow[col.prop] = col.pipe ?\r\n        //   col.pipe.transform(sumFunc(cellsFromSingleColumn)) :\r\n        //   sumFunc(cellsFromSingleColumn);\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        this.summaryRow[col.prop] = col.filter\r\n          ? col.filter(sumFunc(cellsFromSingleColumn))\r\n          : sumFunc(cellsFromSingleColumn);\r\n      });\r\n    this.myRowContext = {\r\n      row: this.summaryRow,\r\n      rowIndex: -1,\r\n      expanded: false,\r\n      isChecked: false,\r\n      isSelected: false,\r\n      rowHeight: this.rowHeight,\r\n      treeStatus: null,\r\n    };\r\n  }\r\n\r\n  private getSummaryFunction(column: ISummaryColumn): (a: unknown[]) => unknown {\r\n    if (!column.summaryFunc) {\r\n      return defaultSumFunc;\r\n    }\r\n    if (column.summaryFunc === null) {\r\n      return noopSumFunc;\r\n    }\r\n    return column.summaryFunc;\r\n  }\r\n}\r\n","import DatatableComponent from 'components/datatable.component';\r\nimport { TableColumn, TableColumnProp, TComparator } from 'types/table-column.type';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\n\r\n@Component({\r\n  template: `\r\n    <div>\r\n      <slot name=\"header\" v-bind=\"{column: column}\">\r\n        <!-- default content -->\r\n        {{ name }}\r\n      </slot>\r\n      <!-- default slot for cell -->\r\n      <slot> </slot>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableColumnComponent extends Vue {\r\n  @Prop() name: string;\r\n  @Prop() prop: TableColumnProp;\r\n  @Prop() frozenLeft: boolean;\r\n  @Prop() frozenRight: boolean;\r\n  @Prop() flexGrow: number;\r\n  @Prop() resizeable: boolean;\r\n  @Prop() comparator: TComparator;\r\n  @Prop() sortable: boolean;\r\n  @Prop() draggable: boolean;\r\n  @Prop({ default: true }) canAutoResize: boolean;\r\n  @Prop() minWidth: number;\r\n  @Prop() width: number;\r\n  @Prop() maxWidth: number;\r\n  @Prop() checkboxable: boolean;\r\n  @Prop() headerCheckboxable: boolean;\r\n  @Prop() headerClass: string | ((data: { column: TableColumn }) => string | Record<string, unknown>);\r\n  @Prop() cellClass:\r\n    | string\r\n    | Array<string>\r\n    | ((data: Record<string, unknown>) => string | Record<string, unknown>)\r\n    | Array<string | Array<string> | ((data: Record<string, unknown>) => string | Record<string, unknown>)>;\r\n  @Prop() isTreeColumn: boolean;\r\n  @Prop() treeLevelIndent: number;\r\n  @Prop() summaryFunc: (cells: unknown[]) => string;\r\n  @Prop({ default: true }) visible: boolean;\r\n\r\n  column: TableColumn = {};\r\n\r\n  @Watch('visible') onVisibleChanged(newVal: boolean): void {\r\n    this.column.visible = newVal;\r\n    (this.$parent as DatatableComponent).onColumnChangeVisible(this.column);\r\n  }\r\n\r\n  // @Watch('column.width') onWidthChanged(): void {\r\n  //   this.$emit('update-width', this.column.width);\r\n  // }\r\n\r\n  mounted(): void {\r\n    this.$set(this.column, 'name', this.name);\r\n    this.$set(this.column, 'prop', this.prop);\r\n    this.$set(this.column, 'frozenLeft', this.frozenLeft);\r\n    this.$set(this.column, 'frozenRight', this.frozenRight);\r\n    this.$set(this.column, 'flexGrow', this.flexGrow);\r\n    this.$set(this.column, 'resizeable', this.resizeable);\r\n    this.$set(this.column, 'comparator', this.comparator);\r\n    this.$set(this.column, 'sortable', this.sortable);\r\n    this.$set(this.column, 'draggable', this.draggable);\r\n    this.$set(this.column, 'canAutoResize', this.canAutoResize);\r\n    this.$set(this.column, 'minWidth', this.minWidth);\r\n    this.$set(this.column, 'width', this.width);\r\n    this.$set(this.column, 'maxWidth', this.maxWidth);\r\n    this.$set(this.column, 'checkboxable', this.checkboxable);\r\n    this.$set(this.column, 'headerCheckboxable', this.headerCheckboxable);\r\n    let headerClasses = [];\r\n    if (Array.isArray(this.headerClass)) {\r\n      headerClasses = [...this.headerClass];\r\n    } else if (typeof this.headerClass === 'string') {\r\n      headerClasses.push(this.headerClass);\r\n    } else if (typeof this.headerClass === 'function') {\r\n      const res = this.headerClass({\r\n        column: this.column,\r\n      });\r\n      if (typeof res === 'string') {\r\n        headerClasses.push(res);\r\n      } else if (typeof res === 'object') {\r\n        const keys = Object.keys(res);\r\n        for (const key of keys) {\r\n          if (res[key] === true) {\r\n            headerClasses.push(key);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\r\n    for (let i = 0; i < this.$el.classList.length; i++) {\r\n      const value = this.$el.classList[0];\r\n      headerClasses.push(value);\r\n    }\r\n    this.$set(this.column, 'headerClass', headerClasses);\r\n\r\n    let cellClasses = [];\r\n    if (Array.isArray(this.cellClass)) {\r\n      cellClasses = [...this.cellClass];\r\n    } else if (typeof this.cellClass === 'string') {\r\n      cellClasses.push(this.cellClass);\r\n    } else if (typeof this.cellClass === 'function') {\r\n      cellClasses.push(this.cellClass);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\r\n    for (let i = 0; i < this.$el.classList.length; i++) {\r\n      const value = this.$el.classList[0];\r\n      cellClasses.push(value);\r\n    }\r\n    this.$set(this.column, 'cellClass', cellClasses);\r\n\r\n    this.$set(this.column, 'isTreeColumn', this.isTreeColumn);\r\n    this.$set(this.column, 'treeLevelIndent', this.treeLevelIndent);\r\n    this.$set(this.column, 'summaryFunc', this.summaryFunc);\r\n    this.$set(this.column, 'headerTemplate', this.$scopedSlots.header);\r\n    this.$set(this.column, 'headerAppendTemplate', this.$scopedSlots.headerAppend);\r\n    this.$set(this.column, 'cellTemplate', this.$scopedSlots.default);\r\n    this.$set(this.column, 'summaryTemplate', this.$scopedSlots.summary);\r\n    this.$set(this.column, 'visible', this.visible);\r\n\r\n    // todo: select any way to pass column to datatable // this.$emit('insert-column', column);\r\n    // this.$emit('insert-column', this.column);\r\n    (this.$parent as DatatableComponent).onColumnInsert(this.column);\r\n  }\r\n}\r\n","import { VNode } from 'vue';\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport DataTablePagerComponent from './pager.component';\r\n\r\n@Component({\r\n  components: {\r\n    'datatable-pager': DataTablePagerComponent,\r\n  },\r\n  template: `\r\n    <div\r\n      class=\"datatable-footer-inner\"\r\n      :class=\"{'selected-count': selectedMessage }\"\r\n      :style=\"{ 'height': footerHeight + 'px' }\"\r\n    >\r\n      <slot\r\n        v-bind:row=\"{ rowCount: rowCount, pageSize: pageSize,\r\n                          selectedCount: selectedCount, curPage: curPage, offset: offset }\"\r\n      >\r\n        <div class=\"page-count\">\r\n          <span v-if=\"selectedMessage\"> {{ selectedCount.toLocaleString() }} {{ selectedMessage }} / </span>\r\n          {{ rowCount.toLocaleString() }} {{ totalMessage }}\r\n        </div>\r\n      </slot>\r\n      <div class=\"datatable-pager\">\r\n        <datatable-pager\r\n          :pagerLeftArrowIcon=\"pagerLeftArrowIcon\"\r\n          :pagerRightArrowIcon=\"pagerRightArrowIcon\"\r\n          :pagerPreviousIcon=\"pagerPreviousIcon\"\r\n          :pagerNextIcon=\"pagerNextIcon\"\r\n          :page=\"curPage\"\r\n          :size=\"pageSize\"\r\n          :count=\"rowCount\"\r\n          :hidden=\"!isVisible\"\r\n          @change-page=\"$emit('page', $event)\"\r\n        >\r\n        </datatable-pager>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableFooterComponent extends Vue {\r\n  @Prop() footerHeight: number;\r\n  @Prop() rowCount: number;\r\n  @Prop() pageSize: number;\r\n  @Prop() offset: number;\r\n  @Prop() pagerLeftArrowIcon: string;\r\n  @Prop() pagerRightArrowIcon: string;\r\n  @Prop() pagerPreviousIcon: string;\r\n  @Prop() pagerNextIcon: string;\r\n  @Prop() totalMessage: string;\r\n  @Prop() footerSlot: (arg?: Record<string, unknown>) => VNode[];\r\n\r\n  @Prop({ type: Number, default: 0 }) selectedCount: number;\r\n  @Prop() selectedMessage: string | boolean;\r\n\r\n  created(): void {\r\n    if (this.footerSlot) {\r\n      this.$slots.default = this.footerSlot({\r\n        rowCount: this.rowCount,\r\n        pageSize: this.pageSize,\r\n        selectedCount: this.selectedCount,\r\n        curPage: this.curPage,\r\n        offset: this.offset,\r\n      });\r\n    }\r\n  }\r\n\r\n  beforeUpdate(): void {\r\n    if (this.footerSlot) {\r\n      this.$slots.default = this.footerSlot({\r\n        rowCount: this.rowCount,\r\n        pageSize: this.pageSize,\r\n        selectedCount: this.selectedCount,\r\n        curPage: this.curPage,\r\n        offset: this.offset,\r\n      });\r\n    }\r\n  }\r\n\r\n  get isVisible(): boolean {\r\n    return this.rowCount / this.pageSize > 1;\r\n  }\r\n\r\n  get curPage(): number {\r\n    return this.offset + 1;\r\n  }\r\n}\r\n","import { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\n\r\nexport interface IPage {\r\n  number: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <ul class=\"pager\">\r\n      <li :class=\"{ disabled: !canPrevious }\">\r\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" @click=\"selectPage(1)\">\r\n          <i :class=\"pagerPreviousIcon\"></i>\r\n        </a>\r\n      </li>\r\n      <li :class=\"{ disabled: !canPrevious }\">\r\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" @click=\"prevPage\">\r\n          <i :class=\"pagerLeftArrowIcon\"></i>\r\n        </a>\r\n      </li>\r\n      <li\r\n        role=\"button\"\r\n        aria-label=\"'page ' + pg.number\"\r\n        class=\"pages\"\r\n        v-for=\"pg of pages\"\r\n        :class=\"{ active: pg.number === myPage }\"\r\n      >\r\n        <a href=\"javascript:void(0)\" @click=\"selectPage(pg.number)\">\r\n          {{ pg.text }}\r\n        </a>\r\n      </li>\r\n      <li :class=\"{ disabled: !canNext }\">\r\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" @click=\"nextPage\">\r\n          <i :class=\"pagerRightArrowIcon\"></i>\r\n        </a>\r\n      </li>\r\n      <li :class=\"{ disabled: !canNext }\">\r\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" @click=\"selectPage(totalPages)\">\r\n          <i :class=\"pagerNextIcon\"></i>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  `,\r\n})\r\nexport default class DataTablePagerComponent extends Vue {\r\n  @Prop() pagerLeftArrowIcon: string;\r\n  @Prop() pagerRightArrowIcon: string;\r\n  @Prop() pagerPreviousIcon: string;\r\n  @Prop() pagerNextIcon: string;\r\n  @Prop({ type: Number, default: 0 }) size: number;\r\n  @Prop({ type: Number, default: 0 }) count: number;\r\n  @Prop({ type: Number, default: 1 }) page: number;\r\n\r\n  pages: IPage[] = [];\r\n  myPage = 0;\r\n\r\n  @Watch('count') onCountChanged(): void {\r\n    this.pages = this.calcPages();\r\n  }\r\n\r\n  @Watch('size') onSizeChanged(): void {\r\n    this.pages = this.calcPages();\r\n  }\r\n\r\n  @Watch('page') onPageChanged(): void {\r\n    this.myPage = this.page;\r\n    this.pages = this.calcPages();\r\n  }\r\n\r\n  created(): void {\r\n    this.myPage = this.page;\r\n    this.pages = this.calcPages();\r\n  }\r\n\r\n  get totalPages(): number {\r\n    // const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\r\n    if (this.size < 1) {\r\n      return 1;\r\n    }\r\n    let result = Math.ceil(this.count / this.size);\r\n    const newCount = Math.floor(this.count / this.size) * this.size;\r\n    if (this.count - newCount === 1) {\r\n      // correct page's number if last page contnains one row\r\n      result--;\r\n    }\r\n    return Math.max(result || 0, 1);\r\n  }\r\n\r\n  get canPrevious(): boolean {\r\n    return this.myPage > 1;\r\n  }\r\n\r\n  get canNext(): boolean {\r\n    return this.myPage < this.totalPages;\r\n  }\r\n\r\n  prevPage(): void {\r\n    this.selectPage(this.myPage - 1);\r\n  }\r\n\r\n  nextPage(): void {\r\n    this.selectPage(this.myPage + 1);\r\n  }\r\n\r\n  selectPage(page: number): void {\r\n    if (page > 0 && page <= this.totalPages && page !== this.myPage) {\r\n      this.myPage = page;\r\n\r\n      this.$emit('change-page', {\r\n        page,\r\n      });\r\n    }\r\n  }\r\n\r\n  calcPages(page?: number): IPage[] {\r\n    const pages: IPage[] = [];\r\n    let startPage = 1;\r\n    let endPage = this.totalPages;\r\n    const maxSize = 5;\r\n    const isMaxSized = maxSize < this.totalPages;\r\n\r\n    page = page || this.myPage;\r\n\r\n    if (isMaxSized) {\r\n      startPage = page - Math.floor(maxSize / 2);\r\n      endPage = page + Math.floor(maxSize / 2);\r\n\r\n      if (startPage < 1) {\r\n        startPage = 1;\r\n        endPage = Math.min(startPage + maxSize - 1, this.totalPages);\r\n      } else if (endPage > this.totalPages) {\r\n        startPage = Math.max(this.totalPages - maxSize + 1, 1);\r\n        endPage = this.totalPages;\r\n      }\r\n    }\r\n\r\n    for (let num = startPage; num <= endPage; num++) {\r\n      pages.push({\r\n        number: num,\r\n        text: String(num),\r\n      });\r\n    }\r\n    return pages;\r\n  }\r\n}\r\n","import { SelectionType } from 'types/selection.type';\r\nimport { SortType } from 'types/sort.type';\r\nimport { SortDirection } from 'types/sort-direction.type';\r\nimport { ISortPropDir } from 'types/sort-prop-dir.type';\r\nimport { TableColumn } from 'types/table-column.type';\r\nimport { nextSortDir } from 'utils/sort';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\n\r\n@Component({\r\n  template: `\r\n    <div\r\n      class=\"datatable-header-cell-template-wrap\"\r\n      :class=\"[columnCssClasses]\"\r\n      :style=\"styles\"\r\n      :title=\"name\"\r\n      v-show=\"column.visible\"\r\n      @contextmenu=\"onContextmenu($event)\"\r\n    >\r\n      <slot name=\"target-marker\">\r\n        <!-- Default content -->\r\n        <div class=\"targetMarker\" v-if=\"isTarget\">\r\n          <div class=\"icon datatable-icon-down\"></div>\r\n          <div class=\"icon datatable-icon-up\"></div>\r\n        </div>\r\n      </slot>\r\n      <label v-if=\"isCheckboxable\" class=\"datatable-checkbox\">\r\n        <input type=\"checkbox\" v-model=\"myAllRowsSelected\" @change=\"onCheckboxChange\" />\r\n      </label>\r\n      <slot v-bind=\"{ column: column }\">\r\n        <!-- Default content -->\r\n        <span class=\"datatable-header-cell-wrapper\">\r\n          <span class=\"datatable-header-cell-label draggable\" :class=\"cssClass\" @click=\"onSort\" v-html=\"name\"> </span>\r\n        </span>\r\n      </slot>\r\n      <div :class=\"sortCssClass\" @click=\"onSort\">\r\n        {{ sortOrder }}\r\n      </div>\r\n      <slot name=\"append\" v-bind=\"{ column: column }\"></slot>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableHeaderCellComponent extends Vue {\r\n  @Prop() sortType: SortType;\r\n  @Prop() sortAscendingIcon: string;\r\n  @Prop() sortDescendingIcon: string;\r\n  @Prop() isTarget: boolean;\r\n  @Prop() allRowsSelected: boolean;\r\n  @Prop() selectionType: SelectionType;\r\n  @Prop() column: TableColumn;\r\n  @Prop() sorts: ISortPropDir[];\r\n  @Prop() headerHeight: number;\r\n\r\n  sortFn = this.onSort.bind(this) as () => void;\r\n  sortDir: SortDirection = null;\r\n  myAllRowsSelected = false;\r\n  sortOrder = '';\r\n  // selectFn = this.select.emit.bind(this.select);\r\n\r\n  cellContext = {\r\n    column: null as TableColumn,\r\n    sortDir: this.sortDir,\r\n    sortFn: this.sortFn,\r\n    allRowsSelected: false,\r\n    // selectFn: this.selectFn\r\n  };\r\n\r\n  resizeObserver?: ResizeObserver;\r\n\r\n  @Watch('allRowsSelected', { immediate: true }) onAllRowsSelectedChanged(): void {\r\n    if (!this.isCheckboxable) {\r\n      return;\r\n    }\r\n    this.myAllRowsSelected = this.allRowsSelected;\r\n    this.cellContext.allRowsSelected = this.allRowsSelected;\r\n  }\r\n\r\n  @Watch('column', { immediate: true }) onColumnChahged(): void {\r\n    this.cellContext.column = this.column;\r\n  }\r\n\r\n  @Watch('sorts', { immediate: true }) onSortsChanged(): void {\r\n    this.sortDir = this.calcSortDir(this.sorts);\r\n    this.cellContext.sortDir = this.sortDir;\r\n  }\r\n\r\n  created(): void {\r\n    this.cellContext.column = this.column;\r\n    this.cellContext.allRowsSelected = this.allRowsSelected;\r\n    this.$emit('header-cell-created', this.$el);\r\n    if (this.column.headerTemplate) {\r\n      this.$slots.default = this.column.headerTemplate({ column: this.column });\r\n    }\r\n    if (this.column.headerAppendTemplate) {\r\n      this.$slots.append = this.column.headerAppendTemplate({ column: this.column });\r\n    }\r\n  }\r\n\r\n  mounted(): void {\r\n    this.column.element = this.$el;\r\n    this.$emit('header-cell-mounted', this.$el);\r\n    this.setResizeObserver();\r\n  }\r\n\r\n  beforeUpdate(): void {\r\n    if (this.column.headerTemplate && !this.$slots.default) {\r\n      this.$slots.default = this.column.headerTemplate({ column: this.column });\r\n    }\r\n    if (this.column.headerAppendTemplate && !this.$slots.append) {\r\n      this.$slots.append = this.column.headerAppendTemplate({ column: this.column });\r\n    }\r\n  }\r\n\r\n  updated(): void {\r\n    if (this.resizeObserver && this.column.element !== this.$el) {\r\n      this.resizeObserver.unobserve(this.column.element);\r\n    }\r\n    this.column.element = this.$el;\r\n    this.setResizeObserver();\r\n  }\r\n\r\n  beforeDestroy(): void {\r\n    if (this.column) {\r\n      this.column.element = null;\r\n    }\r\n    if (this.resizeObserver) {\r\n      this.resizeObserver.unobserve(this.$el);\r\n    }\r\n  }\r\n\r\n  onCheckboxChange(): void {\r\n    this.$emit('select', this.myAllRowsSelected);\r\n  }\r\n\r\n  get columnCssClasses(): string {\r\n    let cls = 'datatable-header-cell';\r\n    if (this.column) {\r\n      if (this.column.sortable) {\r\n        cls += ' sortable';\r\n      }\r\n      if (this.column.resizeable) {\r\n        cls += ' resizeable';\r\n      }\r\n      if (this.column.draggable) {\r\n        cls += ' draggable';\r\n      }\r\n      if (this.column.headerClass) {\r\n        if (typeof this.column.headerClass === 'string') {\r\n          cls += ' ' + this.column.headerClass;\r\n        } else if (Array.isArray(this.column.headerClass)) {\r\n          cls += ' ' + this.column.headerClass.join(' ');\r\n        } else if (typeof this.column.headerClass === 'function') {\r\n          const res = this.column.headerClass({\r\n            column: this.column,\r\n          });\r\n          if (typeof res === 'string') {\r\n            cls += res;\r\n          } else if (typeof res === 'object') {\r\n            const keys = Object.keys(res);\r\n            for (const k of keys) {\r\n              if (res[k] === true) {\r\n                cls += ` ${k}`;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const sortDir = this.sortDir;\r\n    if (sortDir) {\r\n      cls += ` sort-active sort-${sortDir}`;\r\n    }\r\n\r\n    return cls;\r\n  }\r\n\r\n  get name(): string {\r\n    // guaranteed to have a value by setColumnDefaults() in column-helper.ts\r\n    return !this.column.headerTemplate ? this.column.name : null;\r\n  }\r\n\r\n  get styles(): Record<string, string> {\r\n    // const width = this.calcRealWidth();\r\n    // if (width !== null && width < 10) {\r\n    //   this.column.visible = false;\r\n    // } else {\r\n    //   this.column.visible = true;\r\n    // }\r\n    return {\r\n      height: `${this.headerHeight}px`,\r\n      width: `${this.column.width}px`,\r\n      'min-width': `${this.column.minWidth}px`,\r\n      'max-width': `${this.column.maxWidth}px`,\r\n    };\r\n  }\r\n\r\n  get sortCssClass(): string {\r\n    return this.calcSortCssClass(this.sortDir);\r\n  }\r\n\r\n  get cssClass(): string {\r\n    return this.calcCssClass(this.sortDir);\r\n  }\r\n\r\n  // @HostBinding('style.minWidth.px')\r\n  // get minWidth(): number {\r\n  //   return this.column.minWidth;\r\n  // }\r\n\r\n  // @HostBinding('style.maxWidth.px')\r\n  // get maxWidth(): number {\r\n  //   return this.column.maxWidth;\r\n  // }\r\n\r\n  // @HostBinding('style.width.px')\r\n  // get width(): number {\r\n  //   return this.column.width;\r\n  // }\r\n\r\n  get isCheckboxable(): boolean {\r\n    return this.column.checkboxable && this.column.headerCheckboxable;\r\n  }\r\n\r\n  // @HostListener('contextmenu', ['$event'])\r\n  onContextmenu($event: MouseEvent): void {\r\n    this.$emit('columnContextmenu', { event: $event, column: this.column });\r\n  }\r\n\r\n  calcSortDir(sorts: ISortPropDir[]): SortDirection {\r\n    this.sortOrder = '';\r\n    if (sorts && this.column) {\r\n      let sortOrder = '';\r\n      const sort = sorts\r\n        .filter(s => s.prop)\r\n        .find((s: ISortPropDir, index) => {\r\n          if (s.prop === this.column.prop) {\r\n            sortOrder = (index + 1).toString();\r\n            return true;\r\n          }\r\n        });\r\n      if (sort) {\r\n        if (this.sortType === SortType.multi) {\r\n          this.sortOrder = sortOrder;\r\n        }\r\n        return sort.dir;\r\n      }\r\n    }\r\n  }\r\n\r\n  onSort(): void {\r\n    if (!this.column.sortable) {\r\n      return;\r\n    }\r\n\r\n    const newValue = nextSortDir(this.sortType, this.sortDir);\r\n    this.$emit('sort', {\r\n      column: this.column,\r\n      prevValue: this.sortDir,\r\n      newValue,\r\n    });\r\n  }\r\n\r\n  calcSortCssClass(sortDir: SortDirection): string {\r\n    if (sortDir === SortDirection.asc) {\r\n      return `sort-btn sort-asc ${this.sortAscendingIcon}`;\r\n    }\r\n    if (sortDir === SortDirection.desc) {\r\n      return `sort-btn sort-desc ${this.sortDescendingIcon}`;\r\n    }\r\n    return 'sort-btn';\r\n  }\r\n\r\n  calcCssClass(sortDir: SortDirection): string {\r\n    if (sortDir === SortDirection.asc || sortDir === SortDirection.desc) {\r\n      return 'datatable-header-cell-bold';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private setResizeObserver() {\r\n    if ((window as Window).ResizeObserver) {\r\n      this.resizeObserver = new (window as Window).ResizeObserver(entries => {\r\n        if (!this.column) {\r\n          return;\r\n        }\r\n        if (entries.length && entries[0].contentRect) {\r\n          this.column.realWidth = Math.max(this.$el.clientWidth, entries[0].contentRect.width);\r\n        } else {\r\n          this.column.realWidth = this.$el.clientWidth;\r\n        }\r\n      });\r\n      this.resizeObserver.observe(this.$el);\r\n    } else {\r\n      this.column.realWidth = null;\r\n    }\r\n  }\r\n}\r\n","import DraggableDirective from 'directives/draggable.directive';\r\nimport LongPressDirective from 'directives/long-press.directive';\r\nimport ResizeableDirective from 'directives/resizeable.directive';\r\nimport { SelectionType } from 'types/selection.type';\r\nimport { SortType } from 'types/sort.type';\r\nimport { SortDirection } from 'types/sort-direction.type';\r\nimport { ISortEvent, ISortPropDir } from 'types/sort-prop-dir.type';\r\nimport { TableColumn } from 'types/table-column.type';\r\nimport { columnGroupWidths, columnsByPin, columnsByPinArr, IColumnsByPinRecord, IColumnsWidth } from 'utils/column';\r\nimport { translateXY } from 'utils/translate';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\nimport DataTableHeaderCellComponent from './header-cell.component';\r\n\r\ninterface IDragPosition {\r\n  left: number;\r\n  right: number;\r\n  index: number;\r\n  element: HTMLElement;\r\n}\r\n\r\n@Component({\r\n  components: {\r\n    'datatable-header-cell': DataTableHeaderCellComponent,\r\n  },\r\n  directives: {\r\n    resizeable: ResizeableDirective,\r\n    'long-press': LongPressDirective,\r\n    dragndrop: DraggableDirective,\r\n  },\r\n  template: `\r\n    <div :style=\"styleObject\" class=\"datatable-header-inner\">\r\n      <div\r\n        v-for=\"colGroup of columnsByPin\"\r\n        :key=\"colGroup.type\"\r\n        :class=\"['datatable-row-' + colGroup.type]\"\r\n        :style=\"styleByGroup[colGroup.type]\"\r\n      >\r\n        <datatable-header-cell\r\n          v-for=\"column of colGroup.columns\"\r\n          :key=\"column.$$id\"\r\n          v-resizeable=\"{ resizeEnabled: column.resizeable }\"\r\n          v-long-press=\"{pressModel: column, pressEnabled: reorderable && column.draggable}\"\r\n          v-dragndrop=\"{dragEvent:dragEvent,dragModel:column,dragX:isEnableDragX(column),dragY:false}\"\r\n          @resize=\"onColumnResized($event, column)\"\r\n          @longPressStart=\"onLongPressStart($event, column)\"\r\n          @longPressEnd=\"onLongPressEnd($event, column)\"\r\n          :headerHeight=\"headerHeight\"\r\n          :isTarget=\"column.isTarget\"\r\n          :targetMarkerContext=\"column.targetMarkerContext\"\r\n          :column=\"column\"\r\n          :sortType=\"sortType\"\r\n          :sorts=\"sorts\"\r\n          :selectionType=\"selectionType\"\r\n          :sortAscendingIcon=\"sortAscendingIcon\"\r\n          :sortDescendingIcon=\"sortDescendingIcon\"\r\n          :allRowsSelected=\"allRowsSelected\"\r\n          @sort=\"onSort($event)\"\r\n          @select=\"onSelect\"\r\n          @columnContextmenu=\"$emit('columnContextmenu', $event)\"\r\n          @header-cell-mounted=\"onHeaderCellMounted(column, $event)\"\r\n          @dragStart=\"onDragStart\"\r\n          @dragEnd=\"onDragEnd\"\r\n          @dragging=\"onDragging\"\r\n          @hidden-changed=\"onHiddenChanged($event)\"\r\n        >\r\n        </datatable-header-cell>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableHeaderComponent extends Vue {\r\n  @Prop() sortAscendingIcon: string;\r\n  @Prop() sortDescendingIcon: string;\r\n  @Prop() scrollbarWidth: number;\r\n  @Prop() scrollbarH: boolean;\r\n  @Prop() dealsWithGroup: boolean;\r\n  @Prop() innerWidth: number;\r\n  @Prop() sorts: ISortPropDir[];\r\n  @Prop() sortType: SortType;\r\n  @Prop() allRowsSelected: boolean;\r\n  @Prop() selectionType: SelectionType;\r\n  @Prop() reorderable: boolean;\r\n  @Prop() headerHeight: string | number;\r\n  @Prop() columns: TableColumn[];\r\n  @Prop() offsetX: number;\r\n\r\n  columnsByPin: IColumnsByPinRecord[] = null;\r\n  columnGroupWidths: IColumnsWidth = null;\r\n  myHeaderHeight = 'auto';\r\n  styleByGroup = {\r\n    left: {},\r\n    center: {},\r\n    right: {},\r\n  };\r\n  targetMarkerContext: { class: string } = null;\r\n  dragEvent: MouseEvent = null;\r\n  dragging = false;\r\n  positions: Record<string, IDragPosition> = {};\r\n\r\n  // non-reactive props\r\n  lastDraggingIndex: number;\r\n  draggables: Array<{ dragModel: TableColumn; element: HTMLElement }>;\r\n\r\n  @Watch('innerWidth', { immediate: true }) onChangedInnerWidth(): void {\r\n    if (this.columns) {\r\n      const colByPin = columnsByPin(this.columns);\r\n      this.columnGroupWidths = columnGroupWidths(colByPin, this.columns, this.innerWidth);\r\n      this.setStylesByGroup();\r\n    }\r\n  }\r\n\r\n  // @HostBinding('style.height')\r\n  @Watch('headerHeight', { immediate: true }) onHeaderHeightChanged(): void {\r\n    if (this.headerHeight !== 'auto') {\r\n      this.myHeaderHeight = `${this.headerHeight}px`;\r\n    } else {\r\n      this.myHeaderHeight = this.headerHeight;\r\n    }\r\n  }\r\n\r\n  @Watch('columns', { immediate: true }) onColumnsChanged(): void {\r\n    const colsByPin = columnsByPin(this.columns);\r\n    this.columnsByPin = columnsByPinArr(this.columns);\r\n    this.columnGroupWidths = columnGroupWidths(colsByPin, this.columns, this.innerWidth);\r\n    this.setStylesByGroup();\r\n  }\r\n\r\n  @Watch('offsetX') onOffsetXChanged(): void {\r\n    this.setStylesByGroup();\r\n  }\r\n\r\n  // @Output() sort: EventEmitter<any> = new EventEmitter();\r\n  // @Output() reorder: EventEmitter<any> = new EventEmitter();\r\n  // @Output() resize: EventEmitter<any> = new EventEmitter();\r\n  // @Output() select: EventEmitter<any> = new EventEmitter();\r\n  // @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent, column: any }>(false);\r\n\r\n  onLongPressStart({ event, model }: { event: MouseEvent; model: { dragging: boolean } }): void {\r\n    model.dragging = true;\r\n    this.dragEvent = event;\r\n  }\r\n\r\n  onLongPressEnd({ event, model }: { event: MouseEvent; model: TableColumn }): void {\r\n    this.dragEvent = event;\r\n\r\n    // delay resetting so sort can be\r\n    // prevented if we were dragging\r\n    setTimeout(() => {\r\n      // datatable component creates copies from columns on reorder\r\n      // set dragging to false on new objects\r\n      const column = this.columns.find(c => c.$$id === model.$$id);\r\n      if (column) {\r\n        column.dragging = false;\r\n      }\r\n    }, 5);\r\n  }\r\n\r\n  // @HostBinding('style.width')\r\n  get headerWidth(): string {\r\n    if (this.scrollbarH) {\r\n      return `${this.innerWidth}px`;\r\n    }\r\n    return '100%';\r\n  }\r\n\r\n  isEnableDragX(column: TableColumn): boolean {\r\n    return this.reorderable && column.draggable && column.dragging;\r\n  }\r\n\r\n  // trackByGroups(colGroup: any): any {\r\n  //   return colGroup.type;\r\n  // }\r\n\r\n  // columnTrackingFn(column: any): any {\r\n  //   return column.$$id;\r\n  // }\r\n\r\n  onColumnResized(width: number, column: TableColumn): void {\r\n    // column: DataTableColumnDirective\r\n    if (width <= column.minWidth) {\r\n      width = column.minWidth;\r\n    } else if (width >= column.maxWidth) {\r\n      width = column.maxWidth;\r\n    }\r\n\r\n    this.$emit('resize', {\r\n      column,\r\n      prevValue: column.width,\r\n      newValue: width,\r\n    });\r\n  }\r\n\r\n  onHiddenChanged(): void {\r\n    this.$emit('hidden-changed');\r\n    this.onChangedInnerWidth();\r\n  }\r\n\r\n  getColumn(index: number): TableColumn {\r\n    const leftColumnCount = this.columnsByPin[0].columns.length;\r\n    if (index < leftColumnCount) {\r\n      return this.columnsByPin[0].columns[index];\r\n    }\r\n\r\n    const centerColumnCount = this.columnsByPin[1].columns.length;\r\n    if (index < leftColumnCount + centerColumnCount) {\r\n      return this.columnsByPin[1].columns[index - leftColumnCount];\r\n    }\r\n\r\n    return this.columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\r\n  }\r\n\r\n  onSort({\r\n    column,\r\n    prevValue,\r\n    newValue,\r\n  }: {\r\n    column: TableColumn;\r\n    prevValue: SortDirection;\r\n    newValue: SortDirection;\r\n  }): void {\r\n    // if we are dragging don't sort!\r\n    if (column.dragging) {\r\n      return;\r\n    }\r\n\r\n    const sorts = this.calcNewSorts(column, prevValue, newValue);\r\n    const event: ISortEvent = {\r\n      sorts,\r\n      column,\r\n      prevValue,\r\n      newValue,\r\n    };\r\n    this.$emit('sort', event);\r\n  }\r\n\r\n  onSelect(event: Event): void {\r\n    this.$emit('select', event);\r\n  }\r\n\r\n  calcNewSorts(column: TableColumn, prevValue: SortDirection, newValue: SortDirection): ISortPropDir[] {\r\n    let idx = 0;\r\n\r\n    if (!this.sorts) {\r\n      this.sorts = [];\r\n    }\r\n\r\n    const sorts = this.sorts.map((s, i) => {\r\n      s = { ...s };\r\n      if (s.prop === column.prop) {\r\n        idx = i;\r\n      }\r\n      return s;\r\n    });\r\n\r\n    if (!newValue) {\r\n      sorts.splice(idx, 1);\r\n    } else if (prevValue) {\r\n      sorts[idx].dir = newValue;\r\n    } else {\r\n      if (this.sortType === SortType.single) {\r\n        sorts.splice(0, this.sorts.length);\r\n      }\r\n\r\n      sorts.push({ dir: newValue, prop: column.prop });\r\n    }\r\n\r\n    return sorts;\r\n  }\r\n\r\n  setStylesByGroup(): void {\r\n    if (!this.columnsByPin || !this.columnsByPin.length) {\r\n      return;\r\n    }\r\n    const leftColumnCount = this.columnsByPin[0].columns.length;\r\n    if (leftColumnCount) {\r\n      this.styleByGroup['left'] = this.calcStylesByGroup('left');\r\n    }\r\n    const centerColumnCount = this.columnsByPin[1].columns.length;\r\n    if (centerColumnCount) {\r\n      this.styleByGroup['center'] = this.calcStylesByGroup('center');\r\n    }\r\n    const rightColumnCount = this.columnsByPin[2].columns.length;\r\n    if (rightColumnCount) {\r\n      this.styleByGroup['right'] = this.calcStylesByGroup('right');\r\n    }\r\n  }\r\n\r\n  calcStylesByGroup(group: keyof IColumnsWidth): Record<string, string | number> {\r\n    const widths = this.columnGroupWidths;\r\n    const offsetX = this.offsetX;\r\n\r\n    const styles = {\r\n      width: `${widths[group]}px`,\r\n    };\r\n    if (group === 'center') {\r\n      translateXY(styles, offsetX * -1, 0);\r\n    } else if (group === 'right') {\r\n      const totalDiff = widths.total - this.innerWidth;\r\n      let offset = totalDiff * -1;\r\n      if (this.scrollbarWidth) {\r\n        offset -= this.scrollbarWidth;\r\n      }\r\n      translateXY(styles, offset, 0);\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  styleForGroup(group: IColumnsByPinRecord): Record<string, string | number> {\r\n    return this.styleByGroup[group.type];\r\n  }\r\n\r\n  get styleObject(): Record<string, string | number> {\r\n    return {\r\n      width: this.headerWidth ? this.headerWidth : `${this.columnGroupWidths.total}px`,\r\n      height: this.myHeaderHeight,\r\n    };\r\n  }\r\n\r\n  onHeaderCellMounted(column: TableColumn, element: HTMLElement): void {\r\n    if (!this.draggables) {\r\n      this.draggables = [];\r\n    }\r\n    this.draggables.push({ dragModel: column, element });\r\n  }\r\n\r\n  onDragStart(): void {\r\n    if (this.dragging) {\r\n      return;\r\n    }\r\n    this.dragging = true;\r\n\r\n    this.positions = {};\r\n\r\n    let i = 0;\r\n    this.draggables.sort((a, b) => {\r\n      const left = parseInt(a.element.offsetLeft.toString(), 10);\r\n      const left1 = parseInt(b.element.offsetLeft.toString(), 10);\r\n      return left - left1;\r\n    });\r\n    for (const dragger of this.draggables) {\r\n      const elm = dragger.element;\r\n      const left = parseInt(elm.offsetLeft.toString(), 10);\r\n      const width = elm.offsetWidth;\r\n      if (width) {\r\n        this.positions[dragger.dragModel.prop] = {\r\n          left,\r\n          right: left + parseInt(width.toString(), 10),\r\n          index: i++,\r\n          element: elm,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  onDragging({ element, model, event }: { element: HTMLElement; model: TableColumn; event: MouseEvent }): void {\r\n    const prevPos = this.positions[model.prop];\r\n    const target = this.isTarget(model, event);\r\n\r\n    if (target) {\r\n      if (this.lastDraggingIndex !== target.i) {\r\n        this.onTargetChanged({\r\n          prevIndex: this.lastDraggingIndex,\r\n          newIndex: target.i,\r\n          initialIndex: prevPos.index,\r\n        });\r\n        this.lastDraggingIndex = target.i;\r\n      }\r\n    } else if (this.lastDraggingIndex !== prevPos.index) {\r\n      this.onTargetChanged({\r\n        prevIndex: this.lastDraggingIndex,\r\n        initialIndex: prevPos.index,\r\n      });\r\n      this.lastDraggingIndex = prevPos.index;\r\n    }\r\n  }\r\n\r\n  onDragEnd({ element, model, event }: { element: HTMLElement; model: TableColumn; event: MouseEvent }): void {\r\n    this.dragging = false;\r\n    const prevPos = this.columns.findIndex(col => col.prop === model.prop); // this.positions[model.prop];\r\n\r\n    const target = this.isTarget(model, event);\r\n    this.positions = {};\r\n    if (target) {\r\n      this.onColumnReordered({\r\n        prevIndex: prevPos,\r\n        newIndex: this.columns.findIndex(col => col.prop === target.prop), // target.i,\r\n        model,\r\n      });\r\n    }\r\n    // eslint-disable-next-line no-undefined\r\n    this.lastDraggingIndex = undefined;\r\n    element.style.left = 'auto';\r\n  }\r\n\r\n  onColumnReordered({ prevIndex, newIndex, model }: { prevIndex: number; newIndex: number; model: TableColumn }): void {\r\n    const column = this.getColumn(newIndex);\r\n    column.isTarget = false;\r\n    column.targetMarkerContext = null;\r\n    this.$emit('reorder', {\r\n      column: model,\r\n      prevValue: prevIndex,\r\n      newValue: newIndex,\r\n    });\r\n  }\r\n\r\n  onTargetChanged({\r\n    prevIndex,\r\n    newIndex,\r\n    initialIndex,\r\n  }: {\r\n    prevIndex: number;\r\n    newIndex?: number;\r\n    initialIndex: number;\r\n  }): void {\r\n    if (prevIndex || prevIndex === 0) {\r\n      const oldColumn = this.getColumn(prevIndex);\r\n      oldColumn.isTarget = false;\r\n      oldColumn.targetMarkerContext = null;\r\n    }\r\n    if (newIndex || newIndex === 0) {\r\n      const newColumn = this.getColumn(newIndex);\r\n      newColumn.isTarget = true;\r\n\r\n      if (initialIndex !== newIndex) {\r\n        newColumn.targetMarkerContext = {\r\n          class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft'),\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  isTarget(\r\n    model: TableColumn,\r\n    event: MouseEvent\r\n  ): {\r\n    prop: string;\r\n    pos: IDragPosition;\r\n    i: number;\r\n  } {\r\n    let i = 0;\r\n    const x = event.x || event.clientX;\r\n    const y = event.y || event.clientY;\r\n    const targets = document.elementsFromPoint(x, y);\r\n\r\n    for (const prop in this.positions) {\r\n      // current column position which throws event.\r\n      const pos = this.positions[prop];\r\n      // since we drag the inner span, we need to find it in the elements at the cursor\r\n      if (model.prop !== prop && targets.find((el: HTMLElement) => el === pos.element)) {\r\n        return {\r\n          prop,\r\n          pos,\r\n          i,\r\n        };\r\n      }\r\n\r\n      i++;\r\n    }\r\n  }\r\n}\r\n","import { TableColumn } from 'types/table-column.type';\r\nimport { VNode } from 'vue';\r\nimport { DirectiveBinding } from 'vue/types/options';\r\nimport { Vue } from 'vue-property-decorator';\r\n\r\nlet idCounter = 0;\r\n\r\ninterface IDraggableElement extends HTMLElement {\r\n  __draggable__: DraggableController;\r\n}\r\n\r\nclass DraggableController {\r\n  id = 0;\r\n  vnode: VNode = null;\r\n  element: HTMLElement = null;\r\n  handleUp: (event: MouseEvent) => void = null;\r\n  handleDown: (event: MouseEvent) => void = null;\r\n  handleMove: (event: MouseEvent) => void = null;\r\n  dragModel: TableColumn;\r\n  dragX = true;\r\n  dragY = true;\r\n\r\n  private _dragEvent: MouseEvent = null;\r\n  private isDragging = false;\r\n  private mouseDownPos: { x: number; y: number };\r\n\r\n  constructor(id: number, vNode: VNode, el: HTMLElement, dragModel: TableColumn, dragX: boolean, dragY: boolean) {\r\n    this.id = id;\r\n    this.vnode = vNode;\r\n    this.element = el;\r\n    this.dragModel = dragModel;\r\n    this.dragX = dragX;\r\n    this.dragY = dragY;\r\n    this.handleUp = this.onMouseUp.bind(this) as (event: MouseEvent) => void;\r\n    this.handleMove = this.onMouseMove.bind(this) as (event: MouseEvent) => void;\r\n  }\r\n\r\n  unsubscribe() {\r\n    document.removeEventListener('mousemove', this.handleMove);\r\n    document.removeEventListener('mouseup', this.handleUp);\r\n  }\r\n\r\n  set dragEvent(value: MouseEvent) {\r\n    this._dragEvent = value;\r\n    if (value) {\r\n      this.onMouseDown(value);\r\n    }\r\n  }\r\n  get dragEvent() {\r\n    return this._dragEvent;\r\n  }\r\n\r\n  onMouseDown(event: MouseEvent): void {\r\n    // we only want to drag the inner header text\r\n    const isDragElm = (<HTMLElement>event.target).classList.contains('draggable');\r\n\r\n    if (isDragElm && (this.dragX || this.dragY)) {\r\n      event.preventDefault();\r\n      this.isDragging = true;\r\n\r\n      this.mouseDownPos = { x: event.clientX, y: event.clientY };\r\n\r\n      document.addEventListener('mouseup', this.handleUp);\r\n      document.addEventListener('mousemove', this.handleMove);\r\n\r\n      this.emit('dragStart', {\r\n        event,\r\n        element: this.element,\r\n        model: this.dragModel,\r\n      });\r\n    }\r\n  }\r\n\r\n  private onMouseUp(event: MouseEvent): void {\r\n    document.removeEventListener('mousemove', this.handleMove);\r\n    if (!this.isDragging) {\r\n      return;\r\n    }\r\n\r\n    this.isDragging = false;\r\n    this.element.classList.remove('dragging');\r\n\r\n    this.unsubscribe();\r\n    this.emit('dragEnd', {\r\n      event,\r\n      element: this.element,\r\n      model: this.dragModel,\r\n    });\r\n  }\r\n\r\n  private onMouseMove(event: MouseEvent): void {\r\n    if (!this.isDragging) {\r\n      return;\r\n    }\r\n\r\n    const x = event.clientX - this.mouseDownPos.x;\r\n    const y = event.clientY - this.mouseDownPos.y;\r\n\r\n    if (this.dragX) {\r\n      this.element.style.left = `${x}px`;\r\n    }\r\n    if (this.dragY) {\r\n      this.element.style.top = `${y}px`;\r\n    }\r\n\r\n    this.element.classList.add('dragging');\r\n\r\n    this.emit('dragging', {\r\n      event,\r\n      element: this.element,\r\n      model: this.dragModel,\r\n    });\r\n  }\r\n\r\n  private emit(name: string, data: unknown): void {\r\n    const handlers =\r\n      (this.vnode.data && this.vnode.data.on) || (this.vnode.componentOptions && this.vnode.componentOptions.listeners);\r\n    if (handlers && handlers[name]) {\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\r\n      handlers[name].fns(data);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Vue.directive('draggable', {\r\n  bind(el: HTMLElement, binding: DirectiveBinding, vnode: VNode): void {\r\n    const ctrl = new DraggableController(\r\n      idCounter++,\r\n      vnode,\r\n      el,\r\n      (binding as { value: { dragModel: TableColumn } }).value.dragModel,\r\n      (binding as { value: { dragX: boolean } }).value.dragX,\r\n      (binding as { value: { dragY: boolean } }).value.dragY\r\n    );\r\n    (el as IDraggableElement).__draggable__ = ctrl;\r\n  },\r\n  update(el: HTMLElement, binding: DirectiveBinding, vnode: VNode): void {\r\n    const ctrl: DraggableController = (el as IDraggableElement).__draggable__;\r\n    if (!ctrl) {\r\n      return;\r\n    }\r\n    ctrl.dragX = (binding as { value: { dragX: boolean } }).value.dragX;\r\n    ctrl.dragEvent = (binding as { value: { dragEvent: MouseEvent } }).value.dragEvent;\r\n  },\r\n  unbind(el: HTMLElement) {\r\n    const ctrl: DraggableController = (el as IDraggableElement).__draggable__;\r\n    ctrl.unsubscribe();\r\n  },\r\n});\r\n","import { TableColumn } from 'types/table-column.type';\r\nimport { VNode } from 'vue';\r\nimport { DirectiveBinding } from 'vue/types/options';\r\nimport { Vue } from 'vue-property-decorator';\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nlet _id = 0;\r\n\r\nclass LongPressController {\r\n  id = 0;\r\n  pressEnabled = true;\r\n  pressModel: TableColumn;\r\n  duration = 200;\r\n  _pressing: boolean;\r\n  _isLongPressing: boolean;\r\n  timeout: number;\r\n  mouseX = 0;\r\n  mouseY = 0;\r\n  vnode: VNode = null;\r\n  element: HTMLElement = null;\r\n  handleUp: (event: MouseEvent) => void = null;\r\n  handleDown: (event: MouseEvent) => void = null;\r\n  handleMove: (event: MouseEvent) => void = null;\r\n\r\n  constructor(id: number, vNode: VNode, el: HTMLElement) {\r\n    this.id = id;\r\n    this.vnode = vNode;\r\n    this.element = el;\r\n    this.handleDown = this.onMouseDown.bind(this) as (event: MouseEvent) => void;\r\n    this.handleUp = this.onMouseUp.bind(this) as (event: MouseEvent) => void;\r\n    this.handleMove = this.onMouseMove.bind(this) as (event: MouseEvent) => void;\r\n    el.addEventListener('mousedown', this.handleDown);\r\n  }\r\n\r\n  unsubscribe() {\r\n    document.removeEventListener('mousemove', this.handleMove);\r\n    document.removeEventListener('mouseup', this.handleUp);\r\n  }\r\n\r\n  set pressing(value: boolean) {\r\n    this._pressing = value;\r\n    if (value) {\r\n      this.element.classList.add('press');\r\n    } else {\r\n      this.element.classList.remove('press');\r\n    }\r\n  }\r\n\r\n  get pressing(): boolean {\r\n    return this._pressing;\r\n  }\r\n\r\n  set isLongPressing(value: boolean) {\r\n    this._isLongPressing = value;\r\n    // console.log('set isLongPressing, id, value', this.id, value);\r\n    if (value) {\r\n      this.element.classList.add('longpress');\r\n    } else {\r\n      this.element.classList.remove('longpress');\r\n    }\r\n  }\r\n\r\n  get isLongPressing(): boolean {\r\n    return this._isLongPressing;\r\n  }\r\n\r\n  private onMouseDown(event: MouseEvent): void {\r\n    // don't do right/middle clicks\r\n    if (event.which !== 1 || !this.pressEnabled) {\r\n      return;\r\n    }\r\n\r\n    // don't start drag if its on resize handle\r\n    const target = <HTMLElement>event.target;\r\n    if (target.classList.contains('resize-handle')) {\r\n      return;\r\n    }\r\n\r\n    this.mouseX = event.clientX;\r\n    this.mouseY = event.clientY;\r\n\r\n    this.pressing = true;\r\n    this.isLongPressing = false;\r\n\r\n    document.addEventListener('mouseup', this.handleUp);\r\n\r\n    this.timeout = setTimeout(() => {\r\n      this.isLongPressing = true;\r\n      this.emit('longPressStart', {\r\n        event,\r\n        model: this.pressModel,\r\n      });\r\n\r\n      document.addEventListener('mousemove', this.handleMove);\r\n\r\n      this.loop(event);\r\n    }, this.duration) as unknown as number;\r\n\r\n    this.loop(event);\r\n  }\r\n\r\n  private onMouseUp(): void {\r\n    document.removeEventListener('mousemove', this.handleMove);\r\n    this.endPress();\r\n  }\r\n\r\n  private onMouseMove(event: MouseEvent): void {\r\n    if (this.pressing && !this.isLongPressing) {\r\n      const xThres = Math.abs(event.clientX - this.mouseX) > 10;\r\n      const yThres = Math.abs(event.clientY - this.mouseY) > 10;\r\n\r\n      // console.log('long-press mouse move, id=', this.id);\r\n\r\n      if (xThres || yThres) {\r\n        this.endPress();\r\n      }\r\n    }\r\n  }\r\n\r\n  private loop(event: MouseEvent): void {\r\n    if (this.isLongPressing) {\r\n      this.timeout = setTimeout(() => {\r\n        this.emit('longPressing', {\r\n          event,\r\n          model: this.pressModel,\r\n        });\r\n        this.loop(event);\r\n      }, 50) as unknown as number;\r\n    }\r\n  }\r\n\r\n  private endPress(): void {\r\n    clearTimeout(this.timeout);\r\n    if (this.isLongPressing) {\r\n      this.unsubscribe();\r\n      this.isLongPressing = false;\r\n      this.pressing = false;\r\n\r\n      this.emit('longPressEnd', {\r\n        model: this.pressModel,\r\n      });\r\n    }\r\n  }\r\n\r\n  private emit(name: string, data: unknown) {\r\n    const handlers =\r\n      (this.vnode.data && this.vnode.data.on) || (this.vnode.componentOptions && this.vnode.componentOptions.listeners);\r\n    if (handlers && handlers[name]) {\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\r\n      handlers[name].fns(data);\r\n    }\r\n  }\r\n}\r\n\r\ninterface IDirValue {\r\n  pressModel: TableColumn;\r\n  pressEnabled: boolean;\r\n  duration?: number;\r\n}\r\n\r\nexport interface IHasLongPressController extends HTMLElement {\r\n  __longpress__: LongPressController;\r\n}\r\n\r\nexport default Vue.directive('long-press', {\r\n  bind(el: HTMLElement, binding: DirectiveBinding, vnode: VNode) {\r\n    const ctrl = new LongPressController(_id++, vnode, el);\r\n    const value = binding.value as IDirValue;\r\n    // eslint-disable-next-line no-undefined\r\n    if (value.pressEnabled !== undefined && value.pressEnabled !== null) {\r\n      ctrl.pressEnabled = value.pressEnabled;\r\n    }\r\n    // eslint-disable-next-line no-undefined\r\n    if (value.duration !== undefined && value.duration !== null) {\r\n      ctrl.duration = value.duration;\r\n    }\r\n    ctrl.pressModel = value.pressModel;\r\n    (el as IHasLongPressController).__longpress__ = ctrl;\r\n  },\r\n  unbind(el: Element) {\r\n    const ctrl: LongPressController = (el as IHasLongPressController).__longpress__;\r\n    ctrl.element.removeEventListener('mousedown', ctrl.handleDown);\r\n    ctrl.unsubscribe();\r\n  },\r\n});\r\n","import { VNode } from 'vue';\r\nimport { DirectiveBinding } from 'vue/types/options';\r\nimport { Vue } from 'vue-property-decorator';\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nlet _id = 0;\r\n\r\nclass ResizeableDirectiveController {\r\n  resizeEnabled = true;\r\n  minWidth = 0;\r\n  maxWidth = 0;\r\n  resizing = false;\r\n  element: HTMLElement = null;\r\n  handleUp: (event: MouseEvent) => void = null;\r\n  handleDown: (event: MouseEvent) => void = null;\r\n  handleMove: (event: MouseEvent) => void = null;\r\n  vnode: VNode = null;\r\n  id = 0;\r\n\r\n  constructor(id: number, vNode: VNode, el: HTMLElement) {\r\n    this.id = id;\r\n    this.vnode = vNode;\r\n    this.element = el;\r\n    this.handleDown = this.onMouseDown.bind(this) as (event: MouseEvent) => void;\r\n    this.handleUp = this.onMouseUp.bind(this) as (event: MouseEvent) => void;\r\n  }\r\n\r\n  private onMouseUp() {\r\n    document.removeEventListener('mousemove', this.handleMove);\r\n    if (this.resizing) {\r\n      this.resizing = false;\r\n      // this.vnode.context.$emit('resize', this.element.clientWidth);\r\n      this.emit(this.vnode, 'resize', this.element.clientWidth);\r\n    }\r\n  }\r\n\r\n  private onMouseDown(event: MouseEvent): void {\r\n    const isHandle = (<HTMLElement>event.target).classList.contains('resize-handle');\r\n    const initialWidth = this.element.clientWidth;\r\n    const mouseDownScreenX = event.screenX;\r\n\r\n    if (isHandle) {\r\n      event.stopPropagation();\r\n      this.resizing = true;\r\n      this.handleMove = (e: MouseEvent) => this.move(e, initialWidth, mouseDownScreenX);\r\n      document.addEventListener('mousemove', this.handleMove);\r\n    }\r\n  }\r\n\r\n  private move(event: MouseEvent, initialWidth: number, mouseDownScreenX: number): void {\r\n    if (!this.resizing) {\r\n      return;\r\n    }\r\n    const movementX = event.screenX - mouseDownScreenX;\r\n    const newWidth = initialWidth + movementX;\r\n\r\n    const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\r\n    const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\r\n\r\n    if (overMinWidth && underMaxWidth) {\r\n      this.element.style.width = `${newWidth}px`;\r\n    }\r\n  }\r\n\r\n  private emit(vnode: VNode, name: string, data: unknown) {\r\n    const handlers = (vnode.data && vnode.data.on) || (vnode.componentOptions && vnode.componentOptions.listeners);\r\n    if (handlers && handlers[name]) {\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\r\n      handlers[name].fns(data);\r\n    }\r\n  }\r\n}\r\n\r\ninterface IDirValue {\r\n  resizeEnabled: boolean;\r\n  minWidth?: number;\r\n  maxWidth?: number;\r\n}\r\n\r\nexport interface IHasResizeableDirectiveController extends HTMLElement {\r\n  __resizeable__: ResizeableDirectiveController;\r\n}\r\n\r\nexport default Vue.directive('resizeable', {\r\n  resizing: false,\r\n  bind(el: HTMLElement, binding: DirectiveBinding, vnode: VNode) {\r\n    const ctrl = new ResizeableDirectiveController(_id++, vnode, el);\r\n    const value = binding.value as IDirValue;\r\n    // eslint-disable-next-line no-undefined\r\n    if (value.resizeEnabled !== undefined && value.resizeEnabled !== null) {\r\n      ctrl.resizeEnabled = value.resizeEnabled;\r\n    }\r\n    ctrl.minWidth = value.minWidth;\r\n    ctrl.maxWidth = value.maxWidth;\r\n    (el as IHasResizeableDirectiveController).__resizeable__ = ctrl;\r\n    document.addEventListener('mouseup', ctrl.handleUp);\r\n    el.addEventListener('mousedown', ctrl.handleDown);\r\n  },\r\n  unbind(el: HTMLElement) {\r\n    const ctrl = (el as IHasResizeableDirectiveController).__resizeable__;\r\n    document.removeEventListener('mouseup', ctrl.handleUp);\r\n    el.removeEventListener('mousedown', ctrl.handleDown);\r\n  },\r\n  inserted(el: HTMLElement) {\r\n    const node = document.createElement('span');\r\n    const ctrl = (el as IHasResizeableDirectiveController).__resizeable__;\r\n    if (ctrl.resizeEnabled) {\r\n      node.classList.add('resize-handle');\r\n    } else {\r\n      node.classList.add('resize-handle--not-resizable');\r\n    }\r\n    el.appendChild(node);\r\n  },\r\n});\r\n","import { VNode } from 'vue';\r\nimport { DirectiveBinding } from 'vue/types/options';\r\nimport { Vue } from 'vue-property-decorator';\r\n\r\nclass VisibilityController {\r\n  _isVisible = false;\r\n  timeout: number;\r\n  vnode: VNode = null;\r\n  element: HTMLElement = null;\r\n\r\n  constructor(vNode: VNode, el: HTMLElement) {\r\n    this.vnode = vNode;\r\n    this.element = el;\r\n  }\r\n\r\n  set isVisible(value: boolean) {\r\n    this._isVisible = value;\r\n    if (value) {\r\n      this.element.classList.add('visible');\r\n    } else {\r\n      this.element.classList.remove('visible');\r\n    }\r\n  }\r\n\r\n  get isVisible(): boolean {\r\n    return this._isVisible;\r\n  }\r\n\r\n  stopCheck(): void {\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  onVisibilityChange(visible: boolean): void {\r\n    if (this.isVisible !== visible) {\r\n      this.isVisible = visible;\r\n      this.emit('visible', visible);\r\n    }\r\n  }\r\n\r\n  runCheck(timeout: number): void {\r\n    const check = () => {\r\n      clearTimeout(this.timeout);\r\n      // https://davidwalsh.name/offsetheight-visibility\r\n      const { offsetHeight, offsetWidth } = this.element;\r\n\r\n      if (offsetHeight && offsetWidth) {\r\n        this.onVisibilityChange(true);\r\n      } else {\r\n        this.onVisibilityChange(false);\r\n      }\r\n      this.timeout = setTimeout(() => check(), timeout) as unknown as number;\r\n    };\r\n    this.timeout = setTimeout(() => check()) as unknown as number;\r\n  }\r\n\r\n  private emit(name: string, data: unknown) {\r\n    const handlers =\r\n      (this.vnode.data && this.vnode.data.on) || (this.vnode.componentOptions && this.vnode.componentOptions.listeners);\r\n\r\n    if (handlers && handlers[name]) {\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\r\n      handlers[name].fns(data);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Visibility Observer Directive\r\n *\r\n * Usage:\r\n *\r\n * <div\r\n *   v-visibility-observer\r\n * >\r\n * </div>\r\n *\r\n */\r\nexport default Vue.directive('visibility-observer', {\r\n  resizing: false,\r\n  bind(el: HTMLElement, binding: DirectiveBinding, vnode: VNode) {\r\n    const ctrl = new VisibilityController(vnode, el);\r\n    (el as unknown as { __visibility__: VisibilityController }).__visibility__ = ctrl;\r\n    const b = binding as { value: { on: boolean; timeout: number } };\r\n    if (b?.value?.on) {\r\n      ctrl.runCheck(b?.value?.timeout ?? 1000);\r\n    }\r\n  },\r\n  unbind(el: HTMLElement) {\r\n    const ctrl = (el as unknown as { __visibility__: VisibilityController }).__visibility__;\r\n    ctrl.stopCheck();\r\n  },\r\n});\r\n","/**\r\n * Gets the width of the scrollbar.  Nesc for windows\r\n * http://stackoverflow.com/a/13382873/888165\r\n */\r\nexport class DimensionsHelper {\r\n  getDimensions(element: Element): ClientRect {\r\n    return element.getBoundingClientRect();\r\n  }\r\n}\r\n","/**\r\n * Gets the width of the scrollbar.  Nesc for windows\r\n * http://stackoverflow.com/a/13382873/888165\r\n */\r\nexport class ScrollbarHelper {\r\n  width: number;\r\n  private readonly document: Document;\r\n\r\n  constructor() {\r\n    this.document = window.document;\r\n    this.width = this.getWidth();\r\n  }\r\n\r\n  getWidth(): number {\r\n    const outer: HTMLElement = this.document.createElement('div');\r\n    outer.style.visibility = 'hidden';\r\n    outer.style.width = '100px';\r\n    outer.style['msOverflowStyle'] = 'scrollbar';\r\n    this.document.body.appendChild(outer);\r\n\r\n    const widthNoScroll = outer.offsetWidth;\r\n    outer.style.overflow = 'scroll';\r\n\r\n    const inner = this.document.createElement('div');\r\n    inner.style.width = '100%';\r\n    outer.appendChild(inner);\r\n\r\n    const widthWithScroll = inner.offsetWidth;\r\n    outer.parentNode.removeChild(outer);\r\n\r\n    return widthNoScroll - widthWithScroll;\r\n  }\r\n}\r\n","export enum CheckMode {\r\n  checkIsSelect = 'checkIsSelect',\r\n  checkNoSelect = 'checkNoSelect',\r\n}\r\n","export enum ColumnMode {\r\n  standard = 'standard',\r\n  flex = 'flex',\r\n  force = 'force',\r\n}\r\n","export enum ContextmenuType {\r\n  header = 'header',\r\n  body = 'body',\r\n}\r\n","export enum SelectionType {\r\n  single = 'single',\r\n  singleFocus = 'singleFocus',\r\n  multi = 'multi',\r\n  multiClick = 'multiClick',\r\n  cell = 'cell',\r\n  checkbox = 'checkbox',\r\n}\r\n","export enum SortDirection {\r\n  asc = 'asc',\r\n  desc = 'desc',\r\n}\r\n","export enum SortType {\r\n  single = 'single',\r\n  multi = 'multi',\r\n}\r\n","/**\r\n * Converts strings from something to camel case\r\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\r\n */\r\nexport function camelCase(str: string): string {\r\n  // Replace special characters with a space\r\n  // eslint-disable-next-line optimize-regex/optimize-regex\r\n  str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\r\n  // put a space before an uppercase letter\r\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\r\n\r\n  // Lower case first character and some other stuff\r\n  str = str\r\n    // eslint-disable-next-line optimize-regex/optimize-regex\r\n    .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\r\n    .trim()\r\n    .toLowerCase();\r\n\r\n  // uppercase characters preceded by a space or number\r\n  str = str.replace(/([\\d ]+)([A-Za-z])/g, (a, b, c) => (b as string).trim() + (c as string).toUpperCase());\r\n\r\n  return str;\r\n}\r\n\r\n/**\r\n * Converts strings from camel case to words\r\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\r\n */\r\nexport function deCamelCase(str: string): string {\r\n  return str.replace(/([A-Z])/g, match => ` ${match}`).replace(/^./, match => match.toUpperCase());\r\n}\r\n","import { TableColumn } from 'types/table-column.type';\r\nimport Vue from 'vue';\r\n// import { DataTableColumnDirective } from '../components/columns';\r\nimport { camelCase, deCamelCase } from './camel-case';\r\nimport { getterForProp } from './column-prop-getters';\r\nimport { id } from './id';\r\n\r\n/**\r\n * Sets the column defaults\r\n */\r\nexport function setColumnsDefaults(columns: TableColumn[], vm: Vue): void {\r\n  if (!columns) {\r\n    return;\r\n  }\r\n\r\n  // Only one column should hold the tree view\r\n  // Thus if multiple columns are provided with\r\n  // isTreeColumn as true we take only the first one\r\n  let treeColumnFound = false;\r\n\r\n  for (const column of columns) {\r\n    setColumnDefaults(column, vm);\r\n    if (!('isTreeColumn' in column)) {\r\n      vm.$set(column, 'isTreeColumn', false);\r\n    } else if (column.isTreeColumn && !treeColumnFound) {\r\n      // If the first column with isTreeColumn is true found\r\n      // we mark that treeCoulmn is found\r\n      vm.$set(column, 'isTreeColumn', true);\r\n      treeColumnFound = true;\r\n    } else {\r\n      // After that isTreeColumn property for any other column\r\n      // will be set as false\r\n      vm.$set(column, 'isTreeColumn', false);\r\n    }\r\n  }\r\n}\r\n\r\nexport function setColumnDefaults(column: TableColumn, vm: Vue): void {\r\n  if (!column) {\r\n    return;\r\n  }\r\n\r\n  if (!column.$$id) {\r\n    column.$$id = id();\r\n  }\r\n\r\n  // prop can be numeric; zero is valid not a missing prop\r\n  // translate name => prop\r\n  if (isNullOrUndefined(column.prop) && column.name) {\r\n    column.prop = camelCase(column.name);\r\n  }\r\n\r\n  vm.$set(column, '$$valueGetter', getterForProp(column.prop));\r\n\r\n  // format props if no name passed\r\n  if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\r\n    column.name = deCamelCase(String(column.prop));\r\n  }\r\n\r\n  if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\r\n    column.name = ''; // Fixes IE and Edge displaying `null`\r\n  }\r\n\r\n  if (!('resizeable' in column)) {\r\n    vm.$set(column, 'resizeable', true);\r\n  }\r\n\r\n  if (!('sortable' in column)) {\r\n    vm.$set(column, 'sortable', true);\r\n  }\r\n\r\n  if (!('draggable' in column)) {\r\n    vm.$set(column, 'draggable', true);\r\n  }\r\n\r\n  if (!('visible' in column)) {\r\n    vm.$set(column, 'visible', true);\r\n  }\r\n\r\n  if (!('canAutoResize' in column) || isNullOrUndefined(column.canAutoResize)) {\r\n    column.canAutoResize = true;\r\n  }\r\n\r\n  if (!('width' in column) || !column.width) {\r\n    vm.$set(column, 'width', 150);\r\n  } else {\r\n    vm.$set(column, 'width', column.width);\r\n  }\r\n  vm.$set(column, 'isTreeColumn', column.isTreeColumn);\r\n  vm.$set(column, 'isTarget', isNullOrUndefined(column.isTarget) ? false : column.isTarget);\r\n}\r\n\r\nexport function isNullOrUndefined<T>(value: T | null | undefined): value is null | undefined {\r\n  // eslint-disable-next-line no-undefined\r\n  return value === null || value === undefined;\r\n}\r\n\r\n/**\r\n * Translates templates definitions to objects\r\n */\r\n// export function translateTemplates(templates: DataTableColumnDirective[]): any[] {\r\n//   const result: any[] = [];\r\n\r\n//   for(const temp of templates) {\r\n//     const col: any = {};\r\n\r\n//     const props = Object.getOwnPropertyNames(temp);\r\n//     for(const prop of props) {\r\n//       col[prop] = temp[prop];\r\n//     }\r\n\r\n//     if(temp.headerTemplate) {\r\n//       col.headerTemplate = temp.headerTemplate;\r\n//     }\r\n\r\n//     if(temp.cellTemplate) {\r\n//       col.cellTemplate = temp.cellTemplate;\r\n//     }\r\n\r\n//     if(temp.summaryFunc) {\r\n//       col.summaryFunc = temp.summaryFunc;\r\n//     }\r\n\r\n//     if(temp.summaryTemplate) {\r\n//       col.summaryTemplate = temp.summaryTemplate;\r\n//     }\r\n\r\n//     result.push(col);\r\n//   }\r\n\r\n//   return result;\r\n// }\r\n","// maybe rename this file to prop-getters.ts\r\n\r\nimport { TableColumnProp } from 'types/table-column.type';\r\nimport { isNullOrUndefined } from 'utils/column-helper';\r\n\r\nexport type ValueGetter = (obj: Record<string, unknown>, prop: TableColumnProp) => unknown;\r\n\r\n/**\r\n * Always returns the empty string ''\r\n * @returns {string}\r\n */\r\nexport function emptyStringGetter(): string {\r\n  return '';\r\n}\r\n\r\n/**\r\n * Returns the appropriate getter function for this kind of prop.\r\n * If prop == null, returns the emptyStringGetter.\r\n */\r\nexport function getterForProp(prop: TableColumnProp): ValueGetter {\r\n  if (isNullOrUndefined(prop)) {\r\n    return emptyStringGetter;\r\n  }\r\n\r\n  if (typeof prop === 'number') {\r\n    return numericIndexGetter;\r\n  }\r\n  // deep or simple\r\n  if (prop.indexOf('.') !== -1) {\r\n    return deepValueGetter;\r\n  }\r\n  return shallowValueGetter;\r\n}\r\n\r\n/**\r\n * Returns the value at this numeric index.\r\n * @param row array of values\r\n * @param index numeric index\r\n * @returns {any} or '' if invalid index\r\n */\r\nexport function numericIndexGetter(row: Record<string, unknown>, index: number): unknown {\r\n  if (row === null) {\r\n    return '';\r\n  }\r\n  // mimic behavior of deepValueGetter\r\n  if (!row || index === null) {\r\n    return row;\r\n  }\r\n\r\n  const value = row[index];\r\n  // eslint-disable-next-line no-undefined\r\n  if (value === null || value === undefined) {\r\n    return '';\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * Returns the value of a field.\r\n * (more efficient than deepValueGetter)\r\n * @param obj object containing the field\r\n * @param fieldName field name string\r\n * @returns {unknown}\r\n */\r\nexport function shallowValueGetter(obj: Record<string, unknown>, fieldName: string): unknown {\r\n  if (obj === null) {\r\n    return '';\r\n  }\r\n  if (!obj || !fieldName) {\r\n    return obj;\r\n  }\r\n\r\n  const value = obj[fieldName];\r\n  // eslint-disable-next-line no-undefined\r\n  if (value === null || value === undefined) {\r\n    return '';\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * Returns a deep object given a string. zoo['animal.type']\r\n * @param {object} obj\r\n * @param {string} path\r\n */\r\nexport function deepValueGetter(obj: Record<string, unknown>, path: string): unknown {\r\n  if (obj === null) {\r\n    return '';\r\n  }\r\n  if (!obj || !path) {\r\n    return obj;\r\n  }\r\n\r\n  // check if path matches a root-level field\r\n  // { \"a.b.c\": 123 }\r\n  let current = obj[path];\r\n  // eslint-disable-next-line no-undefined\r\n  if (current !== undefined) {\r\n    return current;\r\n  }\r\n\r\n  current = obj;\r\n  const split = path.split('.');\r\n\r\n  if (split.length) {\r\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\r\n    for (let i = 0; i < split.length; i++) {\r\n      current = current[split[i]] as Record<string, unknown>;\r\n\r\n      // if found undefined, return empty string\r\n      // eslint-disable-next-line no-undefined\r\n      if (current === undefined || current === null) {\r\n        return '';\r\n      }\r\n    }\r\n  }\r\n  return current;\r\n}\r\n","import { TableColumn } from 'types/table-column.type';\r\n\r\nexport interface IColumnsWidth {\r\n  left: number;\r\n  center: number;\r\n  right: number;\r\n  total: number;\r\n}\r\n\r\nexport interface IColumnsByPinRecord {\r\n  type: 'left' | 'center' | 'right';\r\n  columns: TableColumn[];\r\n}\r\n\r\n/**\r\n * Returns the columns by pin.\r\n */\r\nexport interface IColumnsByPin {\r\n  left: TableColumn[];\r\n  center: TableColumn[];\r\n  right: TableColumn[];\r\n}\r\n\r\nexport function columnsByPin(cols: TableColumn[]): IColumnsByPin {\r\n  const ret: { left: TableColumn[]; center: TableColumn[]; right: TableColumn[] } = {\r\n    left: [],\r\n    center: [],\r\n    right: [],\r\n  };\r\n\r\n  if (cols) {\r\n    for (const col of cols) {\r\n      if (col.frozenLeft) {\r\n        ret.left.push(col);\r\n      } else if (col.frozenRight) {\r\n        ret.right.push(col);\r\n      } else {\r\n        ret.center.push(col);\r\n      }\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Returns the widths of all group sets of a column\r\n */\r\nexport function columnGroupWidths(groups: IColumnsByPin, all: TableColumn[], tableWidth: number): IColumnsWidth {\r\n  const result = {\r\n    left: columnTotalWidth(groups.left),\r\n    center: columnTotalWidth(groups.center),\r\n    right: columnTotalWidth(groups.right),\r\n    total: Math.floor(columnTotalWidth(all)),\r\n  };\r\n  if (tableWidth > result.total) {\r\n    result.center += tableWidth - result.total;\r\n    result.total = tableWidth;\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Calculates the total width of all columns and their groups\r\n */\r\nexport function columnTotalWidth(columns: TableColumn[]): number {\r\n  let totalWidth = 0;\r\n\r\n  if (columns) {\r\n    for (const c of columns) {\r\n      if (c.hidden) {\r\n        continue;\r\n      }\r\n      // const has = Boolean(prop && c[prop]);\r\n      // const width = c.hidden ? 0 : has ? c[prop] : c.width;\r\n      let width = c.hidden ? 0 : c.width;\r\n      if (typeof width === 'string') {\r\n        width = parseFloat(width);\r\n      }\r\n      totalWidth = totalWidth + width;\r\n    }\r\n  }\r\n\r\n  return totalWidth;\r\n}\r\n\r\n/**\r\n * Calculates the total width of all columns and their groups\r\n */\r\nexport function columnsTotalWidth(columns: TableColumn[] /* , prop?: any */): number {\r\n  let totalWidth = 0;\r\n\r\n  for (const column of columns) {\r\n    // const has = prop && column[prop];\r\n    // totalWidth = totalWidth + (has ? column[prop] : column.width);\r\n    totalWidth = totalWidth + column.width;\r\n  }\r\n\r\n  return totalWidth;\r\n}\r\n\r\nexport function columnsByPinArr(val: TableColumn[]): Array<IColumnsByPinRecord> {\r\n  const colsByPinArr: Array<{ type: 'left' | 'center' | 'right'; columns: TableColumn[] }> = [];\r\n  const colsByPin = columnsByPin(val);\r\n\r\n  colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\r\n  colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\r\n  colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\r\n\r\n  return colsByPinArr;\r\n}\r\n","export function isArrayEqual(array1: unknown[], array2: unknown[]): boolean {\r\n  // if the other array is a falsy value, return\r\n  if (!array1 || !array2 || !Array.isArray(array1) || !Array.isArray(array2)) {\r\n    return false;\r\n  }\r\n\r\n  // compare lengths - can save a lot of time\r\n  if (array1.length !== array2.length) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0, l = array1.length; i < l; i++) {\r\n    // Check if we have nested arrays\r\n    if (array1[i] instanceof Array && array2[i] instanceof Array) {\r\n      // recurse into the nested arrays\r\n      if (!isArrayEqual(array1[i] as Array<unknown>, array2[i] as Array<unknown>)) {\r\n        return false;\r\n      }\r\n    } else if (array1[i] !== array2[i]) {\r\n      // Warning - two different object instances will never be equal: {x:20} != {x:20}\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","/**\r\n * Creates a unique object id.\r\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\r\n */\r\nexport function id(): string {\r\n  // eslint-disable-next-line no-bitwise\r\n  return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\r\n}\r\n","export enum Keys {\r\n  up = 38,\r\n  down = 40,\r\n  return = 13,\r\n  escape = 27,\r\n  left = 37,\r\n  right = 39,\r\n  pageUp = 33,\r\n  pageDown = 34,\r\n}\r\n","import { TableColumn } from 'types/table-column.type';\r\nimport { columnsByPin, columnsTotalWidth, IColumnsByPin } from './column';\r\n\r\n/**\r\n * Calculates the Total Flex Grow\r\n */\r\nfunction getTotalFlexGrow(columns: TableColumn[]) {\r\n  let totalFlexGrow = 0;\r\n\r\n  for (const c of columns) {\r\n    totalFlexGrow += c.flexGrow || 0;\r\n  }\r\n\r\n  return totalFlexGrow;\r\n}\r\n\r\n/**\r\n * Adjusts the column widths.\r\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\r\n */\r\nexport function adjustColumnWidths(allColumns: TableColumn[] = [], expectedWidth: number): void {\r\n  // if (allColumns && allColumns.length) {\r\n  //   allColumns = allColumns.filter(c => c.visible && !c.hidden);\r\n  // }\r\n  const hiddenColumns: TableColumn[] = [];\r\n  allColumns.forEach(col => {\r\n    col.hidden = false;\r\n    const width = calcRealWidth(col);\r\n    if (width !== null && width < 10) {\r\n      hiddenColumns.push(col);\r\n      col.hidden = true;\r\n      if (!col.$$oldWidth) {\r\n        col.$$oldWidth = col.width;\r\n      }\r\n      col.width = 0;\r\n    }\r\n  });\r\n  allColumns = allColumns.filter(c => c.visible && !c.hidden);\r\n\r\n  const columnsWidth = columnsTotalWidth(allColumns);\r\n  const totalFlexGrow = getTotalFlexGrow(allColumns);\r\n  const colsByGroup = columnsByPin(allColumns);\r\n\r\n  if (columnsWidth !== expectedWidth) {\r\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\r\n  }\r\n}\r\n\r\n/**\r\n * Resizes columns based on the flexGrow property, while respecting manually set widths\r\n */\r\nfunction scaleColumns(colsByGroup: IColumnsByPin, maxWidth: number, totalFlexGrow: number): void {\r\n  // calculate total width and flexgrow points for coulumns that can be resized\r\n  let column: TableColumn;\r\n  for (const attr in colsByGroup) {\r\n    for (column of colsByGroup[attr]) {\r\n      if (!column.canAutoResize) {\r\n        maxWidth -= column.width;\r\n        totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\r\n      } else {\r\n        column.width = 0;\r\n      }\r\n    }\r\n  }\r\n  const hasMinWidth = {};\r\n  let remainingWidth = maxWidth;\r\n\r\n  // resize columns until no width is left to be distributed\r\n  do {\r\n    const widthPerFlexPoint = remainingWidth / totalFlexGrow;\r\n    remainingWidth = 0;\r\n    for (const attr in colsByGroup) {\r\n      for (column of colsByGroup[attr]) {\r\n        // if the column can be resize and it hasn't reached its minimum width yet\r\n        if (column.canAutoResize && !hasMinWidth[column.prop]) {\r\n          const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\r\n          if (column.minWidth && newWidth < column.minWidth) {\r\n            remainingWidth += newWidth - column.minWidth;\r\n            column.width = column.minWidth;\r\n            hasMinWidth[column.prop] = true;\r\n          } else {\r\n            column.width = newWidth;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } while (remainingWidth !== 0);\r\n}\r\n\r\nfunction calcRealWidth(column: TableColumn): number {\r\n  if (!column.element) {\r\n    return null;\r\n  }\r\n  let w = (column.element as HTMLElement).offsetWidth;\r\n  // eslint-disable-next-line no-undefined\r\n  if (column.realWidth !== null || column.realWidth !== undefined) {\r\n    return Math.max(w, column.realWidth);\r\n  }\r\n  if (!w || w < 0) {\r\n    return w;\r\n  }\r\n  w = 0;\r\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\r\n  for (let i = 0; i < column.element.children.length; i++) {\r\n    const el = column.element.children[i];\r\n    w = Math.max(w, (el as HTMLElement).offsetWidth);\r\n  }\r\n  return w;\r\n}\r\n\r\n/**\r\n * Forces the width of the columns to\r\n * distribute equally but overflowing when necessary\r\n *\r\n * Rules:\r\n *\r\n *  - If combined withs are less than the total width of the grid,\r\n *    proportion the widths given the min / max / normal widths to fill the width.\r\n *\r\n *  - If the combined widths, exceed the total width of the grid,\r\n *    use the standard widths.\r\n *\r\n *  - If a column is resized, it should always use that width\r\n *\r\n *  - The proportional widths should never fall below min size if specified.\r\n *\r\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\r\n *    the width should use the original width; not the newly proportioned widths.\r\n */\r\nexport function forceFillColumnWidths(\r\n  allColumns: TableColumn[],\r\n  expectedWidth: number,\r\n  startIdx: number,\r\n  allowBleed: boolean,\r\n  defaultColWidth: number = 300\r\n): void {\r\n  // const hiddenColumns = allColumns.filter(c => c.hidden);\r\n  // for (const column of hiddenColumns) {\r\n  //   if(!column.$$oldWidth) {\r\n  //     column.$$oldWidth = column.width;\r\n  //   }\r\n  //   column.width = 0;\r\n  // }\r\n  const hiddenColumns: TableColumn[] = [];\r\n  allColumns.forEach(col => {\r\n    col.hidden = false;\r\n    const width = calcRealWidth(col);\r\n    if (width !== null && width < 10) {\r\n      hiddenColumns.push(col);\r\n      col.hidden = true;\r\n      if (!col.$$oldWidth) {\r\n        col.$$oldWidth = col.width;\r\n      }\r\n      col.width = 0;\r\n    }\r\n  });\r\n\r\n  allColumns = allColumns.filter(c => c.visible && !c.hidden);\r\n  const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter(c => c.canAutoResize !== false);\r\n  const averageColumnWidth = expectedWidth / columnsToResize.length;\r\n\r\n  for (const column of columnsToResize) {\r\n    if (!column.$$oldWidth) {\r\n      column.$$oldWidth = column.width;\r\n    }\r\n    column.width = averageColumnWidth;\r\n  }\r\n\r\n  let additionWidthPerColumn = 0;\r\n  let exceedsWindow = false;\r\n  let contentWidth = getContentWidth(allColumns, defaultColWidth);\r\n  let remainingWidth = expectedWidth - contentWidth;\r\n  const columnsProcessed: TableColumn[] = [];\r\n\r\n  // This loop takes care of the\r\n  do {\r\n    additionWidthPerColumn = remainingWidth / columnsToResize.length;\r\n    exceedsWindow = contentWidth >= expectedWidth;\r\n\r\n    for (const column of columnsToResize) {\r\n      if (exceedsWindow && allowBleed) {\r\n        column.width = column.$$oldWidth || column.width || defaultColWidth;\r\n      } else {\r\n        const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\r\n\r\n        if (column.minWidth && newSize < column.minWidth) {\r\n          column.width = column.minWidth;\r\n          columnsProcessed.push(column);\r\n        } else if (column.maxWidth && newSize > column.maxWidth) {\r\n          column.width = column.maxWidth;\r\n          columnsProcessed.push(column);\r\n        } else {\r\n          column.width = newSize;\r\n        }\r\n      }\r\n\r\n      column.width = Math.max(0, column.width);\r\n    }\r\n\r\n    contentWidth = getContentWidth(allColumns);\r\n    remainingWidth = expectedWidth - contentWidth;\r\n    removeProcessedColumns(columnsToResize, columnsProcessed);\r\n  } while (remainingWidth > 0 && columnsToResize.length !== 0);\r\n}\r\n\r\n/**\r\n * Remove the processed columns from the current active columns.\r\n */\r\nfunction removeProcessedColumns(columnsToResize: TableColumn[], columnsProcessed: TableColumn[]) {\r\n  for (const column of columnsProcessed) {\r\n    const index = columnsToResize.indexOf(column);\r\n    columnsToResize.splice(index, 1);\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the width of the columns\r\n */\r\nfunction getContentWidth(allColumns: TableColumn[], defaultColWidth: number = 300): number {\r\n  let contentWidth = 0;\r\n  for (const column of allColumns) {\r\n    contentWidth += column.width || defaultColWidth;\r\n  }\r\n  return contentWidth;\r\n}\r\n","/* eslint-disable no-undefined */\r\nimport { camelCase } from './camel-case';\r\n\r\nconst cache: Record<string, string> = {};\r\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\r\n\r\n// Get Prefix\r\n// http://davidwalsh.name/vendor-prefix\r\n// eslint-disable-next-line prettier/prettier\r\nconst prefix = (function () {\r\n  const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\r\n  let match: RegExpMatchArray = null;\r\n  if (styles) {\r\n    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\r\n    match = Object.keys(styles)\r\n      .join('')\r\n      .match(/-(moz|webkit|ms)-/);\r\n  }\r\n  // const match: CSSStyleDeclaration = typeof styles !== 'undefined' ?\r\n  //   Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) : null;\r\n  const pre = match !== null ? match[1] : undefined;\r\n  const dom = typeof pre !== 'undefined' ? new RegExp('(' + pre + ')', 'i').exec('WebKit|Moz|MS|O')[1] : undefined;\r\n\r\n  return dom\r\n    ? {\r\n        dom,\r\n        lowercase: pre,\r\n        css: `-${pre}-`,\r\n        js: pre[0].toUpperCase() + pre.substr(1),\r\n      }\r\n    : undefined;\r\n})();\r\n\r\nexport function getVendorPrefixedName(property: string): string {\r\n  const name = camelCase(property);\r\n\r\n  if (!cache[name]) {\r\n    if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\r\n      cache[name] = prefix.css + property;\r\n    } else if (testStyle[property] !== undefined) {\r\n      cache[name] = property;\r\n    }\r\n  }\r\n\r\n  return cache[name];\r\n}\r\n","import { IGroupedRows } from 'types/grouped-rows';\r\n\r\n/**\r\n * This object contains the cache of the various row heights that are present inside\r\n * the data table.   Its based on Fenwick tree data structure that helps with\r\n * querying sums that have time complexity of log n.\r\n *\r\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\r\n * https://github.com/mikolalysenko/fenwick-tree\r\n *\r\n */\r\ninterface IRowsHeightCache {\r\n  rows: Record<string, unknown>[];\r\n  rowHeight: number | ((row: Record<string, unknown>, index?: number) => number);\r\n  rowDetailHeight: number | ((row: Record<string, unknown>, index?: number) => number);\r\n  groupRowHeight: number | ((row: Record<string, unknown>, index?: number) => number);\r\n  externalVirtual: boolean;\r\n  rowCount: number;\r\n  rowIndexes: Map<Record<string, unknown>, number>;\r\n  rowExpansions: Map<Record<string, unknown> | IGroupedRows, boolean>;\r\n}\r\n\r\nexport class RowHeightCache {\r\n  /**\r\n   * Tree Array stores the cumulative information of the row heights to perform efficient\r\n   * range queries and updates.  Currently the tree is initialized to the base row\r\n   * height instead of the detail row height.\r\n   */\r\n  // private treeArray: number[] = [];\r\n  private heights: Array<{ accumulator: number; height: number }> = [];\r\n\r\n  /**\r\n   * Clear the Tree array.\r\n   */\r\n  clearCache(): void {\r\n    // this.treeArray = [];\r\n    this.heights = [];\r\n  }\r\n\r\n  /**\r\n   * Initialize the Fenwick tree with row Heights.\r\n   *\r\n   * @param rows The array of rows which contain the expanded status.\r\n   * @param rowHeight The row height.\r\n   * @param rowDetailHeight The detail row height.\r\n   */\r\n  initCache(details: IRowsHeightCache): void {\r\n    const { rows, rowHeight, rowDetailHeight, groupRowHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } =\r\n      details;\r\n\r\n    if (typeof rowHeight !== 'function' && isNaN(rowHeight)) {\r\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\r\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\r\n    }\r\n\r\n    // Add this additional guard in case rowDetailHeight is set to 'auto' as it wont work.\r\n    if (typeof rowDetailHeight !== 'function' && isNaN(rowDetailHeight)) {\r\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'rowDetailHeight' is a\r\n        valid number or function value: (${rowDetailHeight}) when 'scrollbarV' is enabled.`);\r\n    }\r\n\r\n    const n = externalVirtual ? rowCount : rows.length;\r\n    // this.treeArray = new Array(n);\r\n    this.heights = new Array<{ accumulator: number; height: number }>(n);\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      // this.treeArray[i] = 0;\r\n      this.heights[i] = null;\r\n    }\r\n\r\n    let accumulator = 0;\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const row = rows[i];\r\n      let currentRowHeight: number;\r\n      if (row && row.__isGroup) {\r\n        if (typeof groupRowHeight === 'function') {\r\n          currentRowHeight = groupRowHeight(row);\r\n        } else {\r\n          currentRowHeight = groupRowHeight;\r\n        }\r\n      } else if (typeof rowHeight === 'function') {\r\n        currentRowHeight = rowHeight(row);\r\n      } else {\r\n        currentRowHeight = rowHeight;\r\n      }\r\n\r\n      // Add the detail row height to the already expanded rows.\r\n      // This is useful for the table that goes through a filter or sort.\r\n      const expanded = rowExpansions.get(row);\r\n      if (row && expanded) {\r\n        if (typeof rowDetailHeight === 'function') {\r\n          const index = rowIndexes.get(row);\r\n          currentRowHeight += rowDetailHeight(row, index);\r\n        } else {\r\n          currentRowHeight += rowDetailHeight;\r\n        }\r\n      }\r\n      // this.updateTree(i, currentRowHeight);\r\n      accumulator += currentRowHeight;\r\n      this.heights[i] = { accumulator, height: currentRowHeight };\r\n    }\r\n    // this.heights = this.initHeights(details);\r\n  }\r\n\r\n  /**\r\n   * Given the ScrollY position i.e. sum, provide the rowIndex\r\n   * that is present in the current view port.  Below handles edge cases.\r\n   */\r\n  getRowIndex(scrollY: number): number {\r\n    if (scrollY === 0) {\r\n      return 0;\r\n    }\r\n    const result = this.calcRowIndex(scrollY);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * When a row is expanded or rowHeight is changed, update the height.  This can\r\n   * be utilized in future when Angular Data table supports dynamic row heights.\r\n   */\r\n  update(atRowIndex: number, byRowHeight: number): void {\r\n    if (!this.heights || !this.heights.length) {\r\n      return;\r\n      // throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\r\n      //   Row Height cache not initialized.`);\r\n    }\r\n\r\n    const n = this.heights.length;\r\n\r\n    while (atRowIndex < n) {\r\n      this.heights[atRowIndex].accumulator += byRowHeight;\r\n      atRowIndex++;\r\n    }\r\n  }\r\n\r\n  // update(atRowIndex: number, byRowHeight: number): void {\r\n  //   if (!this.treeArray.length) {\r\n  //     throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\r\n  //       Row Height cache not initialized.`);\r\n  //   }\r\n\r\n  //   const n = this.treeArray.length;\r\n  //   atRowIndex |= 0;\r\n\r\n  //   while(atRowIndex < n) {\r\n  //     this.treeArray[atRowIndex] += byRowHeight;\r\n  //     atRowIndex |= (atRowIndex + 1);\r\n  //   }\r\n  // }\r\n\r\n  /**\r\n   * Range Sum query from 1 to the rowIndex\r\n   */\r\n  query(atIndex: number): number {\r\n    if (atIndex < 0) {\r\n      return 0;\r\n    }\r\n    return this.heights[atIndex]?.accumulator;\r\n  }\r\n\r\n  queryWithHeight(atIndex: number): { offsetY: number; height: number } {\r\n    if (atIndex < 0) {\r\n      return null;\r\n    }\r\n    const result = this.heights[atIndex];\r\n    if (!result) {\r\n      return null;\r\n    }\r\n    return { offsetY: result.accumulator, height: result.height };\r\n  }\r\n\r\n  // query(atIndex: number): number {\r\n  //   if (!this.treeArray.length) {\r\n  //     throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\r\n  //   }\r\n\r\n  //   let sum = 0;\r\n  //   atIndex |= 0;\r\n\r\n  //   while(atIndex >= 0) {\r\n  //     sum += this.treeArray[atIndex];\r\n  //     atIndex = (atIndex & (atIndex + 1)) - 1;\r\n  //   }\r\n\r\n  //   return sum;\r\n  // }\r\n\r\n  /**\r\n   * Find the total height between 2 row indexes\r\n   */\r\n  queryBetween(atIndexA: number, atIndexB: number): number {\r\n    return this.query(atIndexB) - this.query(atIndexA - 1);\r\n  }\r\n\r\n  /**\r\n   * Given the ScrollY position i.e. sum, provide the rowIndex\r\n   * that is present in the current view port.\r\n   */\r\n  private calcRowIndex(sum: number): number {\r\n    if (!this.heights.length) {\r\n      return 0;\r\n    }\r\n\r\n    if (this.heights[this.heights.length - 1].accumulator < sum) {\r\n      return this.heights.length;\r\n    }\r\n\r\n    let pos = -1;\r\n    const dataLength = this.heights.length;\r\n\r\n    for (let i = 0; i < dataLength; i++) {\r\n      if (this.heights[i].accumulator >= sum) {\r\n        pos = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return pos;\r\n  }\r\n\r\n  // private calcRowIndex(sum: number): number {\r\n  //   if(!this.treeArray.length) return 0;\r\n\r\n  //   let pos = -1;\r\n  //   const dataLength = this.treeArray.length;\r\n\r\n  //   // Get the highest bit for the block size.\r\n  //   const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\r\n\r\n  //   for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\r\n  //     const nextPos = pos + blockSize;\r\n  //     if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\r\n  //       sum -= this.treeArray[nextPos];\r\n  //       pos = nextPos;\r\n  //     }\r\n  //   }\r\n\r\n  //   return pos + 1;\r\n  // }\r\n\r\n  // private initHeights(details: any) {\r\n  //   const { rows, rowHeight, rowDetailHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } = details;\r\n  //   const isFn = typeof rowHeight === 'function';\r\n  //   const isDetailFn = typeof rowDetailHeight === 'function';\r\n\r\n  //   if (!isFn && isNaN(rowHeight)) {\r\n  //     throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\r\n  //       valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\r\n  //   }\r\n\r\n  //   // Add this additional guard in case rowDetailHeight is set to 'auto' as it wont work.\r\n  //   if (!isDetailFn && isNaN(rowDetailHeight)) {\r\n  //     throw new Error(`Row Height cache initialization failed. Please ensure that 'rowDetailHeight' is a\r\n  //       valid number or function value: (${rowDetailHeight}) when 'scrollbarV' is enabled.`);\r\n  //   }\r\n  //   const n = externalVirtual ? rowCount : rows.length;\r\n  //   const heights = new Array(n);\r\n\r\n  //   let accumulator = 0;\r\n  //   for (let i = 0; i < n; ++i) {\r\n  //     const row = rows[i];\r\n  //     let currentRowHeight = rowHeight;\r\n  //     if(isFn) {\r\n  //       currentRowHeight = rowHeight(row);\r\n  //     }\r\n\r\n  //     // Add the detail row height to the already expanded rows.\r\n  //     // This is useful for the table that goes through a filter or sort.\r\n  //     const expanded = rowExpansions.get(row);\r\n  //     if(row && expanded === 1) {\r\n  //       if(isDetailFn) {\r\n  //         const index = rowIndexes.get(row);\r\n  //         currentRowHeight += rowDetailHeight(row, index);\r\n  //       } else {\r\n  //         currentRowHeight += rowDetailHeight;\r\n  //       }\r\n  //     }\r\n  //     accumulator += currentRowHeight;\r\n  //     heights[i] = { accumulator, height: currentRowHeight };\r\n  //   }\r\n  //   return heights;\r\n  // }\r\n}\r\n","import { SortType } from 'types/sort.type';\r\nimport { SortDirection } from 'types/sort-direction.type';\r\nimport { ISortPropDir } from 'types/sort-prop-dir.type';\r\nimport { TableColumn, TComparator } from 'types/table-column.type';\r\nimport { getterForProp } from './column-prop-getters';\r\n/**\r\n * Gets the next sort direction\r\n */\r\nexport function nextSortDir(sortType: SortType, current: SortDirection): SortDirection | undefined {\r\n  if (sortType === SortType.single) {\r\n    if (current === SortDirection.asc) {\r\n      return SortDirection.desc;\r\n    }\r\n    return SortDirection.asc;\r\n  }\r\n  if (!current) {\r\n    return SortDirection.asc;\r\n  }\r\n  if (current === SortDirection.asc) {\r\n    return SortDirection.desc;\r\n  }\r\n  if (current === SortDirection.desc) {\r\n    // eslint-disable-next-line no-undefined\r\n    return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Adapted from fueld-ui on 6/216\r\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\r\n */\r\nexport function orderByComparator(a: unknown, b: unknown): number {\r\n  if (a === null || typeof a === 'undefined') {\r\n    a = 0;\r\n  }\r\n  if (b === null || typeof b === 'undefined') {\r\n    b = 0;\r\n  }\r\n  if (a instanceof Date && b instanceof Date) {\r\n    if (a < b) {\r\n      return -1;\r\n    }\r\n    if (a > b) {\r\n      return 1;\r\n    }\r\n  } else if (\r\n    isNaN(parseFloat(a as string)) ||\r\n    !isFinite(a as number) ||\r\n    isNaN(parseFloat(b as string)) ||\r\n    !isFinite(b as number)\r\n  ) {\r\n    // Convert to string in case of a=0 or b=0\r\n    a = String(a);\r\n    b = String(b);\r\n    // Isn't a number so lowercase the string to properly compare\r\n    if ((a as string).toLowerCase() < (b as string).toLowerCase()) {\r\n      return -1;\r\n    }\r\n    if ((a as string).toLowerCase() > (b as string).toLowerCase()) {\r\n      return 1;\r\n    }\r\n  } else {\r\n    // Parse strings as numbers to compare properly\r\n    if (parseFloat(a as string) < parseFloat(b as string)) {\r\n      return -1;\r\n    }\r\n    if (parseFloat(a as string) > parseFloat(b as string)) {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  // equal each other\r\n  return 0;\r\n}\r\n\r\n/**\r\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\r\n * does not sort the `rows` argument in place\r\n */\r\nexport function sortRows(\r\n  rows: Record<string, unknown>[],\r\n  columns: TableColumn[],\r\n  dirs: ISortPropDir[]\r\n): Record<string, unknown>[] {\r\n  if (!rows) {\r\n    return [];\r\n  }\r\n  if (!dirs || !dirs.length) {\r\n    return [...rows];\r\n  }\r\n\r\n  /**\r\n   * record the row ordering of results from prior sort operations (if applicable)\r\n   * this is necessary to guarantee stable sorting behavior\r\n   */\r\n  const rowToIndexMap = new Map<Record<string, unknown>, number>();\r\n  rows.forEach((row, index) => rowToIndexMap.set(row, index));\r\n  const temp = [...rows];\r\n  const cols: Record<string, TComparator> = {};\r\n  if (Array.isArray(columns)) {\r\n    columns.forEach(col => {\r\n      if (col.comparator && typeof col.comparator === 'function') {\r\n        cols[col.prop] = col.comparator;\r\n      }\r\n    });\r\n  }\r\n\r\n  // cache valueGetter and compareFn so that they\r\n  // do not need to be looked-up in the sort function body\r\n  const cachedDirs = dirs.map(dir => {\r\n    const prop = dir.prop;\r\n    return {\r\n      prop,\r\n      dir: dir.dir,\r\n      valueGetter: getterForProp(prop),\r\n      compareFn: cols[prop] || orderByComparator,\r\n    };\r\n  });\r\n\r\n  return temp.sort((rowA: Record<string, unknown>, rowB: Record<string, unknown>) => {\r\n    for (const cachedDir of cachedDirs) {\r\n      // Get property and valuegetters for column to be sorted\r\n      const { prop, valueGetter } = cachedDir;\r\n      // Get A and B cell values from rows based on properties of the columns\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n      const propA = valueGetter(rowA, prop);\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n      const propB = valueGetter(rowB, prop);\r\n\r\n      // Compare function gets five parameters:\r\n      // Two cell values to be compared as propA and propB\r\n      // Two rows corresponding to the cells as rowA and rowB\r\n      // Direction of the sort for this column as SortDirection\r\n      // Compare can be a standard JS comparison function (a,b) => -1|0|1\r\n      // as additional parameters are silently ignored. The whole row and sort\r\n      // direction enable more complex sort logic.\r\n      const comparison =\r\n        cachedDir.dir !== SortDirection.desc\r\n          ? cachedDir.compareFn(propA as string, propB as string, rowA, rowB, cachedDir.dir)\r\n          : -cachedDir.compareFn(propA as string, propB as string, rowA, rowB, cachedDir.dir);\r\n\r\n      // Don't return 0 yet in case of needing to sort by next property\r\n      if (comparison !== 0) {\r\n        return comparison;\r\n      }\r\n    }\r\n\r\n    if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB))) {\r\n      return 0;\r\n    }\r\n\r\n    /**\r\n     * all else being equal, preserve original order of the rows (stable sort)\r\n     */\r\n    return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\r\n  });\r\n}\r\n","/**\r\n * Throttle a function\r\n */\r\nexport function throttle(\r\n  func: (...args: Array<unknown>) => unknown,\r\n  wait: number,\r\n  options?: { leading?: boolean; trailing?: boolean }\r\n): (...args: Array<unknown>) => unknown {\r\n  options = options || {};\r\n  let context: unknown;\r\n  let args: IArguments;\r\n  let result: unknown;\r\n  let timeout: number = null;\r\n  let previous = 0;\r\n\r\n  function later() {\r\n    previous = options.leading === false ? 0 : Number(new Date());\r\n    timeout = null;\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n    result = func.apply(context, args);\r\n  }\r\n\r\n  // eslint-disable-next-line prettier/prettier\r\n  return function (this: unknown) {\r\n    const now = Number(new Date());\r\n\r\n    if (!previous && options.leading === false) {\r\n      previous = now;\r\n    }\r\n\r\n    const remaining = wait - (now - previous);\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n    context = this;\r\n    // eslint-disable-next-line prefer-rest-params\r\n    args = arguments;\r\n\r\n    if (remaining <= 0) {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n      previous = now;\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n      result = func.apply(context, args);\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining) as unknown as number;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return result;\r\n  };\r\n}\r\n\r\n/**\r\n * Throttle decorator\r\n *\r\n *  class MyClass {\r\n *    throttleable(10)\r\n *    myFn() { ... }\r\n *  }\r\n */\r\nexport function throttleable(duration: number, options?: { leading?: boolean; trailing?: boolean }) {\r\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n  return function innerDecorator(\r\n    target: unknown,\r\n    key: PropertyKey,\r\n    descriptor: PropertyDescriptor\r\n  ): PropertyDescriptor {\r\n    return {\r\n      configurable: true,\r\n      enumerable: descriptor.enumerable,\r\n      get: function getter() {\r\n        Object.defineProperty(this, key, {\r\n          configurable: true,\r\n          enumerable: descriptor.enumerable,\r\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n          value: throttle(descriptor.value as (...args: Array<unknown>) => unknown, duration, options),\r\n        });\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\r\n        return this[key];\r\n      },\r\n    };\r\n  };\r\n}\r\n","/* eslint-disable no-undefined */\r\nimport { camelCase } from './camel-case';\r\nimport { getVendorPrefixedName } from './prefixes';\r\n\r\n// browser detection and prefixing tools\r\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\r\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\r\nconst hasCSSTransforms = typeof window !== 'undefined' ? Boolean(getVendorPrefixedName('transform')) : undefined;\r\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? Boolean(getVendorPrefixedName('perspective')) : undefined;\r\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\r\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\r\n\r\nexport function translateXY(styles: Record<string, string>, x: number, y: number): void {\r\n  if (typeof transform !== 'undefined' && hasCSSTransforms) {\r\n    if (!isSafari && hasCSS3DTransforms) {\r\n      styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\r\n      styles[backfaceVisibility] = 'hidden';\r\n    } else {\r\n      styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\r\n    }\r\n  } else {\r\n    styles.top = `${y}px`;\r\n    styles.left = `${x}px`;\r\n  }\r\n}\r\n","import { TableColumnProp } from '../types/table-column.type';\r\nimport { getterForProp } from './column-prop-getters';\r\n\r\nexport type OptionalValueGetter = (row: Record<string, unknown>) => unknown | undefined;\r\nexport function optionalGetterForProp(prop: TableColumnProp): OptionalValueGetter {\r\n  return prop && (row => getterForProp(prop)(row, prop));\r\n}\r\n\r\n/**\r\n * This functions rearrange items by their parents\r\n * Also sets the level value to each of the items\r\n *\r\n * Note: Expecting each item has a property called parentId\r\n * Note: This algorithm will fail if a list has two or more items with same ID\r\n * NOTE: This algorithm will fail if there is a deadlock of relationship\r\n *\r\n * For example,\r\n *\r\n * Input\r\n *\r\n * id -> parent\r\n * 1  -> 0\r\n * 2  -> 0\r\n * 3  -> 1\r\n * 4  -> 1\r\n * 5  -> 2\r\n * 7  -> 8\r\n * 6  -> 3\r\n *\r\n *\r\n * Output\r\n * id -> level\r\n * 1      -> 0\r\n * --3    -> 1\r\n * ----6  -> 2\r\n * --4    -> 1\r\n * 2      -> 0\r\n * --5    -> 1\r\n * 7     -> 8\r\n *\r\n *\r\n * @param rows\r\n *\r\n */\r\nexport function groupRowsByParents(\r\n  rows: Array<{ level: number; treeStatus?: string }>,\r\n  from?: OptionalValueGetter,\r\n  to?: OptionalValueGetter,\r\n  lazyTree: boolean = false\r\n): Record<string, unknown>[] {\r\n  if (!rows) {\r\n    return rows;\r\n  }\r\n  if (from && to) {\r\n    const nodeById: Record<string | number, TreeNode> = {};\r\n    const l = rows.length;\r\n    let node: TreeNode | null = null;\r\n\r\n    nodeById[0] = new TreeNode(); // that's the root node\r\n\r\n    const uniqIDs: Array<unknown> = rows.reduce((arr, item) => {\r\n      const toValue = to(item);\r\n      if (arr.indexOf(toValue) === -1) {\r\n        arr.push(toValue);\r\n      }\r\n      return arr as Array<unknown>;\r\n    }, []);\r\n\r\n    for (let i = 0; i < l; i++) {\r\n      // make TreeNode objects for each item\r\n      nodeById[to(rows[i]) as string | number] = new TreeNode(rows[i]);\r\n    }\r\n    let notResolvedNodes = [];\r\n    for (let i = 0; i < l; i++) {\r\n      // link all TreeNode objects\r\n      node = nodeById[to(rows[i]) as string | number];\r\n      let parent = 0;\r\n      const fromValue = from(node.row);\r\n      if (Boolean(fromValue) && uniqIDs.indexOf(fromValue) > -1) {\r\n        parent = fromValue as number;\r\n      }\r\n      node.parent = nodeById[parent];\r\n      // eslint-disable-next-line no-undefined\r\n      if (node.parent.row['level'] === null || node.parent.row['level'] === undefined) {\r\n        notResolvedNodes.push(node);\r\n      } else {\r\n        node.row['level'] = node.parent.row['level'] + 1;\r\n        node.parent.children.push(node);\r\n      }\r\n    }\r\n    const temp = [];\r\n    do {\r\n      temp.length = 0;\r\n      while (notResolvedNodes.length) {\r\n        node = notResolvedNodes.pop();\r\n        // eslint-disable-next-line no-undefined\r\n        if (node.parent.row['level'] === null || node.parent.row['level'] === undefined) {\r\n          temp.push(node);\r\n        } else {\r\n          node.row['level'] = node.parent.row['level'] + 1;\r\n          node.parent.children.push(node);\r\n        }\r\n      }\r\n      notResolvedNodes = [...temp];\r\n    } while (notResolvedNodes.length);\r\n\r\n    let resolvedRows: Record<string, unknown>[] = [];\r\n    nodeById[0].flatten(\r\n      function () {\r\n        resolvedRows = [...resolvedRows, (this as TreeNode).row];\r\n      },\r\n      true,\r\n      lazyTree\r\n    );\r\n    return resolvedRows;\r\n  }\r\n  return rows;\r\n}\r\n\r\nclass TreeNode {\r\n  public row: { level: number; treeStatus?: string };\r\n  public parent: TreeNode;\r\n  public children: Array<TreeNode>;\r\n\r\n  constructor(row: { level: number; treeStatus?: string } | null = null) {\r\n    if (!row) {\r\n      row = {\r\n        level: -1,\r\n        treeStatus: 'expanded',\r\n      };\r\n    }\r\n    this.row = row;\r\n    this.parent = null;\r\n    this.children = [];\r\n  }\r\n\r\n  flatten(f: () => void, recursive: boolean, lazyTree: boolean = false): void {\r\n    if (this.row['treeStatus'] === 'expanded') {\r\n      for (let i = 0, l = this.children.length; i < l; i++) {\r\n        const child = this.children[i];\r\n        if (!lazyTree && (!child.children || !child.children.length)) {\r\n          child.row['treeStatus'] = 'disabled';\r\n        } else if (\r\n          (child.children && child.children.length && !child.row['treeStatus']) ||\r\n          child.row['treeStatus'] === 'disabled'\r\n        ) {\r\n          child.row['treeStatus'] = 'collapsed';\r\n        }\r\n        f.call(child);\r\n        if (recursive) {\r\n          child.flatten(f, recursive, lazyTree);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { render, staticRenderFns } from \"./responsive.component.vue?vue&type=template&id=4a515a8f&scoped=true&\"\nimport script from \"./responsive.component.vue?vue&type=script&lang=ts&\"\nexport * from \"./responsive.component.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./responsive.component.vue?vue&type=style&index=0&id=4a515a8f&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4a515a8f\",\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./scrolling-server.component.vue?vue&type=template&id=6092e438&\"\nimport script from \"./scrolling-server.component.vue?vue&type=script&lang=ts&\"\nexport * from \"./scrolling-server.component.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./scrolling-server.component.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./body-cell.component.html?vue&type=template&id=6cc6b201&\"\nimport script from \"./body-cell.component.ts?vue&type=script&lang=js&\"\nexport * from \"./body-cell.component.ts?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./body-row-wrapper.component.vue?vue&type=template&id=1264ca30&scoped=true&\"\nimport script from \"./body-row-wrapper.component.ts?vue&type=script&lang=js&\"\nexport * from \"./body-row-wrapper.component.ts?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1264ca30\",\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./body-row.component.vue?vue&type=template&id=e9b8d236&\"\nimport script from \"./body-row.component.ts?vue&type=script&lang=js&\"\nexport * from \"./body-row.component.ts?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./body.component.html?vue&type=template&id=40cb394c&\"\nimport script from \"./body.component.ts?vue&type=script&lang=js&\"\nexport * from \"./body.component.ts?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./datatable.component.html?vue&type=template&id=5b0fdcf6&\"\nimport script from \"./datatable.component.ts?vue&type=script&lang=js&\"\nexport * from \"./datatable.component.ts?vue&type=script&lang=js&\"\nimport style0 from \"./datatable.component.scss?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../../node_modules/source-map-loader/dist/cjs.js!./body-cell.component.ts?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../../node_modules/source-map-loader/dist/cjs.js!./body-cell.component.ts?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../../node_modules/source-map-loader/dist/cjs.js!./body-row-wrapper.component.ts?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../../node_modules/source-map-loader/dist/cjs.js!./body-row-wrapper.component.ts?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../../node_modules/source-map-loader/dist/cjs.js!./body-row.component.ts?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../../node_modules/source-map-loader/dist/cjs.js!./body-row.component.ts?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../../node_modules/source-map-loader/dist/cjs.js!./body.component.ts?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../../node_modules/source-map-loader/dist/cjs.js!./body.component.ts?vue&type=script&lang=js&\"","import mod from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../node_modules/source-map-loader/dist/cjs.js!./datatable.component.ts?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../node_modules/source-map-loader/dist/cjs.js!./datatable.component.ts?vue&type=script&lang=js&\"","import mod from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./responsive.component.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./responsive.component.vue?vue&type=script&lang=ts&\"","import mod from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./scrolling-server.component.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-6[0].rules[0]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./scrolling-server.component.vue?vue&type=script&lang=ts&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_vm._v(\" \"),_c('ngx-datatable',{ref:\"table\",staticClass:\"material expandable\",attrs:{\"columnMode\":\"force\",\"headerHeight\":50,\"footerHeight\":50,\"rowHeight\":50,\"rowDetailHeight\":\"50\",\"scrollbarV\":true,\"rows\":_vm.rows},on:{\"page\":function($event){return _vm.onPage($event)}},scopedSlots:_vm._u([{key:\"rowDetail\",fn:function(scope){return [_c('div',{staticStyle:{\"padding-left\":\"60px\",\"font-size\":\"14px\"}},[_c('div',[_vm._v(_vm._s(scope.row.gender)+\", \"+_vm._s(scope.row.age))])])]}}])},[_vm._v(\" \"),_c('ngx-datatable-column',{attrs:{\"width\":50,\"resizeable\":false,\"sortable\":false,\"draggable\":false,\"canAutoResize\":false},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return (scope.row)?[_c('a',{staticClass:\"desktop-hidden\",class:{ 'datatable-icon-right': !scope.expanded, 'datatable-icon-down': scope.expanded },attrs:{\"href\":\"#\",\"title\":\"Expand/Collapse Row\"},on:{\"click\":function($event){return _vm.toggleExpandRow(scope.row)}}})]:undefined}}],null,true)}),_vm._v(\" \"),_c('ngx-datatable-column',{attrs:{\"name\":\"Name\",\"flexGrow\":3,\"minWidth\":200},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return (scope.row)?[_vm._v(\"\\n        \"+_vm._s(scope.row.name)+\"\\n      \")]:undefined}}],null,true)}),_vm._v(\" \"),_c('ngx-datatable-column',{staticClass:\"mobile-hidden\",attrs:{\"name\":\"Gender\",\"flexGrow\":1},scopedSlots:_vm._u([{key:\"header\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.column.name))])]}},{key:\"default\",fn:function(scope){return [(scope.row)?_c('span',[_vm._v(_vm._s(scope.row.gender))]):_vm._e()]}}])}),_vm._v(\" \"),_c('ngx-datatable-column',{staticClass:\"mobile-hidden\",attrs:{\"name\":\"Age\",\"flexGrow\":1},scopedSlots:_vm._u([{key:\"header\",fn:function(scope){return [_c('span',[_c('b',[_vm._v(_vm._s(scope.column.name))])])]}},{key:\"default\",fn:function(scope){return [(scope.row)?_c('span',[_vm._v(_vm._s(scope.row.age))]):_vm._e()]}}])})],1),_vm._v(\" \"),_vm._m(1)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_vm._v(\"\\n    Responsive Demo\\n    \"),_c('small',[_c('a',{attrs:{\"href\":\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/responsive.component.vue\",\"target\":\"_blank\"}},[_vm._v(\"\\n        Source\\n      \")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"margin\":\"50px\"}},[_vm._v(\"\\n    This demo combines the features used in the \"),_c('i',[_vm._v(\"Row Detail\")]),_vm._v(\" Rows demo, \"),_c('i',[_vm._v(\"Flex\")]),_vm._v(\" Column demo, and the\\n    \"),_c('i',[_vm._v(\"Inline\")]),_vm._v(\"\\n    Templates demo. When your browser is at 800px, the gender and age columns will be hidden and will appear in the\\n    row detail view.\\n  \")])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_vm._v(\" \"),_c('ngx-datatable',{staticClass:\"material server-scrolling-demo\",attrs:{\"rows\":_vm.rows,\"columns\":[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }],\"columnMode\":\"force\",\"headerHeight\":_vm.headerHeight,\"rowHeight\":_vm.rowHeight,\"loadingIndicator\":_vm.isLoading,\"scrollbarV\":true},on:{\"scroll\":function($event){return _vm.onScroll($event.offsetY)}}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_vm._v(\"\\n    Server-side Scrolling\\n    \"),_c('small',[_c('a',{attrs:{\"href\":\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/paging/scrolling-server.component.ts\",\"target\":\"_blank\"}},[_vm._v(\"Source\")])])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.column.visible),expression:\"column.visible\"}],staticClass:\"datatable-body-cell\",class:_vm.cssClasses,style:(_vm.styles),attrs:{\"id\":((_vm.column.prop) + \"-\" + (_vm.column.$$id)),\"tabindex\":_vm.tabIndex},on:{\"dblclick\":_vm.onDblClick,\"click\":_vm.onClick,\"keydown\":_vm.onKeyDown,\"mouseenter\":_vm.onMouseEnter,\"focus\":_vm.onFocus,\"blur\":_vm.onBlur}},[_c('div',{staticClass:\"datatable-body-cell-label\",style:(_vm.column.isTreeColumn ? _vm.marginCellStyle: null)},[(_vm.isCheckboxable)?_c('label',{staticClass:\"datatable-checkbox\"},[_c('input',{attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":_vm.rowContext.isChecked},on:{\"click\":_vm.onCheckboxChange}})]):_vm._e(),_vm._v(\" \"),(_vm.column.isTreeColumn)?[(!_vm.column.treeToggleTemplate)?_c('button',{staticClass:\"datatable-tree-button\",attrs:{\"disabled\":_vm.rowContext.treeStatus==='disabled'},on:{\"click\":function($event){$event.stopPropagation();return _vm.onTreeAction.apply(null, arguments)},\"dblclick\":function($event){$event.stopPropagation();}}},[_c('span',[(_vm.rowContext.row.treeStatus==='loading')?_c('i',{staticClass:\"icon datatable-icon-collapse\"}):(_vm.rowContext.treeStatus==='collapsed')?_c('i',{staticClass:\"icon datatable-icon-right\"}):(_vm.rowContext.treeStatus==='expanded')?_c('i',{staticClass:\"icon datatable-icon-down\"}):_c('i',{staticClass:\"icon icon-disabled datatable-icon-down\"})])]):_vm._e(),_vm._v(\" \"),_vm._t(\"tree-toggle\")]:_vm._e(),_vm._v(\" \"),_vm._t(\"default\",function(){return [_c('span',{attrs:{\"title\":_vm.sanitizedValue},domProps:{\"innerHTML\":_vm._s(_vm.value)}})]},null,{ \r\n                 row: _vm.rowContext.row ? _vm.rowContext.row : {},\r\n                 column: _vm.column,\r\n                 rowIndex: _vm.rowContext.rowIndex, \r\n                 group: _vm.rowContext.group, \r\n                 expanded: _vm.rowContext.expanded,\r\n                 value: _vm.value })],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"datatable-body\",style:(_vm.styleObject)},[_c('datatable-selection',{ref:\"selector\",attrs:{\"selected\":_vm.selected,\"checked\":_vm.checked,\"rows\":_vm.rows,\"pageSize\":_vm.pageSize,\"selectCheck\":_vm.selectCheck,\"selectEnabled\":_vm.selectEnabled,\"selectionType\":_vm.selectionType,\"checkMode\":_vm.checkMode,\"rowIdentity\":_vm.rowIdentity,\"scroller\":_vm.scroller,\"bodyHeight\":_vm.bodyHeight,\"beforeSelectRowCheck\":_vm.beforeSelectRowCheck},on:{\"select\":_vm.onSelect,\"check\":function($event){return _vm.$emit('check', $event)},\"activate\":function($event){return _vm.$emit('activate', $event)}}},[(_vm.loadingIndicator)?_c('datatable-progress'):_vm._e(),_vm._v(\" \"),_c('datatable-scroller',{ref:\"scroller\",attrs:{\"scrollbarV\":_vm.scrollbarV,\"scrollbarH\":_vm.scrollbarH,\"scrollHeight\":_vm.scrollHeight,\"scrollWidth\":_vm.scrollWidth},on:{\"setup\":_vm.onScrollSetup,\"scroll\":_vm.onBodyScroll,\"change-width\":_vm.onScrollerWidthChanged}},[(_vm.summaryRow && _vm.summaryPosition === 'top')?_c('datatable-summary-row',{staticClass:\"datatable-summary-row\",attrs:{\"rowHeight\":_vm.summaryHeight,\"offsetX\":_vm.offsetX,\"innerWidth\":_vm.innerWidth,\"rows\":_vm.rows,\"columns\":_vm.columns,\"columnsByPin\":_vm.columnsByPin,\"columnGroupWidths\":_vm.columnGroupWidths,\"groupStyles\":_vm.getGroupStyles,\"slots\":_vm.cellSlots}}):_vm._e(),_vm._v(\" \"),_vm._l((_vm.rowContexts),function(rowContext,i){return _c('datatable-row-wrapper',{key:i,attrs:{\"styleObject\":_vm.getRowWrapperStyles(rowContext),\"groupRowsBy\":_vm.groupRowsBy,\"groupLevel\":0,\"row\":rowContext.row,\"rowIdentity\":_vm.rowIdentity,\"innerWidth\":_vm.innerWidth,\"rowDetail\":_vm.rowDetail,\"groupHeader\":_vm.groupHeader,\"offsetX\":_vm.offsetX,\"groupRowHeight\":_vm.groupRowHeight,\"groupHeaderStyles\":_vm.groupHeaderStyles,\"groupHeaderClasses\":_vm.groupHeaderClasses,\"rowDetailHeight\":_vm.getDetailRowHeight(rowContext.row),\"expanded\":rowContext.expanded,\"rowIndex\":rowContext.rowIndex,\"groupHeaderSlot\":_vm.groupHeaderSlot,\"rowDetailSlot\":_vm.rowDetailSlot},on:{\"group-toggle\":_vm.onGroupToggle,\"row-contextmenu\":function($event){return _vm.$emit('rowContextmenu')}}},[_c('datatable-body-row',{attrs:{\"tabindex\":\"-1\",\"columnsByPin\":_vm.columnsByPin,\"columnGroupWidths\":_vm.columnGroupWidths,\"groupStyles\":_vm.getGroupStyles,\"rowClass\":_vm.rowClass,\"row\":rowContext.row,\"rowContext\":rowContext,\"displayCheck\":_vm.displayCheck,\"slots\":_vm.cellSlots,\"renderTracking\":_vm.renderTracking},on:{\"tree-action\":function($event){return _vm.onTreeAction($event)},\"activate\":function($event){return _vm.onActivate($event, i)},\"row-created\":_vm.onRowRendered,\"row-updated\":_vm.onRowRendered}})],1)}),_vm._v(\" \"),(_vm.summaryRow && _vm.summaryPosition === 'bottom')?_c('datatable-summary-row',{staticClass:\"datatable-summary-row\",style:(_vm.getBottomSummaryRowStyles),attrs:{\"rowHeight\":_vm.summaryHeight,\"offsetX\":_vm.offsetX,\"innerWidth\":_vm.innerWidth,\"rows\":_vm.rows,\"columns\":_vm.columns,\"columnsByPin\":_vm.columnsByPin,\"columnGroupWidths\":_vm.columnGroupWidths,\"groupStyles\":_vm.getGroupStyles,\"slots\":_vm.cellSlots}}):_vm._e()],2),_vm._v(\" \"),((!_vm.rows || !_vm.rows.length) && !_vm.loadingIndicator)?_c('div',{staticClass:\"empty-row\",domProps:{\"innerHTML\":_vm._s(_vm.emptyMessage)}}):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"visibility-observer\",rawName:\"v-visibility-observer\",value:({ on: _vm.visibilityCheck, timeout: _vm.visibilityCheckTimeout }),expression:\"{ on: visibilityCheck, timeout: visibilityCheckTimeout }\"}],staticClass:\"ngx-datatable\",class:_vm.classObject,on:{\"visible\":_vm.onVisible,\"insert-column\":_vm.onColumnInsert}},[_c('div',{ref:\"hiddenColumns\",staticClass:\"hidden-columns\"},[_vm._t(\"default\")],2),_vm._v(\" \"),(_vm.headerHeight)?_c('datatable-header',{ref:\"datatableHeader\",staticClass:\"datatable-header\",attrs:{\"sorts\":_vm.sorts,\"sortType\":_vm.mySortType,\"scrollbarWidth\":_vm.scrollbarWidth,\"scrollbarH\":_vm.scrollbarH,\"innerWidth\":_vm.innerWidth,\"offsetX\":_vm.offsetX,\"dealsWithGroup\":Array.isArray(_vm.groupRowsBy) && Boolean(_vm.groupRowsBy.length),\"columns\":_vm.internalColumns,\"headerHeight\":_vm.headerHeight,\"reorderable\":_vm.reorderable,\"sortAscendingIcon\":_vm.cssClasses.sortAscending,\"sortDescendingIcon\":_vm.cssClasses.sortDescending,\"allRowsSelected\":_vm.allRowsSelected,\"selectionType\":_vm.selectionType},on:{\"sort\":function($event){return _vm.onColumnSort($event)},\"resize\":function($event){return _vm.onColumnResize($event)},\"reorder\":function($event){return _vm.onColumnReorder($event)},\"select\":function($event){return _vm.onHeaderSelect($event)},\"columnContextmenu\":function($event){return _vm.onColumnContextmenu($event)}}}):_vm._e(),_vm._v(\" \"),_c('datatable-body',{ref:\"datatableBody\",attrs:{\"groupRowsBy\":_vm.groupRowsBy,\"rows\":_vm.internalRows,\"groupExpansionDefault\":_vm.groupExpansionDefault,\"scrollbarV\":_vm.scrollbarV,\"scrollbarH\":_vm.scrollbarH,\"virtualization\":_vm.virtualization,\"loadingIndicator\":_vm.loadingIndicator,\"externalPaging\":_vm.externalPaging,\"rowHeight\":_vm.myRowHeight,\"rowCount\":_vm.rowCount,\"offset\":_vm.myOffset,\"trackByProp\":_vm.trackByProp,\"columns\":_vm.internalColumns,\"pageSize\":_vm.pageSize,\"limit\":_vm.limit,\"offsetX\":_vm.offsetX,\"rowDetail\":_vm.rowDetail,\"rowDetailHeight\":_vm.rowDetailHeight,\"groupHeader\":_vm.groupHeader,\"selected\":_vm.mySelected,\"checked\":_vm.myChecked,\"innerWidth\":_vm.innerWidth,\"bodyHeight\":_vm.bodyHeight,\"selectionType\":_vm.selectionType,\"checkMode\":_vm.checkMode,\"emptyMessage\":_vm.messages.emptyMessage,\"rowIdentity\":_vm.rowIdentity,\"rowClass\":_vm.rowClass,\"selectCheck\":_vm.selectCheck,\"displayCheck\":_vm.displayCheck,\"summaryRow\":_vm.summaryRow,\"summaryHeight\":_vm.summaryHeight,\"summaryPosition\":_vm.summaryPosition,\"groupRowHeight\":_vm.groupRowHeight,\"groupHeaderStyles\":_vm.groupHeaderStyles,\"groupHeaderClasses\":_vm.groupHeaderClasses,\"groupHeaderSlot\":_vm.groupHeaderSlot,\"rowDetailSlot\":_vm.rowDetailSlot,\"renderTracking\":_vm.renderTracking,\"beforeSelectRowCheck\":_vm.beforeSelectRowCheck},on:{\"page\":_vm.onBodyPage,\"activate\":function($event){return _vm.$emit('activate', $event)},\"rowContextmenu\":_vm.onRowContextmenu,\"select\":_vm.onBodySelect,\"check\":_vm.onBodyCheck,\"scroll\":_vm.onBodyScroll,\"group-toggle\":_vm.onGroupToggle,\"tree-action\":_vm.onTreeAction,\"rendered\":function($event){return _vm.$emit('rendered', $event)}}}),_vm._v(\" \"),_c('div',{staticClass:\"datatable-footer\",class:{ 'datatable-footer-border': Boolean(_vm.footerHeight) }},[(_vm.footerHeight)?_c('datatable-footer',{ref:\"datatableFooter\",attrs:{\"rowCount\":_vm.rowCount,\"pageSize\":_vm.pageSize,\"offset\":_vm.myOffset,\"footerHeight\":_vm.footerHeight,\"totalMessage\":_vm.messages.totalMessage,\"pagerLeftArrowIcon\":_vm.cssClasses.pagerLeftArrow,\"pagerRightArrowIcon\":_vm.cssClasses.pagerRightArrow,\"pagerPreviousIcon\":_vm.cssClasses.pagerPrevious,\"selectedCount\":_vm.mySelected.length,\"selectedMessage\":!!_vm.selectionType && _vm.messages.selectedMessage,\"pagerNextIcon\":_vm.cssClasses.pagerNext,\"footerSlot\":_vm.footerSlot},on:{\"page\":_vm.onFooterPage}}):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"datatable-row-wrapper\",style:(_vm.styleObject),attrs:{\"tabindex\":\"-1\",\"data-test-id\":_vm.rowId}},[(_vm.row && _vm.row.__isGroup)?_c('datatable-group-header',{staticClass:\"datatable-group-header\",class:_vm.groupHeaderClasses,style:(_vm.groupTitleStyles),attrs:{\"offsetX\":_vm.offsetX,\"group\":_vm.row,\"groupLevel\":_vm.row.level,\"groupRowsBy\":_vm.groupRowsBy,\"expanded\":_vm.row.__expanded,\"active\":_vm.row.active,\"groupHeaderSlot\":_vm.groupHeaderSlot},on:{\"group-toggle\":function($event){return _vm.$emit('group-toggle', $event)},\"contextmenu\":function($event){return _vm.$emit('row-contextmenu', $event, _vm.row)}}}):_vm._t(\"default\"),_vm._v(\" \"),(_vm.rowDetail && _vm.expanded)?_c('datatable-row-detail',{staticClass:\"datatable-row-detail\",style:({ height: _vm.rowDetailHeight + 'px' }),attrs:{\"row\":_vm.row,\"expanded\":_vm.expanded,\"rowDetailSlot\":_vm.rowDetailSlot},on:{\"detail-toggle\":function($event){return _vm.$emit('detail-toggle', $event)},\"contextmenu\":function($event){return _vm.$emit('row-contextmenu', $event, _vm.row)}}}):_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"datatable-body-row\",class:_vm.cssClasses,style:(_vm.styles),attrs:{\"id\":\"row-group\",\"tabIndex\":-1},on:{\"focus\":_vm.onFocus,\"blur\":_vm.onBlur,\"keydown\":_vm.onKeyDown}},_vm._l((_vm.columnsByPin),function(colGroup){return _c('div',{key:colGroup.type,staticClass:\"datatable-row-group\",class:'datatable-row-' + colGroup.type,style:(_vm.groupStyles(colGroup)),on:{\"mouseenter\":function($event){return _vm.$emit('activate', _vm.row)}}},_vm._l((colGroup.columns),function(column,ii){return _c('datatable-body-cell',{key:((column.$$id) + \"-\" + _vm.counter),attrs:{\"tabIndex\":\"-1\",\"rowContext\":_vm.rowContext,\"column\":column,\"cellSlot\":_vm.slots()[column.prop],\"renderTracking\":_vm.renderTracking,\"displayCheck\":_vm.displayCheck},on:{\"activate\":function($event){return _vm.onActivate($event, ii)},\"tree-action\":_vm.onTreeAction,\"mouseenter\":_vm.onMouseenter,\"cell-created\":_vm.onCellRendered,\"cell-updated\":_vm.onCellRendered}})}),1)}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_begemode_vue_ngx_datatable\"] = self[\"webpackChunk_begemode_vue_ngx_datatable\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [688], () => (__webpack_require__(4611)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","state","selectedElement","version","onStateChanged","this","classList","remove","$el","querySelector","add","mounted","dark","Watch","Component","components","FullScreenComponent","template","AppComponent","Vue","rows","loadingIndicator","reorderable","columns","prop","name","sortable","created","fetch","data","setTimeout","cb","req","XMLHttpRequest","open","onload","JSON","parse","response","send","BasicAutoComponent","BasicFixedComponent","summaryFunc","cells","summaryForGender","filter","cell","length","BootstrapThemeComponent","visible","rawEvent","contextmenuRow","contextmenuColumn","onTableContextMenu","contextMenuEvent","console","log","event","type","content","undefined","preventDefault","stopPropagation","ContextMenuDemoComponent","expanded","splice","getRowClass","row","age","getCellClass","RowCssComponent","DarkThemeComponent","height","Math","floor","random","getRowHeight","DynamicHeightComponent","temp","table","$refs","updateFilter","val","target","value","toLowerCase","d","indexOf","offset","FilterBarComponent","FooterDemoComponent","cols","forEach","col","push","onRendered","rowIdentity","Id","editing","dblclick","edit","rowIndex","update","$set","updateValue","InlineEditComponent","count","map","updated","Date","now","toString","start","randomNum","end","id","setInterval","updateRandom","bind","stop","clearInterval","rowNum","min","cellNum","newRow","LiveDataComponent","columns1","columns2","rows1","gender","company","rows2","MultipleTablesComponent","onPage","clearTimeout","timeout","toggleExpandRow","toggleExpandDetail","onDetailToggle","expandAllRows","expandAllDetails","collapseAllRows","collapseAllDetails","RowDetailsComponent","groupRowsBy","title","valueGetter","dt","getFullYear","toISOString","getGroupRowHeight","group","rowHeight","width","checkGroup","groupStatus","expectedPaymentDealtWith","exppayyes","exppayno","exppaypending","checked","gr","source","startdate","enddate","index","rowFilter","numberOfExpPayYes","numberOfSourceFunder","numberOfSourceCalculated","numberOfSourceManual","groupstatus","groupTitle","result","keys","onExpandAll","expandAllGroups","onCollapseAll","collapseAllGroups","RowGroupingComponent","color","RowGroupingCustomComponent","HorzVertScrolling","tab1","tab2","tab3","TabsDemoComponent","VirtualScrollComponent","app","VueRootComponent","el","$mount","ColumnFlexComponent","ColumnForceComponent","swapColumns","ColumnReorderComponent","ColumnStandardComponent","allColumns","toggle","isChecked","ColumnToggleComponent","ColumnPinningComponent","companyData","getResults","page","getPagedData","delay","pagedData","PagedData","totalElements","totalPages","size","pageNumber","i","jsonObj","employee","CorporateEmployee","promise","Promise","resolve","resolveFunc","MockServerResultsService","Page","Array","ClientPagingComponent","serverResultsService","setPage","pageInfo","PagingScrollingNoVirtualizationComponent","ServerPagingComponent","cache","isLoading","pageSize","prevPagedData","getMilliseconds","isArray","VirtualPagingComponent","selected","onSelect","onActivate","beforeSelectCheck","oldSelected","confirm","BeforeSelectionCheckComponent","onFocus","CellSelectionComponent","onCheck","displayCheck","CheckNoSelectionComponent","allSelected","selectAll","isSelected","find","r","onCheckboxChange","findIndex","CustomCheckboxSelectionComponent","CheckboxSelectionComponent","checkSelectable","MultiDisableSelectionComponent","MultiClickSelectionComponent","MultiSelectionComponent","SingleSelectionComponent","ClientSortingComponent","comparator","companyComparator","propA","propB","SortingComparatorComponent","DefaultSortingComponent","loading","onSort","sort","sorts","a","b","localeCompare","dir","ServerSortingComponent","enableSummary","summaryPosition","fullName","split","avgAge","filteredCells","reduce","sum","SummaryRowInlineHtmlComponent","getGenderSummary","SummaryRowServerPagingComponent","onSummaryStateChange","SummaryRowSimpleComponent","joke","InlineTemplatesComponent","cellTemplate","$slots","editTmpl","headerTemplate","hdrTpl","TemplateRefTemplatesComponent","onTreeAction","treeStatus","styles","ClientTreeComponent","lastIndex","slice","parentId","FullScreenTreeComponent","sanitizedValue","isFocused","onRowChanged","checkValueUpdates","cellSlot","default","rowContext","column","updateCell","$forceUpdate","renderTracking","$emit","beforeUpdate","$$valueGetter","stripHtml","html","replace","onBlur","onClick","cellElement","onDblClick","onKeyDown","keyCode","isTargetCell","Keys","return","down","up","left","right","pageUp","pageDown","onMouseEnter","func","cellClass","cssClass","res","Object","k","minWidth","maxWidth","calcLeftMargin","checkboxable","cellHeight","isNaN","levelIndent","treeLevelIndent","isTreeColumn","level","Prop","deep","immediate","DataTableBodyCellComponent","onContextmenu","$event","groupHeaderStyles","groupRowHeight","DataTableRowWrapperComponent","counter","focus","onCellRendered","cellIndex","rowElement","isTargetRow","onMouseenter","columnGroupWidths","total","cls","rowClass","DataTableBodyRowComponent","scroller","selector","rowHeightsCache","RowHeightCache","offsetY","myOffset","myOffsetX","indexes","first","last","rowIndexes","Map","rowExpansions","myBodyHeight","columnsByPin","groupStyles","center","rowContexts","scrollbarHelper","ScrollbarHelper","renderCounter","renderId","getDetailRowHeight","rowDetail","rowDetailHeight","Number","onPageSize","recalcLayout","onRowsChanged","rowsChanged","clear","updateOffsetY","$nextTick","onSelectedChanged","isSelect","onCheckedChanged","onColumnsChanged","recalculateColumns","buildStylesByGroup","onOffsetChanged","onOffsetXChanged","offsetX","onMyOffsetXChanged","onInnerWidthChanged","onMyOffsetChanged","limit","onRowCountChanged","onBodyHeightChanged","bodyHeight","scrollbarV","rowTrackingFn","idx","getRowIndex","trackByProp","scrollbarH","innerWidth","bodyWidth","contain","Boolean","selectionType","checkMode","CheckMode","checkNoSelect","SelectionType","checkbox","virtualization","rowCount","isUseRowHeightCache","query","destroyed","reset","colsByPin","columnsByPinArr","clientWidth","fromPager","setOffset","onScrollerWidthChanged","onScrollSetup","scrollXPos","scrollYPos","onBodyScroll","updateIndexes","direction","updatePage","updateRows","ceil","includes","force","lastFirst","lastLast","lastRowCount","__isGroup","set","getRowExpanded","getGroupHeight","getRowAndDetailHeight","get","getRowWrapperStyles","pos","translateXY","getRowOffsetY","queryWithHeight","getBottomSummaryRowStyles","position","externalPaging","max","refreshRowHeightCache","clearCache","initCache","externalVirtual","getAdjustedViewPortIndex","viewPortFirstRowIndex","toggleRowExpansion","currentIndex","toggleAllRows","rowExpanded","onGroupToggle","columnTrackingFn","$$id","initExpansions","groups","selectEnabled","getRowSelected","checkEnabled","getRowChecked","model","onRowRendered","time","checkRenderFinish","timeEnd","calcStylesByGroup","widths","parseInt","getGroupStyles","colGroup","isRowVisible","rowOffsetY","c","onCellFocus","Error","String","DataTableBodyComponent","component","groupedRows","internalRows","initialRows","internalColumns","myColumnMode","ColumnMode","standard","mySortType","SortType","single","innerOffset","mySelected","myChecked","expandedGroups","isVisible","groupHeader","groupHeaderSlot","rowDetailSlot","footerSlot","dimensionsHelper","DimensionsHelper","needToCalculateDims","activeGroupRow","treeFrom","optionalGetterForProp","treeFromRelation","treeTo","treeToRelation","externalSorting","sortInternalRows","groupRowsByParents","lazyTree","groupArrayBy","processGroupedRows","recalculate","onGroupRowsByChanged","newVal","oldVal","isArrayEqual","setColumnsDefaults","onLimitChanged","onCountChanged","onColumnModeChanged","columnMode","onSortTypeChanged","sortType","onFooterPage","onPageSizeChanged","onSortsChanged","innerSortRows","onWindowResize","$listeners","rendered","beforeDestroy","resizeHandler","window","removeEventListener","resizeObserver","unobserve","bodyComponent","datatableBody","headerComponent","datatableHeader","$scopedSlots","footer","ResizeObserver","entries","contentRect","clientHeight","headerHeight","footerHeight","requestAnimationFrame","observe","addEventListener","init","singleFocus","multi","multiClick","isFixedHeader","isFixedRow","isVertScroll","virtualized","isVirtualized","isHorScroll","selectable","isSelectable","isCheckboxSelection","isCellSelection","isSingleSelection","isMultiSelection","isMultiClickSelection","arr","allRowsSelected","selectAllRowsOnPage","rowsOnPage","adjust","recalculateDims","recalculatePages","forceIdx","allowBleed","calculateColumnsWidth","forceFillColumnWidths","flex","adjustColumnWidths","hidden","dims","getDimensions","calcPageSize","calcRowCount","onBodyPage","onVisible","onColumnContextmenu","ContextmenuType","header","onRowContextmenu","body","onColumnResize","newValue","canAutoResize","$$oldWidth","onColumnReorder","prevValue","prevCol","movedCol","onColumnSort","item","goToFirstAfterSort","s","onHeaderSelect","evName","checkIsSelect","allChecked","onBodySelect","onBodyCheck","__expanded","key","active","freeze","onColumnInsert","setColumnDefaults","onColumnRemoved","colIndex","onColumnChangeVisible","expandCollapseRow","isGroupExpanded","originalArray","groupBy","getValue","groupDescr","getKey","groupByArr","itemsToRemove","has","keysDescr","getGroupTitle","from","x","addGroup","level1","keysObj","descr","sortGroupedRows","sortRows","__group","keyDescr","expand","addRow","g","validator","sortAscending","sortDescending","pagerLeftArrow","pagerRightArrow","pagerPrevious","pagerNext","emptyMessage","totalMessage","selectedMessage","Function","throttleable","directives","DatatableComponent","ResponsiveComponent","pageLimit","onScroll","viewHeight","getBoundingClientRect","loadPage","ServerScrollingComponent","groupLevel","toggleExpandGroup","DataTableBodyGroupHeaderComponent","DataTableBodyRowDetailComponent","ProgressBarComponent","prevScrollYPos","prevScrollXPos","scrollHeight","transform","parentElement","closest","onInitScrollHandler","onInitScroll","passive","tick","scrollTop","incOffset","list","scrollLeft","updateOffset","ScrollerComponent","selectRow","doSelect","beforeSelectRowCheck","chkbox","shiftKey","selectRowsBetween","prevIndex","ctrlKey","metaKey","selectRows","selectCheck","checkRow","select","onKeyboardFocus","focusCell","focusRow","nextRowElement","getPrevNextRow","$parent","scrolled","h","focusRow1","nextRow","getPrevNextRowElement","focusElement","previousElementSibling","nextElementSibling","children","getPrevNextRow1","nextCellElement","getElementsByClassName","getRowSelectedIdx","rowId","reverse","range","selectedIndex","DataTableSelectionComponent","defaultSumFunc","cellsWithValues","some","noopSumFunc","summaryRow","mySlotsFunc","myRowContext","onChanges","updateInternalColumns","updateValues","slots","summarySlots","summaryTemplate","assign","cellsFromSingleColumn","sumFunc","getSummaryFunction","DataTableSummaryRowComponent","onVisibleChanged","frozenLeft","frozenRight","flexGrow","resizeable","draggable","headerCheckboxable","headerClasses","headerClass","cellClasses","headerAppend","summary","DataTableColumnComponent","selectedCount","curPage","DataTableFooterComponent","pages","myPage","calcPages","onSizeChanged","onPageChanged","newCount","prevPage","selectPage","nextPage","startPage","endPage","isMaxSized","maxSize","num","number","text","DataTablePagerComponent","sortFn","sortDir","myAllRowsSelected","sortOrder","cellContext","onAllRowsSelectedChanged","isCheckboxable","onColumnChahged","calcSortDir","headerAppendTemplate","append","element","setResizeObserver","join","calcSortCssClass","calcCssClass","nextSortDir","SortDirection","asc","sortAscendingIcon","desc","sortDescendingIcon","realWidth","DataTableHeaderCellComponent","myHeaderHeight","styleByGroup","targetMarkerContext","dragEvent","dragging","positions","onChangedInnerWidth","colByPin","setStylesByGroup","onHeaderHeightChanged","onLongPressStart","onLongPressEnd","isEnableDragX","onColumnResized","onHiddenChanged","getColumn","leftColumnCount","centerColumnCount","calcNewSorts","scrollbarWidth","styleForGroup","headerWidth","onHeaderCellMounted","draggables","dragModel","onDragStart","offsetLeft","dragger","elm","offsetWidth","onDragging","prevPos","isTarget","lastDraggingIndex","onTargetChanged","newIndex","initialIndex","onDragEnd","onColumnReordered","style","oldColumn","newColumn","class","concat","clientX","y","clientY","targets","document","elementsFromPoint","dragndrop","DataTableHeaderComponent","idCounter","vNode","dragX","dragY","vnode","handleUp","handleDown","handleMove","_dragEvent","isDragging","onMouseUp","onMouseMove","unsubscribe","onMouseDown","contains","mouseDownPos","emit","top","handlers","on","componentOptions","listeners","fns","directive","binding","ctrl","DraggableController","__draggable__","unbind","_id","pressEnabled","duration","mouseX","mouseY","_pressing","_isLongPressing","which","pressing","isLongPressing","pressModel","loop","endPress","xThres","abs","yThres","LongPressController","__longpress__","resizeEnabled","resizing","isHandle","initialWidth","mouseDownScreenX","screenX","e","move","newWidth","overMinWidth","underMaxWidth","ResizeableDirectiveController","__resizeable__","inserted","node","createElement","appendChild","_isVisible","stopCheck","onVisibilityChange","runCheck","check","offsetHeight","VisibilityController","__visibility__","getWidth","outer","visibility","widthNoScroll","overflow","inner","widthWithScroll","parentNode","removeChild","str","trim","toUpperCase","match","vm","isNullOrUndefined","camelCase","getterForProp","deCamelCase","treeColumnFound","emptyStringGetter","numericIndexGetter","shallowValueGetter","obj","fieldName","deepValueGetter","path","current","ret","columnTotalWidth","totalWidth","parseFloat","all","tableWidth","colsByPinArr","array1","array2","l","pow","calcRealWidth","w","removeProcessedColumns","columnsToResize","columnsProcessed","getContentWidth","defaultColWidth","contentWidth","expectedWidth","hiddenColumns","columnsWidth","columnsTotalWidth","totalFlexGrow","getTotalFlexGrow","colsByGroup","attr","hasMinWidth","remainingWidth","widthPerFlexPoint","scaleColumns","startIdx","averageColumnWidth","additionWidthPerColumn","exceedsWindow","newSize","testStyle","prefix","getComputedStyle","documentElement","pre","dom","RegExp","exec","lowercase","css","js","substr","property","heights","details","n","accumulator","currentRowHeight","scrollY","calcRowIndex","atRowIndex","byRowHeight","atIndex","queryBetween","atIndexA","atIndexB","dataLength","orderByComparator","isFinite","dirs","rowToIndexMap","cachedDirs","compareFn","rowA","rowB","cachedDir","comparison","throttle","wait","options","context","args","previous","later","leading","apply","remaining","arguments","trailing","descriptor","configurable","enumerable","defineProperty","getVendorPrefixedName","backfaceVisibility","hasCSSTransforms","hasCSS3DTransforms","ua","navigator","userAgent","isSafari","test","to","nodeById","TreeNode","uniqIDs","toValue","notResolvedNodes","fromValue","parent","pop","flatten","f","recursive","child","call","render","_vm","_h","$createElement","_c","_self","_m","_v","ref","staticClass","attrs","scopedSlots","_u","fn","scope","staticStyle","_s","_e","staticRenderFns","rawName","expression","cssClasses","tabIndex","marginCellStyle","domProps","treeToggleTemplate","_t","scrollWidth","summaryHeight","cellSlots","_l","groupHeaderClasses","visibilityCheck","visibilityCheckTimeout","classObject","groupExpansionDefault","myRowHeight","messages","ii","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","getter","__esModule","definition","o","globalThis","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}