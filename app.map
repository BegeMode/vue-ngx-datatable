{"version":3,"file":"app.js","mappings":"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","sources":["webpack://@begemode/vue-ngx-datatable/webpack/runtime/chunk loaded","webpack://@begemode/vue-ngx-datatable/./demo/app.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/basic-auto.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/basic-fixed.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/bootstrap.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/contextmenu.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/css.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/dark-theme.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/dynamic-height.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/filter.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/footer.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/fullscreen.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/inline.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/live.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/multiple.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/row-detail.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/row-grouping.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/row-grouping.custom.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/scrolling.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/tabs.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/virtual.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/bootstrap.ts","webpack://@begemode/vue-ngx-datatable/./demo/columns/column-flex.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/columns/column-force.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/columns/column-reorder.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/columns/column-standard.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/columns/column-toggle.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/columns/pinning.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/mock-server-results-service.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/model/corporate-employee.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/model/page.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/model/paged-data.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/paging-client.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/paging-scrolling-novirtualization.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/paging-server.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/paging/paging-virtual.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-before-select-check.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-cell.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-chkbox-checked.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-chkbox-template.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-chkbox.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-disabled.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-multi-click.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-multi.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/selection/selection-single.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/sorting/sorting-client.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/sorting/sorting-comparator.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/sorting/sorting-default.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/sorting/sorting-server.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/summary/summary-row-inline-html.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/summary/summary-row-server-paging.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/summary/summary-row-simple.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/templates/template-dom.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/templates/template-obj.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/tree/client-tree.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/tree/fullscreen.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-cell.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row-wrapper.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/body.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/datatable.component.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/responsive.component.vue?7eb2","webpack://@begemode/vue-ngx-datatable/./demo/paging/scrolling-server.component.vue?8260","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-group-header.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row-detail.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/progress-bar.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/scroller.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/selection.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/body/summary/summary-row.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/columns/column.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/footer/footer.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/footer/pager.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/header/header-cell.component.ts","webpack://@begemode/vue-ngx-datatable/./src/components/header/header.component.ts","webpack://@begemode/vue-ngx-datatable/./src/directives/draggable.directive.ts","webpack://@begemode/vue-ngx-datatable/./src/directives/long-press.directive.ts","webpack://@begemode/vue-ngx-datatable/./src/directives/resizeable.directive.ts","webpack://@begemode/vue-ngx-datatable/./src/directives/visibility.directive.ts","webpack://@begemode/vue-ngx-datatable/./src/services/dimensions-helper.service.ts","webpack://@begemode/vue-ngx-datatable/./src/services/scrollbar-helper.service.ts","webpack://@begemode/vue-ngx-datatable/./src/types/check.type.ts","webpack://@begemode/vue-ngx-datatable/./src/types/column-mode.type.ts","webpack://@begemode/vue-ngx-datatable/./src/types/contextmenu.type.ts","webpack://@begemode/vue-ngx-datatable/./src/types/selection.type.ts","webpack://@begemode/vue-ngx-datatable/./src/types/sort-direction.type.ts","webpack://@begemode/vue-ngx-datatable/./src/types/sort.type.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/camel-case.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/column-helper.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/column-prop-getters.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/column.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/equal.array.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/id.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/keys.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/math.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/prefixes.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/row-height-cache.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/sort.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/throttle.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/translate.ts","webpack://@begemode/vue-ngx-datatable/./src/utils/tree.ts","webpack://@begemode/vue-ngx-datatable/./demo/basic/responsive.component.vue","webpack://@begemode/vue-ngx-datatable/./demo/paging/scrolling-server.component.vue","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-cell.component.vue","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row-wrapper.component.vue","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row.component.vue","webpack://@begemode/vue-ngx-datatable/./src/components/body/body.component.vue","webpack://@begemode/vue-ngx-datatable/./src/components/datatable.component.vue","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-cell.component.ts?978f","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row-wrapper.component.ts?e887","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row.component.ts?eb02","webpack://@begemode/vue-ngx-datatable/./src/components/body/body.component.ts?54dc","webpack://@begemode/vue-ngx-datatable/./src/components/datatable.component.ts?9e68","webpack://@begemode/vue-ngx-datatable/./demo/basic/responsive.component.vue?3aee","webpack://@begemode/vue-ngx-datatable/./demo/paging/scrolling-server.component.vue?e685","webpack://@begemode/vue-ngx-datatable/./demo/basic/responsive.component.vue?fb9f","webpack://@begemode/vue-ngx-datatable/./demo/paging/scrolling-server.component.vue?2fc5","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-cell.component.html","webpack://@begemode/vue-ngx-datatable/./src/components/body/body.component.html","webpack://@begemode/vue-ngx-datatable/./src/components/datatable.component.html","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row-wrapper.component.vue?1faf","webpack://@begemode/vue-ngx-datatable/./src/components/body/body-row.component.vue?47c6","webpack://@begemode/vue-ngx-datatable/webpack/bootstrap","webpack://@begemode/vue-ngx-datatable/webpack/runtime/compat get default export","webpack://@begemode/vue-ngx-datatable/webpack/runtime/define property getters","webpack://@begemode/vue-ngx-datatable/webpack/runtime/global","webpack://@begemode/vue-ngx-datatable/webpack/runtime/hasOwnProperty shorthand","webpack://@begemode/vue-ngx-datatable/webpack/runtime/make namespace object","webpack://@begemode/vue-ngx-datatable/webpack/runtime/jsonp chunk loading","webpack://@begemode/vue-ngx-datatable/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { Component, Vue, Watch } from 'vue-property-decorator';\r\nimport '../src/themes/material.scss';\r\nimport '../src/themes/dark.scss';\r\nimport '../src/themes/bootstrap.scss';\r\nimport { FullScreenComponent } from './basic/fullscreen.component';\r\nimport BasicAutoComponent from './basic/basic-auto.component';\r\nimport BasicFixedComponent from './basic/basic-fixed.component';\r\nimport ClientPagingComponent from './paging/paging-client.component';\r\nimport VirtualPagingComponent from './paging/paging-virtual.component';\r\nimport VirtualScrollComponent from './basic/virtual.component';\r\nimport FilterBarComponent from './basic/filter.component';\r\nimport SingleSelectionComponent from './selection/selection-single.component';\r\nimport MultiSelectionComponent from './selection/selection-multi.component';\r\nimport MultiClickSelectionComponent from './selection/selection-multi-click.component';\r\nimport DynamicHeightComponent from './basic/dynamic-height.component';\r\nimport DefaultSortingComponent from './sorting/sorting-default.component';\r\nimport ClientSortingComponent from './sorting/sorting-client.component';\r\nimport SortingComparatorComponent from './sorting/sorting-comparator.component';\r\nimport ServerSortingComponent from './sorting/sorting-server.component';\r\nimport HorzVertScrolling from './basic/scrolling.component';\r\nimport ClientTreeComponent from './tree/client-tree.component';\r\nimport FullScreenTreeComponent from './tree/fullscreen.component';\r\nimport CheckboxSelectionComponent from './selection/selection-chkbox.component';\r\nimport CheckNoSelectionComponent from './selection/selection-chkbox-checked.component';\r\nimport MultiDisableSelectionComponent from './selection/selection-disabled.component';\r\nimport BeforeSelectionCheckComponent from './selection/selection-before-select-check.component';\r\nimport CustomCheckboxSelectionComponent from './selection/selection-chkbox-template.component';\r\nimport CellSelectionComponent from './selection/selection-cell.component';\r\nimport ColumnReorderComponent from './columns/column-reorder.component';\r\nimport ContextMenuDemoComponent from './basic/contextmenu.component';\r\nimport ColumnToggleComponent from './columns/column-toggle.component';\r\nimport ColumnStandardComponent from './columns/column-standard.component';\r\nimport ColumnForceComponent from './columns/column-force.component';\r\nimport ColumnFlexComponent from './columns/column-flex.component';\r\nimport ColumnPinningComponent from './columns/pinning.component';\r\nimport SummaryRowSimpleComponent from './summary/summary-row-simple.component';\r\nimport RowGroupingComponent from './basic/row-grouping.component';\r\nimport RowGroupingCustomComponent from './basic/row-grouping.custom.component';\r\nimport RowDetailsComponent from './basic/row-detail.component';\r\nimport MultipleTablesComponent from './basic/multiple.component';\r\nimport TabsDemoComponent from './basic/tabs.component';\r\nimport LiveDataComponent from './basic/live.component';\r\nimport InlineEditComponent from './basic/inline.component';\r\nimport RowCssComponent from './basic/css.component';\r\nimport FooterDemoComponent from './basic/footer.component';\r\nimport ResponsiveComponent from './basic/responsive.component.vue';\r\nimport ServerScrollingComponent from './paging/scrolling-server.component.vue';\r\nimport ServerPagingComponent from './paging/paging-server.component';\r\nimport PagingScrollingNoVirtualizationComponent from './paging/paging-scrolling-novirtualization.component';\r\nimport InlineTemplatesComponent from './templates/template-dom.component';\r\nimport TemplateRefTemplatesComponent from './templates/template-obj.component';\r\nimport BootstrapThemeComponent from './basic/bootstrap.component';\r\nimport DarkThemeComponent from './basic/dark-theme.component';\r\nimport SummaryRowServerPagingComponent from './summary/summary-row-server-paging.component';\r\nimport SummaryRowInlineHtmlComponent from './summary/summary-row-inline-html.component';\r\n\r\n@Component({\r\n  components: {\r\n    'basic-auto-demo': BasicAutoComponent,\r\n    'full-screen-demo': FullScreenComponent,\r\n    'basic-fixed-demo': BasicFixedComponent,\r\n    'client-paging-demo': ClientPagingComponent,\r\n    'virtual-paging-demo': VirtualPagingComponent,\r\n    'virtual-scroll-demo': VirtualScrollComponent,\r\n    'filter-demo': FilterBarComponent,\r\n    'single-selection-demo': SingleSelectionComponent,\r\n    'multi-selection-demo': MultiSelectionComponent,\r\n    'multi-click-selection-demo': MultiClickSelectionComponent,\r\n    'dynamic-height-demo': DynamicHeightComponent,\r\n    'default-sorting-demo': DefaultSortingComponent,\r\n    'client-sorting-demo': ClientSortingComponent,\r\n    'comparator-sorting-demo': SortingComparatorComponent,\r\n    'server-sorting-demo': ServerSortingComponent,\r\n    'horz-vert-scrolling-demo': HorzVertScrolling,\r\n    'client-side-tree-demo': ClientTreeComponent,\r\n    'full-screen-tree-demo': FullScreenTreeComponent,\r\n    'chkbox-selection-demo': CheckboxSelectionComponent,\r\n    'chkbox-no-selection-demo': CheckNoSelectionComponent,\r\n    'multidisable-selection-demo': MultiDisableSelectionComponent,\r\n    'before-selection-check-demo': BeforeSelectionCheckComponent,\r\n    'chkbox-selection-template-demo': CustomCheckboxSelectionComponent,\r\n    'cell-selection-demo': CellSelectionComponent,\r\n    'column-reorder-demo': ColumnReorderComponent,\r\n    'contextmenu-demo': ContextMenuDemoComponent,\r\n    'column-toggle-demo': ColumnToggleComponent,\r\n    'column-standard-demo': ColumnStandardComponent,\r\n    'column-force-demo': ColumnForceComponent,\r\n    'column-flex-demo': ColumnFlexComponent,\r\n    'column-pinning-demo': ColumnPinningComponent,\r\n    'summary-row-simple-demo': SummaryRowSimpleComponent,\r\n    'row-grouping-demo': RowGroupingComponent,\r\n    'row-grouping-custom-demo': RowGroupingCustomComponent,\r\n    'row-details-demo': RowDetailsComponent,\r\n    'multiple-tables-demo': MultipleTablesComponent,\r\n    'tabs-demo': TabsDemoComponent,\r\n    'live-data-demo': LiveDataComponent,\r\n    'inline-edit-demo': InlineEditComponent,\r\n    'row-css-demo': RowCssComponent,\r\n    'footer-demo': FooterDemoComponent,\r\n    'responsive-demo': ResponsiveComponent,\r\n    'server-scrolling-demo': ServerScrollingComponent,\r\n    'server-paging-demo': ServerPagingComponent,\r\n    'paging-scrolling-novirtualization-demo': PagingScrollingNoVirtualizationComponent,\r\n    'inline-templates-demo': InlineTemplatesComponent,\r\n    'template-ref-demo': TemplateRefTemplatesComponent,\r\n    'basic-bootstrap-theme-demo': BootstrapThemeComponent,\r\n    'basic-dark-theme-demo': DarkThemeComponent,\r\n    'summary-row-server-paging-demo': SummaryRowServerPagingComponent,\r\n    'summary-row-inline-html': SummaryRowInlineHtmlComponent,\r\n  },\r\n  template: `\r\n    <div :class=\"classObject\" style=\"height:100%;\">\r\n      <nav>\r\n        <h3>vue-ngx-datatable <small>({{version}})</small></h3>\r\n        <ul class=\"main-ul\">\r\n          <!--<li>\r\n            <h4>Documentation</h4>\r\n            <ul>\r\n              <li>\r\n                <a href=\"https://swimlane.gitbooks.io/ngx-datatable/content/\" target=\"_black\">Online</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://www.gitbook.com/download/pdf/book/swimlane/ngx-datatable\" target=\"_black\">PDF</a>\r\n              </li>\r\n            </ul>\r\n          </li> -->\r\n          <li>\r\n            <h4>Basic</h4>\r\n            <ul>\r\n              <li><a href=\"#virtual-scroll\" @click=\"state='virtual-scroll'\">10k Rows</a></li>\r\n              <li><a href=\"#full-screen\" @click=\"state='full-screen'\">Full Screen</a></li>\r\n              <li><a href=\"#inline-edit\" @click=\"state='inline-edit'\">Inline Editing</a></li>\r\n              <li><a href=\"#horz-vert-scrolling\" @click=\"state='horz-vert-scrolling'\">Horz/Vert Scrolling</a></li>\r\n              <li><a href=\"#multiple-tables\" @click=\"state='multiple-tables'\">Multiple Tables</a></li>\r\n              <li><a href=\"#filter\" @click=\"state='filter'\">Filtering</a></li>\r\n              <li><a href=\"#hidden\" @click=\"state='hidden'\">Hidden On Load</a></li>\r\n              <li><a href=\"#live\" @click=\"state='live'\">Live Data</a></li>\r\n              <!-- <li><a href=\"#rx\" @click=\"state='rx'\">RxJS</a></li> -->\r\n              <li><a href=\"#contextmenu\" @click=\"state='contextmenu'\">Context Menu</a></li>\r\n              <li><a href=\"#css\" @click=\"state='css'\">CSS Classes</a></li>\r\n              <li><a href=\"#footer\" @click=\"state='footer'\">Footer Template</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Themes</h4>\r\n            <ul>\r\n              <li><a href=\"#dark\" @click=\"state='dark'\">Dark theme</a></li>\r\n              <li><a href=\"#bootstrap\" @click=\"state='bootstrap'\">Bootstrap theme</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Tree</h4>\r\n            <ul>\r\n              <li><a href=\"#fullscreen-tree\" @click=\"state='fullscreen-tree'\">Full screen Tree</a></li>\r\n              <li><a href=\"#client-tree\" @click=\"state='client-tree'\">Client Side Tree</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Rows</h4>\r\n            <ul>\r\n              <li><a href=\"#row-grouping\" @click=\"state='row-grouping'\">Row Grouping</a></li>\r\n              <li><a href=\"#row-grouping-custom\" @click=\"state='row-grouping-custom'\">Row Grouping With Custom Styles</a></li>\r\n              <li><a href=\"#\" @click=\"state=''\">Fluid Row Height</a></li>\r\n              <li><a href=\"#basic-fixed\" @click=\"state='basic-fixed'\">Fixed Row Height</a></li>\r\n              <li><a href=\"#dynamic\" @click=\"state='dynamic'\">Dynamic Row Height</a></li>\r\n              <li><a href=\"#row-details\" @click=\"state='row-details'\">Row Detail</a></li>\r\n              <li><a href=\"#responsive\" @click=\"state='responsive'\">Responsive</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Paging</h4>\r\n            <ul>\r\n              <li><a href=\"#client-paging\" @click=\"state='client-paging'\">Client-side</a></li>\r\n              <li><a href=\"#server-paging\" @click=\"state='server-paging'\">Server-side</a></li>\r\n              <li><a href=\"#paging-scrolling-novirtualization\" @click=\"state='paging-scrolling-novirtualization'\">Scrolling no virtual</a></li>\r\n              <li><a href=\"#server-scrolling\" @click=\"state='server-scrolling'\">Scrolling server-side</a></li>\r\n              <li><a href=\"#virtual-paging\" @click=\"state='virtual-paging'\">Virtual server-side</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Sorting</h4>\r\n            <ul>\r\n              <li><a href=\"#client-sorting\" @click=\"state='client-sorting'\">Client-side</a></li>\r\n              <li><a href=\"#default-sorting\" @click=\"state='default-sorting'\">Default sort</a></li>\r\n              <li><a href=\"#server-sorting\" @click=\"state='server-sorting'\">Server-side</a></li>\r\n              <li><a href=\"#comparator-sorting\" @click=\"state='comparator-sorting'\">Comparator</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Selection</h4>\r\n            <ul>\r\n              <li><a href=\"#cell-selection\" @click=\"state='cell-selection'\">Cell</a></li>\r\n              <li><a href=\"#single-selection\" @click=\"state='single-selection'\">Single Row</a></li>\r\n              <li><a href=\"#multi-selection\" @click=\"state='multi-selection'\">Multi Row</a></li>\r\n              <li><a href=\"#multi-click-selection\" @click=\"state='multi-click-selection'\">Multi Click Row</a></li>\r\n              <li><a href=\"#multidisable-selection\" @click=\"state='multidisable-selection'\">Disable Callback</a></li>\r\n              <li><a href=\"#before-selection-check\" @click=\"state='before-selection-check'\">Before Select Row Check Callback</a></li>\r\n              <li><a href=\"#chkbox-selection\" @click=\"state='chkbox-selection'\">Checkbox</a></li>\r\n              <li><a href=\"#chkbox-no-selection\" @click=\"state='chkbox-no-selection'\">Checkbox in 'no selection rows' mode</a></li>\r\n              <li><a href=\"#chkbox-selection-template\" @click=\"state='chkbox-selection-template'\">Custom Checkbox</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Templates</h4>\r\n            <ul>\r\n              <li><a href=\"#inline\" @click=\"state='inline'\">Inline</a></li>\r\n              <!-- <li><a href=\"#templateref\" @click=\"state='templateref'\">TemplateRef</a></li> -->\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Column</h4>\r\n            <ul>\r\n              <li><a href=\"#flex\" @click=\"state='flex'\">Flex</a></li>\r\n              <li><a href=\"#toggle\" @click=\"state='toggle'\">Toggling</a></li>\r\n              <li><a href=\"#fixed\" @click=\"state='fixed'\">Fixed</a></li>\r\n              <li><a href=\"#force\" @click=\"state='force'\">Force</a></li>\r\n              <li><a href=\"#pinning\" @click=\"state='pinning'\">Pinning</a></li>\r\n              <li><a href=\"#reorder\" @click=\"state='reorder'\">Reorder</a></li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h4>Summary Row</h4>\r\n            <ul>\r\n              <li><a href=\"#simple-summary\" @click=\"state='simple-summary'\">Simple</a></li>\r\n              <!-- <li><a href=\"#custom-template-summary\" @click=\"state='custom-template-summary'\">Custom Template</a></li> -->\r\n              <li><a href=\"#paging-summary\" @click=\"state='paging-summary'\">Server-side paging</a></li>\r\n              <li><a href=\"#inline-html-summary\" @click=\"state='inline-html-summary'\">Inline HTML</a></li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <content>\r\n        <!-- Basic -->\r\n        <basic-auto-demo v-if=\"!state\"></basic-auto-demo>\r\n        <full-screen-demo v-if=\"state === 'full-screen'\"></full-screen-demo>\r\n        <basic-fixed-demo v-if=\"state === 'basic-fixed'\"></basic-fixed-demo>\r\n        <virtual-scroll-demo v-if=\"state === 'virtual-scroll'\"></virtual-scroll-demo>\r\n        <filter-demo v-if=\"state === 'filter'\"></filter-demo>\r\n        <dynamic-height-demo v-if=\"state === 'dynamic'\"></dynamic-height-demo>\r\n        <horz-vert-scrolling-demo v-if=\"state === 'horz-vert-scrolling'\"></horz-vert-scrolling-demo>\r\n        <contextmenu-demo v-if=\"state === 'contextmenu'\"></contextmenu-demo>\r\n\r\n        <row-details-demo v-if=\"state === 'row-details'\"></row-details-demo>\r\n        <multiple-tables-demo v-if=\"state === 'multiple-tables'\"></multiple-tables-demo>\r\n        <tabs-demo v-if=\"state === 'hidden'\"></tabs-demo>\r\n        <live-data-demo v-if=\"state === 'live'\"></live-data-demo>\r\n        <inline-edit-demo v-if=\"state === 'inline-edit'\"></inline-edit-demo>\r\n        <row-css-demo v-if=\"state === 'css'\"></row-css-demo>\r\n        <footer-demo v-if=\"state === 'footer'\"></footer-demo>\r\n        <responsive-demo v-if=\"state === 'responsive'\"></responsive-demo>\r\n        <!-- \r\n        <rx-demo v-if=\"state === 'rx'\"></rx-demo>\r\n         -->\r\n\r\n        <!-- Themes -->\r\n        <basic-dark-theme-demo v-if=\"state === 'dark'\"></basic-dark-theme-demo>\r\n        <basic-bootstrap-theme-demo  v-if=\"state === 'bootstrap'\"></basic-bootstrap-theme-demo>\r\n\r\n        <!-- Tree -->\r\n        <full-screen-tree-demo v-if=\"state === 'fullscreen-tree'\"></full-screen-tree-demo>\r\n        <client-side-tree-demo v-if=\"state === 'client-tree'\"></client-side-tree-demo>\r\n\r\n        <!-- Paging -->\r\n        <client-paging-demo v-if=\"state === 'client-paging'\"></client-paging-demo>\r\n        <virtual-paging-demo v-if=\"state === 'virtual-paging'\"></virtual-paging-demo>\r\n        <row-grouping-demo v-if=\"state === 'row-grouping'\"></row-grouping-demo>\r\n        <row-grouping-custom-demo v-if=\"state === 'row-grouping-custom'\"></row-grouping-custom-demo>\r\n        <server-scrolling-demo v-if=\"state === 'server-scrolling'\"></server-scrolling-demo>\r\n        <server-paging-demo v-if=\"state === 'server-paging'\"></server-paging-demo>\r\n        <paging-scrolling-novirtualization-demo v-if=\"state === 'paging-scrolling-novirtualization'\">\r\n        </paging-scrolling-novirtualization-demo>\r\n\r\n        <!-- Sorting -->\r\n        <default-sorting-demo v-if=\"state === 'default-sorting'\"></default-sorting-demo>\r\n        <client-sorting-demo v-if=\"state === 'client-sorting'\"></client-sorting-demo>\r\n        <comparator-sorting-demo v-if=\"state === 'comparator-sorting'\"></comparator-sorting-demo>\r\n        <server-sorting-demo v-if=\"state === 'server-sorting'\"></server-sorting-demo>\r\n\r\n        <!-- Selection -->\r\n        <single-selection-demo v-if=\"state === 'single-selection'\"></single-selection-demo>\r\n        <multi-selection-demo v-if=\"state === 'multi-selection'\"></multi-selection-demo>\r\n        <multi-click-selection-demo v-if=\"state === 'multi-click-selection'\"></multi-click-selection-demo>\r\n        <chkbox-selection-demo v-if=\"state === 'chkbox-selection'\"></chkbox-selection-demo>\r\n        <chkbox-no-selection-demo v-if=\"state === 'chkbox-no-selection'\"></chkbox-no-selection-demo>\r\n        <multidisable-selection-demo v-if=\"state === 'multidisable-selection'\"></multidisable-selection-demo>\r\n        <before-selection-check-demo v-if=\"state === 'before-selection-check'\"></before-selection-check-demo>\r\n        <chkbox-selection-template-demo v-if=\"state === 'chkbox-selection-template'\"></chkbox-selection-template-demo> \r\n        <cell-selection-demo v-if=\"state === 'cell-selection'\"></cell-selection-demo>\r\n\r\n        <!-- Templates -->\r\n        <!-- <template-ref-demo v-if=\"state === 'templateref'\"></template-ref-demo> -->\r\n        <inline-templates-demo v-if=\"state === 'inline'\"></inline-templates-demo>\r\n\r\n        <!-- Columns -->\r\n        <column-reorder-demo v-if=\"state === 'reorder'\"></column-reorder-demo>\r\n        <column-toggle-demo v-if=\"state === 'toggle'\"></column-toggle-demo>\r\n        <column-flex-demo v-if=\"state === 'flex'\"></column-flex-demo>\r\n        <column-standard-demo v-if=\"state === 'fixed'\"></column-standard-demo>\r\n        <column-force-demo v-if=\"state === 'force'\"></column-force-demo>\r\n        <column-pinning-demo v-if=\"state === 'pinning'\"></column-pinning-demo>\r\n\r\n        <!-- Summary row -->\r\n        <summary-row-simple-demo v-if=\"state === 'simple-summary'\"></summary-row-simple-demo>\r\n        <summary-row-server-paging-demo v-if=\"state === 'paging-summary'\">\r\n        </summary-row-server-paging-demo>\r\n        <summary-row-inline-html v-if=\"state === 'inline-html-summary'\"></summary-row-inline-html>\r\n        <!-- <summary-row-custom-template-demo v-if=\"state === 'custom-template-summary'\">\r\n        </summary-row-custom-template-demo> -->\r\n      </content>\r\n    </div>\r\n  `\r\n})\r\nexport class AppComponent extends Vue {\r\n  state: string = '';\r\n  selectedElement: Element = null;\r\n\r\n  @Watch('state') onStateChanged() {\r\n    if (this.selectedElement) {\r\n      this.selectedElement.classList.remove('active');\r\n    }\r\n    this.selectedElement = this.$el.querySelector(`a[href=\"#${this.state}\"`);\r\n    if (this.selectedElement) {\r\n      this.selectedElement.classList.add('active');\r\n    }\r\n  }\r\n\r\n  mounted() {\r\n    this.onStateChanged();\r\n  }\r\n\r\n  get classObject() {\r\n    return {\r\n      dark: this.state === 'dark',\r\n    };\r\n  }\r\n\r\n  version: string = APP_VERSION;\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Fluid Row Heights \r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/basic-auto.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :loadingIndicator=\"loadingIndicator\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        :resizeable=\"true\"\r\n        :reorderable=\"reorderable\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class BasicAutoComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = false;\r\n\r\n  columns = [\r\n    { prop: 'name' },\r\n    { name: 'Gender' },\r\n    { name: 'Company', sortable: false }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n      setTimeout(() => { this.loadingIndicator = false; }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Fix Row Height\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/basic-fixed.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material striped\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class BasicFixedComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  columns = [\r\n    { prop: 'name' },\r\n    { name: 'Company' },\r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  name: 'basic-bootstrap-theme-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Bootstrap Theme\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/bootstrap.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"bootstrap\"\r\n        :rows=\"rows\"\r\n        :loadingIndicator=\"loadingIndicator\"\r\n        :columns=\"columns\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :summaryRow=\"true\"\r\n        summaryPosition=\"bottom\"\r\n        :footerHeight=\"40\"\r\n        :limit=\"10\"\r\n        rowHeight=\"auto\"\r\n        :reorderable=\"reorderable\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class BootstrapThemeComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n\r\n  columns = [\r\n    { prop: 'name', summaryFunc: (): string => null },\r\n    { name: 'Gender', summaryFunc: (cells: string[]) => this.summaryForGender(cells) },\r\n    { name: 'Company', summaryFunc: (): string => null }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n      setTimeout(() => { this.loadingIndicator = false; }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  private summaryForGender(cells: string[]): string {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Context Menu Event\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/contextmenu.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div class=\"info\">\r\n        <p><strong>Note:</strong> ngx-datatable does not provide a context menu feature.\r\n        This demonstrates how you would access the <code>contextmenu</code> event\r\n        to display your own custom context menu.</p>\r\n        <p v-if=\"rawEvent\"><strong>Mouse position:</strong> <code>(x: {{rawEvent.x}}, y: {{rawEvent.y}})</code></p>\r\n        <p v-if=\"contextmenuRow\"><strong>Row:</strong> {{contextmenuRow.name}}</p>\r\n        <p v-if=\"contextmenuColumn\"><strong>Header:</strong>\r\n          name: {{contextmenuColumn.name}}\r\n          prop: {{contextmenuColumn.prop}}\r\n        </p>\r\n      </div>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        @tableContextmenu=\"onTableContextMenu($event)\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ContextMenuDemoComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  columns = [\r\n    { prop: 'name', visible: true },\r\n    { name: 'Gender', visible: true },\r\n    { name: 'Company', visible: true }\r\n  ];\r\n\r\n  rawEvent: Event = null;\r\n  contextmenuRow: Record<string, unknown> = null;\r\n  contextmenuColumn: unknown = null;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  onTableContextMenu(contextMenuEvent: { event: Event; type: string; content: Record<string, unknown> }) {\r\n    console.log(contextMenuEvent);\r\n\r\n    this.rawEvent = contextMenuEvent.event;\r\n    if (contextMenuEvent.type === 'body') {\r\n      this.contextmenuRow = contextMenuEvent.content;\r\n      this.contextmenuColumn = undefined;\r\n    } else {\r\n      this.contextmenuColumn = contextMenuEvent.content;\r\n      this.contextmenuRow = undefined;\r\n    }\r\n\r\n    contextMenuEvent.event.preventDefault();\r\n    contextMenuEvent.event.stopPropagation();\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  name: 'row-css-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Row/Header/Cell CSS Class Demo\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/css.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class='material'\r\n        :rows='rows'\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :rowClass=\"getRowClass\"\r\n        :scrollbarV=\"true\">\r\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" headerClass=\"is-gender\" :cellClass=\"getCellClass\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class RowCssComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  expanded = {};\r\n  timeout: any;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      const rows = JSON.parse(req.response);\r\n      cb(rows.splice(0, 50));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getRowClass(row: { age: number }) {\r\n    return {\r\n      'age-is-ten': (row.age % 10) === 0\r\n    };\r\n  }\r\n\r\n  getCellClass({ row, column, value }: { row: Record<string, unknown>; column: unknown; value: string }): Record<string, unknown> {\r\n    return {\r\n      'is-female': value === 'female'\r\n    };\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  name: 'basic-dark-theme-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Dark Theme\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/dark-theme.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"dark\"\r\n        :rows=\"rows\"\r\n        :loadingIndicator=\"loadingIndicator\"\r\n        :columns=\"columns\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"40\"\r\n        :summaryRow=\"true\"\r\n        :footerHeight=\"40\"\r\n        :limit=\"10\"\r\n        rowHeight=\"auto\"\r\n        :reorderable=\"reorderable\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class DarkThemeComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n\r\n  columns = [\r\n    { prop: 'name', summaryFunc: (): string => null },\r\n    { name: 'Gender', summaryFunc: (cells: Array<string>): string => this.summaryForGender(cells) },\r\n    { name: 'Company', summaryFunc: (): string => null }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n      setTimeout(() => { this.loadingIndicator = false; }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  private summaryForGender(cells: string[]): string {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Dynamic Height w/ Virtual Scrolling\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/dynamic-height.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class='material'\r\n        :rows='rows'\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"getRowHeight\"\r\n        :scrollbarV=\"true\">\r\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Row Height\" prop=\"height\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class DynamicHeightComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  expanded = {};\r\n  timeout: any;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      const rows = JSON.parse(req.response).splice(0, 100);\r\n\r\n      for(const row of rows) {\r\n        row.height = Math.floor(Math.random() * 80) + 50;\r\n      }\r\n\r\n      cb(rows);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getRowHeight(row: Record<string, unknown>) {\r\n    if(!row) return 50;\r\n    if(row.height === undefined) return 50;\r\n    return row.height;\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div style=\"height:100%;display:flex;flex-direction:column;\">\r\n      <h3>\r\n        Client-side Search and Filtering\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/filter.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <input\r\n          type='text'\r\n          style='padding:8px;margin:15px auto;width:30%;'\r\n          placeholder='Type to filter the name column...'\r\n          @keyup='updateFilter($event)'\r\n        />\r\n      <ngx-datatable\r\n          ref=\"table\"\r\n          class=\"material ngx-flex\"\r\n          :columns=\"columns\"\r\n          :columnMode=\"'force'\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"10\"\r\n          :rows=\"rows\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class FilterBarComponent extends Vue {\r\n\r\n  rows: Array<Record<string, string>> = [];\r\n\r\n  temp: Array<Record<string, string>> = [];\r\n\r\n  columns = [\r\n    { prop: 'name' },\r\n    { name: 'Company' },\r\n    { name: 'Gender' }\r\n  ];\r\n  table: any; // DatatableComponent;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, string>>) => {\r\n      // cache our list\r\n      this.temp = [...data];\r\n\r\n      // push our inital complete list\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  mounted() {\r\n    this.table = this.$refs.table;\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, string>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  updateFilter(event: KeyboardEvent) {\r\n    const val = (event.target as unknown as { value: string }).value.toLowerCase();\r\n\r\n    // filter our data\r\n    const temp = this.temp.filter(function(d) {\r\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n\r\n    // update the rows\r\n    this.rows = temp;\r\n    // Whenever the filter changes, always go back to the first page\r\n    this.table.offset = 0;\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  name: 'footer-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Custom Footer\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/footer.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        columnMode=\"force\"\r\n        :footerHeight=\"100\"\r\n        :headerHeight=\"50\"\r\n        rowHeight=\"auto\">\r\n        <!-- Footer Template -->\r\n        <template v-slot:footer=\"scope\">\r\n          <div style=\"padding: 5px 10px\">\r\n            <div>\r\n              <strong>Summary</strong>: Gender: Female\r\n            </div>\r\n            <hr style=\"width:100%\" />\r\n            <div>\r\n              Rows: {{scope.rowCount}} |\r\n              Size: {{scope.pageSize}} |\r\n              Current: {{scope.curPage}} |\r\n              Offset: {{scope.offset}}\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class FooterDemoComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  columns = [\r\n    { prop: 'name' },\r\n    { name: 'Gender' },\r\n    { name: 'Company' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\nimport { TableColumn } from 'types/table-column.type';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'vue-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Full Screen\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/fullscreen.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material fullscreen\"\r\n        style=\"top: 52px\"\r\n        :columns=\"columns\"\r\n        columnMode=\"standard\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :rowIdentity=\"rowIdentity\"\r\n        :scrollbarV=\"true\"\r\n        :scrollbarH=\"true\"\r\n        :rows=\"rows\"\r\n        @rendered=\"onRendered\"\r\n        >\r\n        <!-- <vue-datatable-column name=\"Id\" :width=\"80\"></vue-datatable-column>\r\n        <vue-datatable-column name=\"Name\" :width=\"300\">\r\n          <span slot=\"header\"><strong>FullName</strong></span> -->\r\n          <!-- <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <span style=\"margin-left: 10px\"><i>{{ scope.row.name }}</i></span>\r\n          </template> -->\r\n        <!-- </vue-datatable-column>\r\n        <vue-datatable-column name=\"Gender\"></vue-datatable-column>\r\n        <vue-datatable-column name=\"Age\"></vue-datatable-column>\r\n        <vue-datatable-column name=\"City\" :width=\"300\" prop=\"address.city\"></vue-datatable-column>\r\n        <vue-datatable-column name=\"State\" :width=\"300\" prop=\"address.state\"></vue-datatable-column> -->\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class FullScreenComponent extends Vue {\r\n  rows: Array<Record<string, unknown>> = [];\r\n  columns: TableColumn[] = [];\r\n  //   {\r\n  //     name: 'Id',\r\n  //     width: 80,\r\n  //   },\r\n  //   {\r\n  //     name: 'Name',\r\n  //     width: 300,\r\n  //   },\r\n  //   {\r\n  //     name: 'Gender',\r\n  //     // width: 150,\r\n  //   },\r\n  //   {\r\n  //     name: 'Age',\r\n  //     width: 150,\r\n  //   },\r\n  //   {\r\n  //     name: 'City',\r\n  //     width: 300,\r\n  //     prop: 'address.city',\r\n  //   },\r\n  //   {\r\n  //     name: 'State',\r\n  //     width: 300,\r\n  //     prop: 'address.state',\r\n  //   },\r\n  // ];\r\n  created() {\r\n    this.fetch((data: { cols: Array<string>, data: Array<Record<string, unknown>> }) => {\r\n      data.cols.forEach(col => {\r\n        this.columns.push({ name: col, prop: col });\r\n      });\r\n      this.rows = data.data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: { cols: Array<string>, data: Array<Record<string, unknown>> }) => void) {\r\n    const req = new XMLHttpRequest();\r\n    // req.open('GET', `assets/data/100k.json`);\r\n    req.open('GET', `assets/data/columns20.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onRendered() {\r\n    //\r\n  }\r\n\r\n  rowIdentity(row: { Id: string | number }): number | string {\r\n    if (!row) {\r\n      return null;\r\n    }\r\n    return row.Id;\r\n  }\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  name: 'inline-edit-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Inline Editing\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/inline.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :headerHeight=\"50\"\r\n        :limit=\"5\"\r\n        columnMode=\"force\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        :rows=\"rows\">\r\n        <ngx-datatable-column name=\"Name\">\r\n          <template v-slot:default=\"scope\">\r\n            <span\r\n              title=\"Double click to edit\"\r\n              @dblclick=\"dblclick(true, scope.rowIndex, 'name', scope.updateCell)\"\r\n              v-if=\"scope.row && !editing[scope.rowIndex + '-name']\">\r\n              {{scope.row.name}}\r\n            </span>\r\n            <input v-else-if=\"editing[scope.rowIndex+ '-name']\"\r\n              autofocus\r\n              @blur=\"updateValue($event, 'name', scope.rowIndex)\"\r\n              type=\"text\"\r\n              :value=\"scope.row.name\"\r\n            />\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\">\r\n          <template v-slot:default=\"scope\">\r\n             <span\r\n              title=\"Double click to edit\"\r\n              @dblclick=\"dblclick(true, scope.rowIndex, 'gender', scope.updateCell)\"\r\n              v-if=\"scope.row && !editing[scope.rowIndex + '-gender']\">\r\n              {{scope.row.gender}}\r\n            </span>\r\n            <select\r\n              v-if=\"editing[scope.rowIndex + '-gender']\"\r\n              @blur=\"editing[scope.rowIndex + '-gender'] = false\"\r\n              @change=\"updateValue($event, 'gender', scope.rowIndex)\"\r\n              :value=\"scope.row.gender\">\r\n              <option value=\"male\">Male</option>\r\n              <option value=\"female\">Female</option>\r\n            </select>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\">\r\n          <template v-slot:default=\"scope\">\r\n            <span v-if=\"scope.row\">{{scope.row.age}}</span>\r\n          </template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class InlineEditComponent extends Vue {\r\n\r\n  editing = {};\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  dblclick(edit: boolean, rowIndex: number, prop: string, update: () => void) {\r\n    // this.editing[`${rowIndex}-${prop}`] = edit;\r\n    this.$set(this.editing, `${rowIndex}-${prop}`, edit);\r\n    update();\r\n  }\r\n\r\n  updateValue(event: Event, cell: string, rowIndex: number) {\r\n    console.log('inline editing rowIndex', rowIndex);\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    this.rows[rowIndex][cell] = (event.target as unknown as { value: string }).value;\r\n    this.rows = [...this.rows];\r\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  name: 'live-data-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Live Data Demo\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/live.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" @click=\"start\">Start</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"stop\">Stop</a> | \r\n          <a href=\"javascript:void(0)\" @click=\"add\">Add</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"remove\">Remove</a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :headerHeight=\"50\"\r\n        :limit=\"5\"\r\n        columnMode=\"force\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        trackByProp=\"updated\"\r\n        :rows=\"rows\">\r\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class LiveDataComponent extends Vue {\r\n\r\n  count: number = 50;\r\n  rows: any[] = [];\r\n  temp: any[] = [];\r\n  cols: any = [\r\n    'name', 'gender', 'company'\r\n  ];\r\n  id: any;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.map(d => {\r\n        d.updated = Date.now().toString();\r\n        return d;\r\n      });\r\n\r\n      this.temp = [...this.rows];\r\n    });\r\n\r\n    this.start();\r\n  }\r\n\r\n  randomNum(start: number, end: number): number {\r\n    return Math.floor(Math.random() * end) + start;\r\n  }\r\n\r\n  start(): void {\r\n    if(this.id) return;\r\n\r\n    this.id = setInterval(this.updateRandom.bind(this), 50);\r\n  }\r\n\r\n  stop(): void {\r\n    clearInterval(this.id);\r\n    this.id = null;\r\n  }\r\n\r\n  add() {\r\n    this.rows.splice(0, 0, this.temp[this.count++]);\r\n  }\r\n\r\n  remove() {\r\n    this.rows.splice(0, this.rows.length);\r\n  }\r\n\r\n  updateRandom() {\r\n    if (this.rows.length <= 2) {\r\n      return;\r\n    }\r\n    const rowNum = this.randomNum(0, Math.min(5, this.rows.length - 1));\r\n    const cellNum = this.randomNum(0, 3);\r\n    const newRow = this.randomNum(0, this.rows.length - 1);\r\n    const prop = this.cols[cellNum];\r\n    const rows = this.rows;\r\n\r\n    if(rows.length && rows[newRow]) {\r\n      const row = rows[rowNum];\r\n      row[prop] = rows[newRow][prop];\r\n      row.updated = Date.now().toString();\r\n    }\r\n    // this.rows = [...this.rows];\r\n  }\r\n\r\n  fetch(cb: any): void {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  name: 'multiple-tables-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Multiple Tables\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/multiple.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows1\"\r\n        :columns=\"columns1\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"0\"\r\n        :rowHeight=\"100\">\r\n      </ngx-datatable>\r\n      <br />\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows2\"\r\n        :columns=\"columns2\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class MultipleTablesComponent extends Vue {\r\n\r\n  columns1 = [\r\n    { prop: 'name' },\r\n    { name: 'Gender' },\r\n    { name: 'Company' }\r\n  ];\r\n\r\n  columns2 = [\r\n    { prop: 'name', name: 'Name' },\r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  rows1 = [\r\n    { name: 'Larry', gender: 'Male', company: 'Cisco' },\r\n    { name: 'Lauren', gender: 'Female', company: 'HP' }\r\n  ];\r\n\r\n  rows2 = [\r\n    { name: 'Callie', gender: 'Female' },\r\n    { name: 'Maggie', gender: 'Female' }\r\n  ];\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  name: 'row-details-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Row Detail Demo\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/row-detail.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" @click=\"expandAllRows\">Expand All</a> | \r\n          <a href=\"javascript:void(0)\" @click=\"collapseAllRows\">Collapse All</a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        ref=\"table\"\r\n        class=\"material expandable\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :rows=\"rows\"\r\n        rowDetailHeight=\"100\"\r\n        @page=\"onPage($event)\"\r\n        @detail-toggle=\"onDetailToggle($event)\">\r\n\r\n        <!-- Row Detail Template -->\r\n        <template slot=\"rowDetail\" slot-scope=\"scope\" v-if=\"scope.row\">\r\n          <div style=\"padding-left:35px;\">\r\n            <div><strong>Address</strong></div>\r\n            <div>{{scope.row.address.city}}, {{scope.row.address.state}}</div>\r\n          </div>\r\n        </template>\r\n\r\n        <!-- Column Templates -->\r\n         <ngx-datatable-column\r\n          :width=\"50\"\r\n          :resizeable=\"false\"\r\n          :sortable=\"false\"\r\n          :draggable=\"false\"\r\n          :canAutoResize=\"false\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <a\r\n              href=\"javascript:void(0)\"\r\n              :class=\"{'datatable-icon-right': !scope.expanded, 'datatable-icon-down': scope.expanded}\"\r\n              title=\"Expand/Collapse Row\"\r\n              @click=\"toggleExpandRow(scope.row)\">\r\n            </a>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Index\" width=\"80\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <strong>{{scope.rowIndex}}</strong>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Expanded\" width=\"80\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <strong>{{scope.expanded}}</strong>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Name\" width=\"200\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <strong>{{scope.row.name}}</strong>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" width=\"300\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <i v-html=\"scope.row['name']\"></i>&nbsp;and&nbsp;<i>{{scope.row.gender}}</i>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" ></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n})\r\nexport default class RowDetailsComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  timeout: any;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  onPage(event: Record<string, unknown>) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      console.log('paged!', event);\r\n    }, 100);\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  toggleExpandRow(row: Record<string, unknown>) {\r\n    console.log('Toggled Expand Row!', row);\r\n    (this.$refs.table as any).toggleExpandDetail(row);\r\n  }\r\n\r\n  onDetailToggle(event: Record<string, unknown>) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  expandAllRows() {\r\n    (this.$refs.table as any).expandAllDetails();\r\n  }\r\n\r\n  collapseAllRows() {\r\n    (this.$refs.table as any).collapseAllDetails();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\ninterface IRow {\r\n  exppayyes: number;\r\n  exppayno: number;\r\n  exppaypending: number;\r\n  source: string;\r\n  name: string;\r\n  gender: string;\r\n  company: string;\r\n  age: number;\r\n  comment: string;\r\n  groupcomment: string;\r\n  startdate?: string;\r\n  enddate?: string;\r\n  groupstatus?: string;\r\n  dt: string;\r\n}\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  name: 'row-grouping-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Row Grouping\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/row-grouping.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n\r\n      <div style=\"margin-left: 50%;\">\r\n        <button @click=\"onExpandAll\">Expand all</button>\r\n        <button @click=\"onCollapseAll\">Collapse all</button>\r\n        <!-- <button @click=\"onAddRow\">Add row</button> -->\r\n      </div>\r\n\r\n      <ngx-datatable\r\n        ref=\"table\"\r\n        class=\"material expandable\"\r\n        :rows=\"rows\"\r\n        :groupRowsBy=\"groupRowsBy\"\r\n        columnMode=\"force\"\r\n        :scrollbarH=\"true\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"40\"\r\n        limit=\"10\"\r\n        :groupExpansionDefault=\"true\"\r\n        :groupRowHeight=\"40\"\r\n        @rendered=\"onRendered\"\r\n        @group-toggle=\"onDetailToggle($event)\">\r\n\r\n        <!-- Group Header Template -->\r\n        <!-- <template v-slot:groupHeader=\"scope\">\r\n          <b style=\"color: white;\">{{groupTitle(scope.group, scope.groupBy)}}</b>\r\n        </template> -->\r\n\r\n        <!-- Row Column Template -->\r\n        <ngx-datatable-column name=\"Exp. Pay.\" prop=\"\" :editable=\"true\" :frozenLeft=\"true\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <input \r\n              type=\"checkbox\" \r\n              :id=\"'ep1' + scope.rowIndex\" \r\n              :name=\"scope.rowIndex\" \r\n              value=\"0\" \r\n              class=\"expectedpayment\" \r\n              @change=\"checkGroup($event, scope.row, scope.rowIndex, scope.group)\" \r\n              :checked=\"scope.row.exppayyes === 1\">\r\n            <label :for=\"'ep1' + scope.rowIndex\"></label>\r\n            <input \r\n              type=\"checkbox\" \r\n              :id=\"'ep2' + scope.rowIndex\" \r\n              :name=\"scope.rowIndex\" \r\n              value=\"1\" \r\n              class=\"expectedpayment2\" \r\n              @change=\"checkGroup($event, scope.row, scope.rowIndex, scope.group)\" \r\n              :checked=\"scope.row.exppayno === 1\">\r\n            <label :for=\"'ep2' + scope.rowIndex\"></label>\r\n            <input \r\n              type=\"checkbox\" \r\n              :id=\"'ep3' + scope.rowIndex\" \r\n              :name=\"scope.rowIndex\" \r\n              value=\"2\" \r\n              class=\"expectedpayment3\" \r\n              @change=\"checkGroup($event, scope.row, scope.rowIndex, scope.group)\" \r\n              :checked=\"scope.row.exppaypending===1\">\r\n            <label :for=\"'ep3' + scope.rowIndex\"></label>\r\n          </template>                    \r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Source\" prop=\"source\" :editable=\"false\" :sortable=\"true\" :frozenLeft=\"true\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Name\" prop=\"name\" :editable=\"true\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" prop=\"gender\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" prop=\"age\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Date\" prop=\"dt\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Comment\" prop=\"comment\" :sortable=\"true\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">           \r\n            <input autofocus\r\n              @blur=\"updateValue($event, 'comment', scope.rowIndex)\"\r\n              type=\"text\" \r\n              name=\"comment\" \r\n              :value=\"scope.row.comment\"/>\r\n          </template>                \r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class RowGroupingComponent  extends Vue {\r\n\r\n  // funder = [];\r\n  // calculated = [];\r\n  // pending = [];\r\n  // groups = [];\r\n  \r\n  editing = {};  \r\n  rows: Array<IRow> = [];\r\n  groupRowsBy = ['age', [{ title: 'Gender', prop: 'gender' }, { title: 'Firm', prop: 'company' }, { title: 'Date', prop: 'dt', valueGetter: (dt: string) => new Date(dt).getFullYear() }]];\r\n  \r\n  created() {\r\n    this.fetch((data) => {\r\n      data.forEach(row => {\r\n        row.dt = new Date().toISOString();\r\n      });\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: ( data: Array<IRow>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/forRowGrouping.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getGroupRowHeight(group: Array<unknown>, rowHeight: unknown) {\r\n    let style = {};\r\n\r\n    style = {\r\n      height: (group.length * 40) + 'px',\r\n      width: '100%'\r\n    };\r\n\r\n    return style;\r\n  }\r\n\r\n  checkGroup(event: { target: { checked: boolean; value: string }}, row: Record<string, unknown>, rowIndex: unknown, group: { rows: Array<IRow> }) {\r\n    let groupStatus: string = 'Pending';\r\n    let expectedPaymentDealtWith: boolean = true;\r\n\r\n    row.exppayyes = 0;\r\n    row.exppayno = 0;\r\n    row.exppaypending = 0;\r\n      \r\n    if (event.target.checked)\r\n      if (event.target.value === '0') { // expected payment yes selected\r\n        row.exppayyes = 1;\r\n      } else if (event.target.value === '1') { // expected payment yes selected\r\n        row.exppayno = 1;\r\n      } else if (event.target.value === '2') { // expected payment yes selected\r\n        row.exppaypending = 1;\r\n      }\r\n    const gr = group.rows;\r\n    if (gr.length === 2) { // There are only 2 lines in a group\r\n      if (['Calculated', 'Funder'].indexOf(gr[0].source) > -1 && ['Calculated', 'Funder'].indexOf(gr[1].source) > -1) { // Sources are funder and calculated\r\n        if (gr[0].startdate === gr[1].startdate && gr[0].enddate === gr[1].enddate) { // Start dates and end dates match\r\n          for (let index = 0; index < gr.length; index++) {\r\n            if (gr[index].source !== row.source) {\r\n              if (event.target.value === '0') { // expected payment yes selected\r\n                gr[index].exppayyes = 0;\r\n                gr[index].exppaypending = 0;\r\n                gr[index].exppayno = 1;\r\n              }\r\n            }\r\n\r\n            if (gr[index].exppayyes === 0 && gr[index].exppayno === 0 && gr[index].exppaypending === 0) {\r\n              expectedPaymentDealtWith = false;\r\n            }\r\n            console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let index = 0; index < gr.length; index++) {\r\n        if (gr[index].exppayyes === 0 && gr[index].exppayno === 0 && gr[index].exppaypending === 0) {\r\n          expectedPaymentDealtWith = false;\r\n        }\r\n        console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\r\n      }      \r\n    }\r\n\r\n    // check if there is a pending selected payment or a row that does not have any expected payment selected\r\n    if (gr.filter(rowFilter => rowFilter.exppaypending === 1).length === 0 \r\n      && gr.filter(rowFilter => rowFilter.exppaypending === 0 \r\n                      && rowFilter.exppayyes === 0 \r\n                      && rowFilter.exppayno === 0).length === 0) {\r\n      console.log('expected payment dealt with');\r\n      \r\n      // check if can set the group status\r\n      const numberOfExpPayYes = gr.filter(rowFilter => rowFilter.exppayyes === 1).length;\r\n      const numberOfSourceFunder = gr.filter(\r\n          rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Funder').length;\r\n      const numberOfSourceCalculated = gr.filter(\r\n          rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Calculated').length;\r\n      const numberOfSourceManual = gr.filter(\r\n          rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Manual').length;\r\n\r\n      console.log('numberOfExpPayYes', numberOfExpPayYes);\r\n      console.log('numberOfSourceFunder', numberOfSourceFunder);\r\n      console.log('numberOfSourceCalculated', numberOfSourceCalculated);\r\n      console.log('numberOfSourceManual', numberOfSourceManual);\r\n\r\n      if (numberOfExpPayYes > 0) {\r\n        if (numberOfExpPayYes === numberOfSourceFunder) {\r\n          groupStatus = 'Funder Selected';\r\n        } else if (numberOfExpPayYes === numberOfSourceCalculated) {\r\n          groupStatus = 'Calculated Selected';\r\n        } else if (numberOfExpPayYes === numberOfSourceManual) {\r\n          groupStatus = 'Manual Selected';\r\n        } else {\r\n          groupStatus = 'Hybrid Selected';\r\n        }\r\n      }\r\n        \r\n    }\r\n\r\n    gr[0].groupstatus = groupStatus;    \r\n  }\r\n\r\n  updateValue(event: { target: { checked: boolean; value: unknown }}, cell: string, rowIndex: number) {\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    const row = this.rows[rowIndex];\r\n    row[cell] = event.target.value;\r\n  }\r\n\r\n  onDetailToggle(event: unknown) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  groupTitle(group: {\r\n    key: string, level: number, rows: unknown[],\r\n    keys: Array<{ title: string, prop: string, value: string }>\r\n  }) {\r\n    let result = '';\r\n    group.keys.forEach(gr => {\r\n      result += `${gr.title} - ${gr.value}; `;\r\n    });\r\n    return result ? result : 'Age - empty';\r\n  }\r\n\r\n  onRendered() {\r\n    //\r\n  }\r\n\r\n  onExpandAll() {\r\n    const table = this.$refs.table;\r\n    if (!table) {\r\n      return;\r\n    }\r\n    (table as unknown as { expandAllGroups: () => void }).expandAllGroups();\r\n  }\r\n\r\n  onCollapseAll() {\r\n    const table = this.$refs.table;\r\n    if (!table) {\r\n      return;\r\n    }\r\n    (table as unknown as { collapseAllGroups: () => void }).collapseAllGroups();\r\n  }\r\n\r\n  // onAddRow() {\r\n  //   this.rows.push({\r\n  //     exppayyes: 1,\r\n  //     exppayno: 0,\r\n  //     exppaypending: 0,\r\n  //     source: 'Funder',\r\n  //     name: 'James Bond',\r\n  //     gender: 'female',\r\n  //     company: 'Samsung, LLC CMP DDC',\r\n  //     age: 22,\r\n  //     comment: 'test1',\r\n  //     groupcomment: 'group comment test  with multiple lines of text. group comment test  with multiple lines of text.',\r\n  //     dt: '2022-02-21T11:26:36.734Z',\r\n  //   });\r\n  // }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\ninterface IRow {\r\n  exppayyes: number;\r\n  exppayno: number;\r\n  exppaypending: number;\r\n  source: string;\r\n  name: string;\r\n  gender: string;\r\n  company: string;\r\n  age: number;\r\n  comment: string;\r\n  groupcomment: string;\r\n  startdate: string;\r\n  enddate: string;\r\n  groupstatus: string;\r\n  dt: string;\r\n}\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  name: 'row-grouping-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Row Grouping\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/row-grouping.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n\r\n      <div style=\"margin-left: 50%;\">\r\n        <button @click=\"onExpandAll\">Expand all</button>\r\n        <button @click=\"onCollapseAll\">Collapse all</button>\r\n      </div>\r\n\r\n      <ngx-datatable\r\n        ref=\"table\"\r\n        class=\"material expandable\"\r\n        :rows=\"rows\"\r\n        :groupRowsBy=\"groupRowsBy\"\r\n        columnMode=\"force\"\r\n        :scrollbarH=\"true\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"40\"\r\n        limit=\"10\"\r\n        :groupExpansionDefault=\"true\"\r\n        :groupRowHeight=\"40\"\r\n        groupHeaderClasses=\"group-header\"\r\n        :groupHeaderStyles=\"groupHeaderStyles\"\r\n        @rendered=\"onRendered\"\r\n        @group-toggle=\"onDetailToggle($event)\">\r\n\r\n        <!-- Group Header Template -->\r\n        <template v-slot:groupHeader=\"scope\">\r\n          <b style=\"color: white;\">{{groupTitle(scope.group, scope.groupBy)}}</b>\r\n        </template>\r\n\r\n        <!-- Row Column Template -->\r\n        <ngx-datatable-column name=\"Exp. Pay.\" prop=\"\" :editable=\"true\" :frozenLeft=\"true\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <input \r\n              type=\"checkbox\" \r\n              :id=\"'ep1' + scope.rowIndex\" \r\n              :name=\"scope.rowIndex\" \r\n              value=\"0\" \r\n              class=\"expectedpayment\" \r\n              @change=\"checkGroup($event, scope.row, scope.rowIndex, scope.group)\" \r\n              :checked=\"scope.row.exppayyes === 1\">\r\n            <label :for=\"'ep1' + scope.rowIndex\"></label>\r\n            <input \r\n              type=\"checkbox\" \r\n              :id=\"'ep2' + scope.rowIndex\" \r\n              :name=\"scope.rowIndex\" \r\n              value=\"1\" \r\n              class=\"expectedpayment2\" \r\n              @change=\"checkGroup($event, scope.row, scope.rowIndex, scope.group)\" \r\n              :checked=\"scope.row.exppayno === 1\">\r\n            <label :for=\"'ep2' + scope.rowIndex\"></label>\r\n            <input \r\n              type=\"checkbox\" \r\n              :id=\"'ep3' + scope.rowIndex\" \r\n              :name=\"scope.rowIndex\" \r\n              value=\"2\" \r\n              class=\"expectedpayment3\" \r\n              @change=\"checkGroup($event, scope.row, scope.rowIndex, scope.group)\" \r\n              :checked=\"scope.row.exppaypending===1\">\r\n            <label :for=\"'ep3' + scope.rowIndex\"></label>\r\n          </template>                    \r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Source\" prop=\"source\" :editable=\"false\" :sortable=\"true\" :frozenLeft=\"true\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Name\" prop=\"name\" :editable=\"true\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" prop=\"gender\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" prop=\"age\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Date\" prop=\"dt\" :sortable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Comment\" prop=\"comment\" :sortable=\"true\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">           \r\n            <input autofocus\r\n              @blur=\"updateValue($event, 'comment', scope.rowIndex)\"\r\n              type=\"text\" \r\n              name=\"comment\" \r\n              :value=\"scope.row.comment\"/>\r\n          </template>                \r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class RowGroupingCustomComponent  extends Vue {\r\n\r\n  // funder = [];\r\n  // calculated = [];\r\n  // pending = [];\r\n  // groups = [];\r\n  \r\n  editing = {};  \r\n  rows: Array<IRow> = [];\r\n  groupRowsBy = ['age', [{ title: 'Gender', prop: 'gender' }, { title: 'Firm', prop: 'company' }, { title: 'Date', prop: 'dt', valueGetter: (dt: string) => new Date(dt).getFullYear() }]];\r\n  \r\n  created() {\r\n    this.fetch((data) => {\r\n      data.forEach(row => {\r\n        row.dt = new Date().toISOString();\r\n      });\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: ( data: Array<IRow>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/forRowGrouping.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getGroupRowHeight(group: Array<unknown>, rowHeight: unknown) {\r\n    let style = {};\r\n\r\n    style = {\r\n      height: (group.length * 40) + 'px',\r\n      width: '100%'\r\n    };\r\n\r\n    return style;\r\n  }\r\n\r\n  checkGroup(event: { target: { checked: boolean; value: string }}, row: Record<string, unknown>, rowIndex: unknown, group: { rows: Array<IRow> }) {\r\n    let groupStatus: string = 'Pending';\r\n    let expectedPaymentDealtWith: boolean = true;\r\n\r\n    row.exppayyes = 0;\r\n    row.exppayno = 0;\r\n    row.exppaypending = 0;\r\n      \r\n    if (event.target.checked)\r\n      if (event.target.value === '0') { // expected payment yes selected\r\n        row.exppayyes = 1;\r\n      } else if (event.target.value === '1') { // expected payment yes selected\r\n        row.exppayno = 1;\r\n      } else if (event.target.value === '2') { // expected payment yes selected\r\n        row.exppaypending = 1;\r\n      }\r\n    const gr = group.rows;\r\n    if (gr.length === 2) { // There are only 2 lines in a group\r\n      if (['Calculated', 'Funder'].indexOf(gr[0].source) > -1 && ['Calculated', 'Funder'].indexOf(gr[1].source) > -1) { // Sources are funder and calculated\r\n        if (gr[0].startdate === gr[1].startdate && gr[0].enddate === gr[1].enddate) { // Start dates and end dates match\r\n          for (let index = 0; index < gr.length; index++) {\r\n            if (gr[index].source !== row.source) {\r\n              if (event.target.value === '0') { // expected payment yes selected\r\n                gr[index].exppayyes = 0;\r\n                gr[index].exppaypending = 0;\r\n                gr[index].exppayno = 1;\r\n              }\r\n            }\r\n\r\n            if (gr[index].exppayyes === 0 && gr[index].exppayno === 0 && gr[index].exppaypending === 0) {\r\n              expectedPaymentDealtWith = false;\r\n            }\r\n            console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let index = 0; index < gr.length; index++) {\r\n        if (gr[index].exppayyes === 0 && gr[index].exppayno === 0 && gr[index].exppaypending === 0) {\r\n          expectedPaymentDealtWith = false;\r\n        }\r\n        console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\r\n      }      \r\n    }\r\n\r\n    // check if there is a pending selected payment or a row that does not have any expected payment selected\r\n    if (gr.filter(rowFilter => rowFilter.exppaypending === 1).length === 0 \r\n      && gr.filter(rowFilter => rowFilter.exppaypending === 0 \r\n                      && rowFilter.exppayyes === 0 \r\n                      && rowFilter.exppayno === 0).length === 0) {\r\n      console.log('expected payment dealt with');\r\n      \r\n      // check if can set the group status\r\n      const numberOfExpPayYes = gr.filter(rowFilter => rowFilter.exppayyes === 1).length;\r\n      const numberOfSourceFunder = gr.filter(\r\n          rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Funder').length;\r\n      const numberOfSourceCalculated = gr.filter(\r\n          rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Calculated').length;\r\n      const numberOfSourceManual = gr.filter(\r\n          rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Manual').length;\r\n\r\n      console.log('numberOfExpPayYes', numberOfExpPayYes);\r\n      console.log('numberOfSourceFunder', numberOfSourceFunder);\r\n      console.log('numberOfSourceCalculated', numberOfSourceCalculated);\r\n      console.log('numberOfSourceManual', numberOfSourceManual);\r\n\r\n      if (numberOfExpPayYes > 0) {\r\n        if (numberOfExpPayYes === numberOfSourceFunder) {\r\n          groupStatus = 'Funder Selected';\r\n        } else if (numberOfExpPayYes === numberOfSourceCalculated) {\r\n          groupStatus = 'Calculated Selected';\r\n        } else if (numberOfExpPayYes === numberOfSourceManual) {\r\n          groupStatus = 'Manual Selected';\r\n        } else {\r\n          groupStatus = 'Hybrid Selected';\r\n        }\r\n      }\r\n        \r\n    }\r\n\r\n    gr[0].groupstatus = groupStatus;    \r\n  }\r\n\r\n  updateValue(event: { target: { checked: boolean; value: any }}, cell: string, rowIndex: number) {\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    const row = this.rows[rowIndex];\r\n    row[cell] = event.target.value;\r\n  }\r\n\r\n  onDetailToggle(event: unknown) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n\r\n  groupTitle(group: {\r\n    key: string, level: number, value: any[],\r\n    keys: Array<{ title: string, prop: string, value: string }>\r\n  }) {\r\n    let result = '';\r\n    group.keys.forEach(gr => {\r\n      result += `${gr.title} - ${gr.value}; `;\r\n    });\r\n    return result ? result : 'Age - empty';\r\n  }\r\n\r\n  onRendered() {\r\n    //\r\n  }\r\n\r\n  onExpandAll() {\r\n    const table = this.$refs.table;\r\n    if (!table) {\r\n      return;\r\n    }\r\n    (table as unknown as { expandAllGroups: () => void }).expandAllGroups();\r\n  }\r\n\r\n  onCollapseAll() {\r\n    const table = this.$refs.table;\r\n    if (!table) {\r\n      return;\r\n    }\r\n    (table as unknown as { collapseAllGroups: () => void }).collapseAllGroups();\r\n  }\r\n\r\n  get groupHeaderStyles(): Record<string, string> {\r\n    return {\r\n      'font-size': '18px',\r\n      'font-style': 'italic',\r\n      color: 'white',\r\n    };\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Horizontal and Vertical Scrolling\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/scrolling.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"0\"\r\n        :rowHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :scrollbarH=\"true\">\r\n        <ngx-datatable-column name=\"Name\" :width=\"300\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"City\" :width=\"300\" prop=\"address.city\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"State\" :width=\"300\" prop=\"address.state\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class HorzVertScrolling extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: ( data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  name: 'tabs-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Hidden By Default\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/tabs.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n\r\n      <div style=\"width:75%;margin:0 auto\">\r\n        <div>\r\n          <button type=\"button\" @click=\"tab1=true;tab2=false;tab3=false;\">Nothing</button>\r\n          <button type=\"button\" @click=\"tab2=true;tab1=false;tab3=false;\">Hidden</button>\r\n          <button type=\"button\" @click=\"tab3=true;tab1=false;tab2=false;\">v-if</button>\r\n        </div>\r\n\r\n        <div v-show=\"tab1\">\r\n          <p>Click a button to toggle table visibilities</p>\r\n        </div>\r\n\r\n        <div v-show=\"tab2\">\r\n          <h4>hidden Table</h4>\r\n          <ngx-datatable\r\n            class=\"material\"\r\n            :visibilityCheck=\"true\"\r\n            :rows=\"rows\"\r\n            columnMode=\"force\"\r\n            :headerHeight=\"50\"\r\n            :footerHeight=\"50\"\r\n            :rowHeight=\"50\"\r\n            :scrollbarV=\"true\">\r\n            <ngx-datatable-column name=\"Name\" width=\"200\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Gender\" width=\"300\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Age\" width=\"80\"></ngx-datatable-column>\r\n          </ngx-datatable>\r\n        </div>\r\n\r\n        <div v-if=\"tab3\">\r\n          <h4>v-if Table</h4>\r\n          <ngx-datatable\r\n            class=\"material\"\r\n            :rows=\"rows\"\r\n            columnMode=\"force\"\r\n            :headerHeight=\"50\"\r\n            :footerHeight=\"50\"\r\n            :rowHeight=\"50\"\r\n            :scrollbarV=\"true\">\r\n            <ngx-datatable-column name=\"Name\" width=\"200\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Gender\" width=\"300\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Age\" width=\"80\"></ngx-datatable-column>\r\n          </ngx-datatable>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  `\r\n})\r\nexport default class TabsDemoComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  tab1 = true;\r\n  tab2 = false;\r\n  tab3 = false;\r\n\r\n  created() {\r\n    this.fetch((data) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: ( data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'vue-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Virtual Scrolling with 10k Rows\r\n        <small>\r\n          <a href=\"https://github.com/begemmode/vue-ngx-datatable/blob/master/demo/basic/virtual.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class='material'\r\n        :rows='rows'\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"getRowHeight\"\r\n        :scrollbarV=\"true\"\r\n        @rendered=\"onRendered\">\r\n        <vue-datatable-column name=\"Name\" width=\"300\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <strong>{{scope.row.name}}</strong>\r\n          </template>\r\n        </vue-datatable-column>\r\n        <vue-datatable-column name=\"Gender\" width=\"300\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            <!-- <strong>{{scope.row.name}}</strong> -->\r\n            <i v-html=\"scope.row.name\"></i>&nbsp;and&nbsp;<i>{{scope.row.gender}}</i>\r\n          </template>\r\n        </vue-datatable-column>\r\n        <vue-datatable-column name=\"Row Height\" prop=\"height\" width=\"80\">\r\n        </vue-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class VirtualScrollComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  expanded = {};\r\n  timeout: any;\r\n\r\n  created() {\r\n    this.fetch((data) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  onPage(event: unknown) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      console.log('paged!', event);\r\n    }, 100);\r\n  }\r\n\r\n  fetch(cb: ( data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      const rows = JSON.parse(req.response);\r\n\r\n      for(const row of rows) {\r\n        row.height = Math.floor(Math.random() * 80) + 50;\r\n      }\r\n\r\n      cb(rows);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getRowHeight(row: { height: number }) {\r\n    return row.height;\r\n  }\r\n\r\n  onRendered() {\r\n    //\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport { AppComponent } from './app.component';\r\n\r\n@Component({\r\n  components: {\r\n    app: AppComponent,\r\n  },\r\n})\r\nclass VueRootComponent extends Vue {\r\n}\r\nnew VueRootComponent({ el: '#app-main' }).$mount();\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Flex Column Width Distribution\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/column-flex.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        columnMode=\"flex\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        :rows=\"rows\">\r\n        <ngx-datatable-column name=\"Name\" :flexGrow=\"3\" :resizeable=\"true\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" :flexGrow=\"1\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" :flexGrow=\"1\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ColumnFlexComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Force Fill Column Width Distribution\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/column-force.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        :rows=\"rows\">\r\n        <ngx-datatable-column name=\"Name\" :width=\"100\" :resizeable=\"true\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" :width=\"100\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" :width=\"300\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ColumnForceComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <!-- <style>\r\n    .icon {\r\n      position:absolute;\r\n    }\r\n    .datatable-icon-down {\r\n      top: 0px;\r\n    }\r\n    .datatable-icon-up {\r\n      top: 40px;\r\n    }\r\n    .dragFromLeft .icon {\r\n      left:-13px;\r\n    }\r\n    </style> -->\r\n    <div>\r\n      <h3>\r\n        Reorder Column\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/column-reorder.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :loadingIndicator=\"loadingIndicator\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        :reorderable=\"reorderable\"\r\n        :swapColumns=\"swapColumns\">\r\n      </ngx-datatable>\r\n      <!-- <ng-template #targetMarkerTemplate let-class=\"class\">\r\n        <div [ngClass]=\"class\">\r\n          <div class=\"icon datatable-icon-down\"></div>\r\n          <div class=\"icon datatable-icon-up\"></div>\r\n        </div>\r\n      </ng-template> -->\r\n    </div>\r\n  `\r\n})\r\nexport default class ColumnReorderComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  loadingIndicator: boolean = true;\r\n  reorderable: boolean = true;\r\n  swapColumns: boolean = false;\r\n\r\n  columns = [\r\n    { prop: 'name' },\r\n    { name: 'Gender' },\r\n    { name: 'Company', sortable: false }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n      setTimeout(() => { this.loadingIndicator = false; }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Fixed Column Widths\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/column-standard.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columnMode=\"'standard'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\">\r\n        <ngx-datatable-column name=\"Name\" :width=\"300\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" :width=\"300\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" :width=\"300\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ColumnStandardComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Column Toggling\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/column-toggle.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          columnMode=\"force\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          rowHeight=\"auto\">\r\n          <ngx-datatable-column v-for=\"col of columns\" :key=\"col.name\" :name=\"col.name\" :visible=\"col.visible\">\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n      <div class='selected-column'>\r\n        <h4>Available Columns</h4>\r\n        <ul>\r\n          <li v-for='col of allColumns' :key=\"col.name\">\r\n            <input\r\n              type='checkbox'\r\n              :id=\"col.name\"\r\n              @click='toggle(col)'\r\n              :checked='isChecked(col)'\r\n            />\r\n            <label :attr.for=\"col.name\">{{col.name}}</label>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class ColumnToggleComponent extends Vue {\r\n\r\n  rows = [\r\n    {\r\n      name: 'Claudine Neal',\r\n      gender: 'female',\r\n      company: 'Sealoud'\r\n    },\r\n    {\r\n      name: 'Beryl Rice',\r\n      gender: 'female',\r\n      company: 'Velity'\r\n    }\r\n  ];\r\n\r\n  // columns = [\r\n  //   { name: 'Name' },\r\n  //   { name: 'Gender' },\r\n  //   { name: 'Company' }\r\n  // ];\r\n\r\n  allColumns = [\r\n    { name: 'Name', visible: true },\r\n    { name: 'Gender', visible: true },\r\n    { name: 'Company', visible: false }\r\n  ];\r\n\r\n  get columns() {\r\n    return this.allColumns; // .filter(c => c.visible);\r\n  }\r\n\r\n  toggle(col: { visible: boolean }) {\r\n    col.visible = !col.visible;\r\n    // this.columns = this.allColumns.filter(c => c.visible);\r\n    // this.$nextTick(() => this.columns = this.allColumns.filter(c => c.visible));\r\n    // const isChecked = this.isChecked(col);\r\n\r\n    // if(isChecked) {\r\n    //   this.columns = this.columns.filter(c => { \r\n    //     return c.name !== col.name; \r\n    //   });\r\n    // } else {\r\n    //   this.columns = [...this.columns, col];\r\n    // }\r\n  }\r\n\r\n  isChecked(col: { visible: boolean }) {\r\n    return col.visible;\r\n    // return this.columns.find(c => {\r\n    //   return c.name === col.name;\r\n    // });\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Column Pinning\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/pinning.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div>\r\n        <input\r\n          type='checkbox'\r\n          id=\"check\"\r\n          v-model=\"isVisibleFrozen\"\r\n        />\r\n        <label for=\"check\">Name is visibled</label>\r\n        <input\r\n          type='checkbox'\r\n          id=\"check1\"\r\n          v-model=\"isNameFrozen\"\r\n        />\r\n        <label for=\"check1\">Name is frozen</label>\r\n      </div>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :scrollbarH=\"true\"\r\n        :rows=\"rows\">\r\n        <ngx-datatable-column\r\n          name=\"Name\"\r\n          :width=\"300\"\r\n          :resizeable=\"true\"\r\n          :visible=\"isVisibleFrozen\"\r\n          :frozenLeft=\"isNameFrozen\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column\r\n          name=\"Gender\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column\r\n          name=\"Age\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column\r\n          name=\"City\"\r\n          :width=\"150\"\r\n          prop=\"address.city\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column\r\n          name=\"State\"\r\n          :width=\"300\"\r\n          prop=\"address.state\"\r\n          :frozenRight=\"true\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ColumnPinningComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  isVisibleFrozen = true;\r\n  isNameFrozen = true;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { PagedData } from './model/paged-data';\r\nimport { CorporateEmployee } from './model/corporate-employee';\r\nimport { Page } from './model/page';\r\nconst companyData = require('../../assets/data/company.json');\r\n\r\n/**\r\n * A server used to mock a paged data result from a server\r\n */\r\nexport class MockServerResultsService {\r\n\r\n    constructor(private timeout: number = 0) {\r\n    }\r\n\r\n    /**\r\n     * A method that mocks a paged server response\r\n     * @param page The selected page\r\n     * @returns {any} An observable containing the employee data\r\n     */\r\n    public getResults(page: Page, timeout: number = 0): Promise<PagedData<CorporateEmployee>> {\r\n        return this.getPagedData(page, timeout);\r\n    }\r\n\r\n    /**\r\n     * Package companyData into a PagedData object based on the selected Page\r\n     * @param page The page data used to get the selected data from companyData\r\n     * @returns {PagedData<CorporateEmployee>} An array of the selected data and page\r\n     */\r\n    private async getPagedData(page: Page, timeout: number = 0): Promise<PagedData<CorporateEmployee>> {\r\n        if (timeout) {\r\n            await this.delay(timeout);\r\n        }\r\n        const pagedData = new PagedData<CorporateEmployee>();\r\n        page.totalElements = companyData.length;\r\n        page.totalPages = page.totalElements / page.size;\r\n        const start = page.pageNumber * page.size;\r\n        const end = Math.min((start + page.size), page.totalElements);\r\n        for (let i = start; i < end; i++) {\r\n            const jsonObj = companyData[i];\r\n            // tslint:disable-next-line:max-line-length\r\n            const employee = new CorporateEmployee(jsonObj.id, jsonObj.name, jsonObj.gender, jsonObj.company, jsonObj.age);\r\n            pagedData.data.push(employee);\r\n        }\r\n        pagedData.page = page;\r\n        let resolveFunc: (data: PagedData<CorporateEmployee>) => void;\r\n        const promise = new Promise<PagedData<CorporateEmployee>>(\r\n            resolve => (resolveFunc = resolve)\r\n          );\r\n        setTimeout(() => resolveFunc(pagedData), this.timeout);\r\n        return promise;\r\n    }\r\n\r\n    private delay(timeout: number): Promise<{}> {\r\n        let resolveFunc: (value?: unknown) => void;;\r\n        const promise = new Promise(resolve => (resolveFunc = resolve));\r\n        setTimeout(() => resolveFunc(), timeout);\r\n        return promise;\r\n    }\r\n\r\n}\r\n","/**\r\n * A model for an individual corporate employee\r\n */\r\nexport class CorporateEmployee {\r\n    id: string;\r\n    name: string;\r\n    gender: string;\r\n    company: string;\r\n    age: number;\r\n\r\n    constructor(id: string, name: string, gender: string, company: string, age: number){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.gender = gender;\r\n        this.company = company;\r\n        this.age = age;\r\n    }\r\n}\r\n","/**\r\n * An object used to get page information from the server\r\n */\r\nexport class Page {\r\n    // The number of elements in the page\r\n    size: number = 0;\r\n    // The total number of elements\r\n    totalElements: number = 0;\r\n    // The total number of pages\r\n    totalPages: number = 0;\r\n    // The current page number\r\n    pageNumber: number = 0;\r\n}\r\n","import {Page} from './page';\r\n\r\n/**\r\n * An array of data with an associated page object used for paging\r\n */\r\nexport class PagedData<T> {\r\n    data = new Array<T>();\r\n    page = new Page();\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Client-side Paging\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/paging/paging-client.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style=\"height:100%;\">\r\n      <ngx-datatable\r\n        class=\"material ngx-flex\"\r\n        :rows=\"rows\"\r\n        :columns=\"[{name:'Name'},{name:'Gender'},{name:'Company'}]\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        :limit=\"30\">\r\n      </ngx-datatable>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class ClientPagingComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  page = 2;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport {MockServerResultsService} from './mock-server-results-service';\r\nimport {CorporateEmployee} from './model/corporate-employee';\r\nimport {Page} from './model/page';\r\n\r\n@Component({\r\n  name: 'paging-scrolling-novirtualization-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side Paging\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/paging/paging-server.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"[{name:'Name'},{name:'Gender'},{name:'Company'}]\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        :scrollbarV=\"true\"\r\n        :virtualization=\"false\"\r\n        :externalPaging=\"true\"\r\n        :count=\"page.totalElements\"\r\n        :offset=\"page.pageNumber\"\r\n        :limit=\"page.size\"\r\n        @page=\"setPage($event)\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class PagingScrollingNoVirtualizationComponent extends Vue {\r\n\r\n  page = new Page();\r\n  rows = new Array<CorporateEmployee>();\r\n  serverResultsService = new MockServerResultsService(100);\r\n\r\n  created() {\r\n    this.page.pageNumber = 0;\r\n    this.page.size = 20;\r\n  }\r\n\r\n  mounted() {\r\n    this.setPage({ offset: 0 });\r\n  }\r\n\r\n  /**\r\n   * Populate the table with new data based on the page number\r\n   * @param page The page to select\r\n   */\r\n  async setPage(pageInfo: { pageNumber?: number; offset: number }) {\r\n    this.page.pageNumber = pageInfo.offset;\r\n    const pagedData = await this.serverResultsService.getResults(this.page);\r\n    this.page = pagedData.page;\r\n    this.rows = pagedData.data;\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport {MockServerResultsService} from './mock-server-results-service';\r\nimport {CorporateEmployee} from './model/corporate-employee';\r\nimport {Page} from './model/page';\r\n\r\n@Component({\r\n  name: 'server-paging-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side Paging\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/paging/paging-server.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"[{name:'Name'},{name:'Gender'},{name:'Company'}]\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        :externalPaging=\"true\"\r\n        :count=\"page.totalElements\"\r\n        :offset=\"page.pageNumber\"\r\n        :limit=\"page.size\"\r\n        @page=\"setPage($event)\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ServerPagingComponent extends Vue {\r\n\r\n  page = new Page();\r\n  rows = new Array<CorporateEmployee>();\r\n  serverResultsService = new MockServerResultsService(100);\r\n\r\n  created() {\r\n    this.page.pageNumber = 0;\r\n    this.page.size = 20;\r\n  }\r\n\r\n  mounted() {\r\n    this.setPage({ offset: 0 });\r\n  }\r\n\r\n  /**\r\n   * Populate the table with new data based on the page number\r\n   * @param page The page to select\r\n   */\r\n  async setPage(pageInfo: { pageNumber?: number; offset: number }) {\r\n    this.page.pageNumber = pageInfo.offset;\r\n    const pagedData = await this.serverResultsService.getResults(this.page);\r\n    this.page = pagedData.page;\r\n    this.rows = pagedData.data;\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport {MockServerResultsService} from './mock-server-results-service';\r\nimport {CorporateEmployee} from './model/corporate-employee';\r\nimport {Page} from './model/page';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Virtual Server-side Paging\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/paging/paging-virtual.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :externalPaging=\"true\"\r\n        :loadingIndicator=\"isLoading > 0\"\r\n        :count=\"totalElements\"\r\n        :offset=\"pageNumber\"\r\n        @page=\"setPage($event)\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class VirtualPagingComponent extends Vue {\r\n\r\n  page: Page = null;\r\n  rows: Array<CorporateEmployee> = null;\r\n  columns = [{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }];\r\n  cache: any = {};\r\n  serverResultsService: MockServerResultsService;\r\n  isLoading = 0;\r\n  totalElements: number = 0;\r\n\r\n  created() {\r\n    this.serverResultsService = new MockServerResultsService();\r\n    setTimeout(() => {\r\n      this.page = new Page();\r\n      this.page.pageNumber = 4;\r\n    }, 1000);\r\n  }\r\n\r\n  get pageNumber() {\r\n    return this?.page?.pageNumber;\r\n  }\r\n\r\n  /**\r\n   * Populate the table with new data based on the page number\r\n   * @param page The page to select\r\n   */\r\n  async setPage(pageInfo: { pageNumber?: number; offset: number; pageSize: number }) {\r\n    if (!this.page || (this.rows?.length && pageInfo.offset === this.page.pageNumber)) {\r\n      return;\r\n    }\r\n    this.page.pageNumber = pageInfo.offset;\r\n    this.page.size = pageInfo.pageSize;\r\n\r\n    // cache results\r\n    if (this.cache[this.page.pageNumber]) return;\r\n    \r\n    // counter of pages loading\r\n    this.isLoading++;\r\n\r\n    let prevPagedData = null;\r\n    let page = this.page.pageNumber;\r\n    // for last page we will load prev page data too\r\n    if (pageInfo.offset === Math.floor(this.page.totalPages) && pageInfo.offset - 1 > 0 && !this.cache[pageInfo.offset - 1]) {\r\n      this.page.pageNumber = pageInfo.offset - 1;\r\n      page = this.page.pageNumber;\r\n      prevPagedData = await this.serverResultsService.getResults(this.page, new Date(Date.now() + 1000 * Math.random()).getMilliseconds());\r\n      this.page.pageNumber = pageInfo.offset;\r\n    }\r\n\r\n    const pagedData = await this.serverResultsService.getResults(this.page, new Date(Date.now() + 1000 * Math.random()).getMilliseconds());\r\n    if (prevPagedData && Array.isArray(prevPagedData.data)) {\r\n      pagedData.data = [...prevPagedData.data, ...pagedData.data]; \r\n    }\r\n\r\n    this.totalElements = pagedData.page.totalElements;\r\n\r\n    // create array to store data if missing\r\n    if (!this.rows) {\r\n      // length should be total count\r\n      this.rows = new Array<CorporateEmployee>(this.page.totalElements || 0);\r\n    }\r\n    \r\n    // calc start\r\n    const start = page * this.page.size;\r\n\r\n    // copy rows\r\n    const rows = [...this.rows];\r\n\r\n    // insert rows into new position\r\n    rows.splice(start, pagedData.data.length, ...pagedData.data);\r\n\r\n    // set rows to our new rows\r\n    this.rows = rows;\r\n\r\n    // add flag for results\r\n    this.cache[page] = true;\r\n    this.cache[pageInfo.offset] = true;\r\n    this.isLoading--;\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Selection Callback to Before Row Selection Check\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-before-select-check.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          :columnMode=\"'force'\"\r\n          :columns=\"columns\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"5\"\r\n          :beforeSelectRowCheck=\"beforeSelectCheck\"\r\n          :selected=\"selected\"\r\n          selectionType=\"single\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class BeforeSelectionCheckComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  selected: Array<Record<string, unknown>> = [];\r\n\r\n  columns: any[] = [\r\n    { prop: 'name'} , \r\n    { name: 'Company' }, \r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  beforeSelectCheck(newRow: Record<string, unknown>, oldSelected: Record<string, unknown>[]): boolean {\r\n    console.log('Before select check', newRow, oldSelected);\r\n    if (newRow.name !== 'Ethel Price') {\r\n      return true;\r\n    }\r\n    return confirm('Do you want to select Ethel Price?');\r\n  }\r\n\r\n}\r\n","import { TableColumn } from 'types/table-column.type';\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Cell Selection\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-cell.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material selection-cell\"\r\n        :rows=\"rows\"\r\n        columnMode=\"force\"\r\n        :columns=\"columns\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :selected=\"selected\"\r\n        :scrollbarV=\"true\"\r\n        selectionType=\"cell\"\r\n        @select=\"onSelect($event)\"\r\n        @activate=\"onActivate($event)\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class CellSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  selected: Array<Record<string, unknown>> = [];\r\n  columns: TableColumn[] = [\r\n    { prop: 'name'} , \r\n    { name: 'Company' }, \r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onFocus(event: FocusEvent) {\r\n    console.log('foooccuuuss', event);\r\n  }\r\n\r\n  onSelect(event: Array<Record<string, unknown>>) {\r\n    console.log('Event: select', event, this.selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Event: activate', event);\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Checkbox Selection with \"check is no select\" mode\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-chkbox.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" @click=\"add()\">Add</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"update()\">Update</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"remove()\">Remove</a> \r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <ngx-datatable\r\n          style=\"width: 90%\"\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          columnMode=\"force\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          rowHeight=\"auto\"\r\n          :limit=\"5\"\r\n          :selected=\"selected\"\r\n          :checked=\"checked\"\r\n          selectionType=\"single\"\r\n          checkMode=\"checkNoSelect\"\r\n          :selectAllRowsOnPage=\"true\"\r\n          :displayCheck=\"displayCheck\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'\r\n          @check='onCheck($event)'>\r\n          <ngx-datatable-column\r\n            :width=\"30\"\r\n            :sortable=\"false\"\r\n            :canAutoResize=\"false\"\r\n            :draggable=\"false\"\r\n            :resizeable=\"false\"\r\n            :headerCheckboxable=\"true\"\r\n            :checkboxable=\"true\">\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections <small>({{ selected ? selected.length: 0 }})</small></h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected || !selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n      <div class='selected-column'>\r\n        <h4>Checked rows <small>({{ checked ? checked.length: 0 }})</small></h4>\r\n        <ul>\r\n          <li v-for='check of checked'>\r\n            {{check.name}}\r\n          </li>\r\n          <li v-if=\"!checked || !checked.length\">No checked rows</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class CheckNoSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  selected: Array<Record<string, unknown>> = [];\r\n  checked: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onCheck({ checked }: { checked: Array<Record<string, unknown>> }) {\r\n    console.log('Check Event', checked, this.checked);\r\n\r\n    this.checked.splice(0, this.checked.length);\r\n    this.checked.push(...checked);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  add() {\r\n    this.selected.push(this.rows[1], this.rows[3]);\r\n  }\r\n\r\n  update() {\r\n    this.selected = [ this.rows[1], this.rows[3] ];\r\n  }\r\n\r\n  remove() {\r\n    this.selected = [];\r\n  }\r\n\r\n  displayCheck(row: Record<string, unknown>) {\r\n    return row.name !== 'Ethel Price';\r\n  }\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Custom Checkbox Selection\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-chkbox-template.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" @click=\"add()\">Add</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"update()\">Update</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"remove()\">Remove</a> \r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <ngx-datatable\r\n          style=\"width: 90%\"\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          :columnMode=\"'force'\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"5\"\r\n          :selected=\"selected\"\r\n          :selectionType=\"'checkbox'\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n          <ngx-datatable-column :width=\"30\" \r\n                :sortable=\"false\" \r\n                :canAutoResize=\"false\" :draggable=\"false\" :resizeable=\"false\">\r\n              <template slot=\"header\">\r\n                <input id=\"chb\" type=\"checkbox\" :checked=\"allSelected\" @change=\"selectAll\"/>\r\n              </template>\r\n              <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n                <input type=\"checkbox\" :checked=\"isSelected(scope.row)\" @change=\"onCheckboxChange($event, scope.row)\"/>\r\n              </template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections <small>({{ selected ? selected.length : 0 }})</small></h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected || !selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class CustomCheckboxSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  selected: Array<Record<string, unknown>> = [];\r\n  allSelected = false;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  selectAll() {\r\n    this.allSelected = !this.allSelected;\r\n    this.allSelected ? this.selected = [...this.rows] : this.selected = [];\r\n  }\r\n\r\n  isSelected(row: Record<string, unknown>) {\r\n    return this.selected.find(r => r === row);\r\n  }\r\n\r\n  onCheckboxChange(event: unknown, row: Record<string, unknown>) {\r\n    const found = this.isSelected(row);\r\n    if (!found) {\r\n      this.selected.push(row);\r\n    } else {\r\n      const i = this.selected.findIndex(r => r === row);\r\n      this.selected.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  add() {\r\n    this.selected.push(this.rows[1], this.rows[3]);\r\n  }\r\n\r\n  update() {\r\n    this.selected = [this.rows[1], this.rows[3]];\r\n  }\r\n\r\n  remove() {\r\n    this.selected = [];\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Checkbox Selection\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-chkbox.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" @click=\"add()\">Add</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"update()\">Update</a> |\r\n          <a href=\"javascript:void(0)\" @click=\"remove()\">Remove</a> \r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <ngx-datatable\r\n          style=\"width: 90%\"\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          :columnMode=\"'force'\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"5\"\r\n          :selected=\"selected\"\r\n          selectionType=\"checkbox\"\r\n          :selectAllRowsOnPage=\"true\"\r\n          :displayCheck=\"displayCheck\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n          <ngx-datatable-column\r\n            :width=\"30\"\r\n            :sortable=\"false\"\r\n            :canAutoResize=\"false\"\r\n            :draggable=\"false\"\r\n            :resizeable=\"false\"\r\n            :headerCheckboxable=\"true\"\r\n            :checkboxable=\"true\">\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections <small>({{ selected ? selected.length: 0 }})</small></h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected || !selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class CheckboxSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  selected: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  add() {\r\n    this.selected.push(this.rows[1], this.rows[3]);\r\n  }\r\n\r\n  update() {\r\n    this.selected = [ this.rows[1], this.rows[3] ];\r\n  }\r\n\r\n  remove() {\r\n    this.selected = [];\r\n  }\r\n\r\n  displayCheck(row: Record<string, unknown>) {\r\n    return row.name !== 'Ethel Price';\r\n  }\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Selection Callback to Disable Selections\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-disabled.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          :columnMode=\"'force'\"\r\n          :columns=\"columns\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"5\"\r\n          :selectCheck=\"checkSelectable\"\r\n          :selected=\"selected\"\r\n          :selectionType=\"'multi'\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class MultiDisableSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  selected: Array<Record<string, unknown>> = [];\r\n\r\n  columns: any[] = [\r\n    { prop: 'name'} , \r\n    { name: 'Company' }, \r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  checkSelectable(event: Record<string, unknown>) {\r\n    console.log('Checking if selectable', event);\r\n    return event.name !== 'Ethel Price';\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Multi Click Selection\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-multi-click.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <div class=\"info\">\r\n          <p>This demonstrates multi selection table, where any click event causes a selection.</p>\r\n        </div>\r\n\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          :columnMode=\"'force'\"\r\n          :columns=\"columns\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"5\"\r\n          :selected=\"selected\"\r\n          :selectionType=\"'multiClick'\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class MultiClickSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  selected: Array<Record<string, unknown>> = [];\r\n\r\n  columns: any[] = [\r\n    { prop: 'name'} , \r\n    { name: 'Company' }, \r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Multi Select\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-multi.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <div class=\"info\">\r\n          <p>This demonstrates multi selection table, use CTRL or SHIFT click to select multiple items.</p>\r\n        </div>\r\n\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          :columnMode=\"'force'\"\r\n          :columns=\"columns\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"'auto'\"\r\n          :limit=\"5\"\r\n          :selected=\"selected\"\r\n          :selectionType=\"'multi'\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class MultiSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  selected: Array<Record<string, unknown>> = [];\r\n\r\n  columns: any[] = [\r\n    { prop: 'name'} , \r\n    { name: 'Company' }, \r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Single Row Selection\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/selection/selection-single.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style='float:left;width:75%'>\r\n        <div class=\"info\">\r\n          <p>This demonstrates a simple single selection table with the 3rd row selected by default.</p>\r\n        </div>\r\n\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          :rows=\"rows\"\r\n          columnMode=\"force\"\r\n          :columns=\"columns\"\r\n          :headerHeight=\"50\"\r\n          :footerHeight=\"50\"\r\n          :rowHeight=\"50\"\r\n          :scrollbarV=\"true\"\r\n          :selected=\"selected\"\r\n          selectionType=\"single\"\r\n          @activate=\"onActivate($event)\"\r\n          @select='onSelect($event)'>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class='selected-column'>\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li v-for='sel of selected'>\r\n            {{sel.name}}\r\n          </li>\r\n          <li v-if=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport default class SingleSelectionComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  selected: Array<Record<string, unknown>> = [];\r\n\r\n  columns: any[] = [\r\n    { prop: 'name'} , \r\n    { name: 'Company' }, \r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.selected = [data[2]];\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }: { selected: Array<Record<string, unknown>> }) {\r\n    // console.log('Select Event', selected, this.selected);\r\n  }\r\n\r\n  onActivate(event: Record<string, unknown>) {\r\n    // console.log('Activate Event', event);\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Client-side Sorting\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/sorting/sorting-client.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        :sortType=\"'multi'\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :goToFirstAfterSort=\"false\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ClientSortingComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  columns = [\r\n    { name: 'Company' },\r\n    { name: 'Name' },\r\n    { name: 'Gender' }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      const data = JSON.parse(req.response);\r\n      cb(data);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Custom Sorting Comparator\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/sorting/sorting-comparator.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class SortingComparatorComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  columns = [\r\n    { name: 'Company', comparator: this.companyComparator.bind(this) },\r\n    { name: 'Name', sortable: false },\r\n    { name: 'Gender', sortable: false }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      const data = JSON.parse(req.response);\r\n      cb(data.splice(0, 20));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  companyComparator(propA: string, propB: string) {\r\n    console.log('Sorting Comparator', propA, propB);\r\n\r\n    // Just a simple sort function comparisoins\r\n    if (propA.toLowerCase() < propB.toLowerCase()) return -1;\r\n    if (propA.toLowerCase() > propB.toLowerCase()) return 1;\r\n  }\r\n\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Client-side Sorting\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/sorting/sorting-default.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :sorts=\"[{prop: 'name', dir: 'desc'}]\">\r\n\r\n        <ngx-datatable-column name=\"Company\">\r\n          <!-- <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            {{ scope.row.company }}\r\n          </template> -->\r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Name\" :sortable=\"true\">\r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Gender\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class DefaultSortingComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      const data = JSON.parse(req.response);\r\n      cb(data);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { ISortEvent } from 'types/sort-prop-dir.type';\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side Sorting\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/sorting/sorting-server.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        :externalSorting=\"true\"\r\n        :loadingIndicator=\"loading\"\r\n        @sort=\"onSort($event)\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class ServerSortingComponent extends Vue {\r\n\r\n  loading: boolean = false;\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  columns = [\r\n    { name: 'Company', sortable: true },\r\n    { name: 'Name', sortable: true },\r\n    { name: 'Gender', sortable: true }\r\n  ];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      const data = JSON.parse(req.response);\r\n      cb(data.splice(0, 20));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSort(event: { sorts: ISortEvent }) {\r\n    // event was triggered, start sort sequence\r\n    console.log('Sort Event', event);\r\n    this.loading = true;\r\n    // emulate a server request with a timeout\r\n    setTimeout(() => {\r\n      const rows = [...this.rows];\r\n      // this is only for demo purposes, normally\r\n      // your server would return the result for\r\n      // you and you would just set the rows prop\r\n      const sort = event.sorts[0];\r\n      rows.sort((a, b) => {\r\n        return (a[sort.prop] as string).localeCompare(b[sort.prop] as string) * (sort.dir === 'desc' ? -1 : 1);\r\n      });\r\n\r\n      this.rows = rows;\r\n      this.loading = false;\r\n    }, 1000);\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\nimport './summary-row-inline-html.component.scss';\r\n\r\n@Component({\r\n  name: 'summary-row-inline-html',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>Inline HTML template\r\n        <small>\r\n        <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/summary/summary-row-inline-html.component.ts\">\r\n          Source\r\n        </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :summaryRow=\"enableSummary\"\r\n        :summaryPosition=\"summaryPosition\"\r\n        summaryHeight=\"auto\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        :rows=\"rows\">\r\n        <ngx-datatable-column prop=\"name\">\r\n          <template v-slot:summary=\"scope\">\r\n            <div class=\"name-container\">\r\n              <div class=\"chip\" v-for=\"name of names\">\r\n                <span class=\"chip-content\">{{ name }}</span>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" :summaryFunc=\"summaryForGender\"></ngx-datatable-column>\r\n        <ngx-datatable-column prop=\"age\" :summaryFunc=\"avgAge\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n})\r\n\r\nexport default class SummaryRowInlineHtmlComponent extends Vue {\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  enableSummary = true;\r\n  summaryPosition = 'top';\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  get names(): string[] {\r\n    return this.rows\r\n      .map(row => row['name'])\r\n      .map(fullName => (fullName as string).split(' ')[1]);\r\n  }\r\n\r\n  summaryForGender(cells: string[]) {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n\r\n  avgAge(cells: number[]): number {\r\n    const filteredCells = cells.filter(cell => !!cell);\r\n    return filteredCells.reduce((sum, cell) => sum += cell, 0) / filteredCells.length;\r\n  }\r\n}\r\n","import { Component, Vue, Prop, Watch } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport {MockServerResultsService} from '../paging/mock-server-results-service';\r\nimport {CorporateEmployee} from '../paging/model/corporate-employee';\r\nimport {Page} from '../paging/model/page';\r\n\r\n@Component({\r\n  name: 'summary-row-server-paging-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side paging\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/summary/summary-row-server-paging.component.ts\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :summaryRow=\"true\"\r\n        summaryHeight=\"auto\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\"\r\n        :externalPaging=\"true\"\r\n        :count=\"page.totalElements\"\r\n        :offset=\"page.pageNumber\"\r\n        :limit=\"page.size\"\r\n        @page='setPage($event)'>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class SummaryRowServerPagingComponent extends Vue {\r\n\r\n  page = new Page();\r\n  rows = new Array<CorporateEmployee>();\r\n  serverResultsService = new MockServerResultsService();\r\n\r\n  columns = [\r\n    // NOTE: cells for current page only !\r\n    { name: 'Name', summaryFunc: (cells: Array<string>) => `${cells.length} total` },\r\n    { name: 'Gender', summaryFunc: () => this.getGenderSummary() },\r\n    { name: 'Company', summaryFunc: (): string => null }\r\n  ];\r\n\r\n  created() {\r\n    this.page.pageNumber = 0;\r\n    this.page.size = 20;\r\n  }\r\n\r\n  mounted() {\r\n    this.setPage({ offset: 0 });\r\n  }\r\n\r\n  /**\r\n   * Populate the table with new data based on the page number\r\n   * @param page The page to select\r\n   */\r\n  async setPage(pageInfo: { offset: number }) {\r\n    this.page.pageNumber = pageInfo.offset;\r\n    const pagedData = await this.serverResultsService.getResults(this.page);\r\n    this.page = pagedData.page;\r\n    this.rows = pagedData.data;\r\n  }\r\n\r\n  getGenderSummary(): string {\r\n    // NOTE: there should be logic to get required informations from server\r\n    return '10 males, 10 females';\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\nimport './summary-row-simple.component.scss';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>Simple Summary Row\r\n        <small>\r\n        <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/summary/summary-row-simple.component.ts\">\r\n          Source\r\n        </a>\r\n        </small>\r\n      </h3>\r\n      <div class=\"controls\">\r\n        <div>\r\n          <input\r\n            id=\"enable-summary\"\r\n            type=\"checkbox\"\r\n            :checked=\"enableSummary\"\r\n            @change=\"enableSummary = !enableSummary\">\r\n          <label for=\"enable-summary\">Enable Summary Row</label>\r\n        </div>\r\n        <div>\r\n          <label for=\"position-select\">Position</label>\r\n          <select id=\"position-select\" @change=\"summaryPosition = $event.target.value\">\r\n            <option :value=\"'top'\">Top</option>\r\n            <option :value=\"'bottom'\">Bottom</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :summaryRow=\"enableSummary\"\r\n        :summaryPosition=\"summaryPosition\"\r\n        :summaryHeight=\"'auto'\"\r\n        :columns=\"columns\"\r\n        :columnMode=\"'force'\"\r\n        :headerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        :rows=\"rows\">\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n})\r\n\r\nexport default class SummaryRowSimpleComponent extends Vue {\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  columns = [\r\n    { prop: 'name', summaryFunc: null, },\r\n    { name: 'Gender', summaryFunc: (cells: Array<string>) => this.summaryForGender(cells) },\r\n    { prop: 'age', summaryFunc: (cells: Array<number>) => this.avgAge(cells) },\r\n  ];\r\n\r\n  enableSummary = true;\r\n  summaryPosition = 'top';\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSummaryStateChange(a: unknown) {\r\n    console.log(a);\r\n  }\r\n\r\n  private summaryForGender(cells: string[]) {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n\r\n  private avgAge(cells: number[]): number {\r\n    const filteredCells = cells.filter(cell => !!cell);\r\n    return filteredCells.reduce((sum, cell) => sum += cell, 0) / filteredCells.length;\r\n  }\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  name: 'inline-templates-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Expressive Templates\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/templates/template-dom.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :limit=\"5\"\r\n        rowHeight=\"auto\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\">\r\n          <template v-slot:header=\"scope\">\r\n            <span>Holla! {{scope.column.name}}</span>\r\n          </template>\r\n          <template v-slot:headerAppend=\"scope\">\r\n            <button>+</button>\r\n          </template>\r\n          <template v-slot:default=\"scope\">\r\n            <span v-if=\"scope.row\">Hi: <strong>{{scope.row.name}}</strong></span>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\">\r\n          <template v-slot:header=\"scope\">\r\n            <span>{{scope.column.name}}</span>\r\n          </template>\r\n          <template v-slot:default=\"scope\">\r\n            <div v-if=\"scope.row\">My name is: <i v-html=\"scope.row.name\"></i> and <i>{{scope.row.gender}}</i>\r\n              <br>\r\n              <div>{{joke}}</div>\r\n            </div>\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\">\r\n          <template v-slot:default=\"scope\">\r\n            <div v-if=\"scope.row\" style=\"width:100%;height:40px;border:solid 1px #ddd;margin:5px;padding:3px\">\r\n              <div style=\"background:#999;height:10px\" :style=\"{'width': scope.row.age + '%'}\"></div>\r\n              <span>{{scope.row.age}}</span>\r\n            </div>\r\n          </template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport default class InlineTemplatesComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  joke = 'knock knock';\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 30);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\n\r\n@Component({\r\n  name: 'template-ref-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        TemplateRef via Column Property\r\n         <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/templates/template-obj.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        columnMode=\"force\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        rowHeight=\"auto\">\r\n      </ngx-datatable>\r\n\r\n      <slot name=\"hdrTpl\" v-bind:column=\"column\">\r\n        <strong>Fancy</strong>: {{column.name}} !!\r\n      </slot>\r\n\r\n      <slot name=\"editTmpl\">\r\n        <img\r\n          v-if=\"scope.value === 'male'\"\r\n          width=\"150\"\r\n          src=\"https://media.giphy.com/media/I8nepxWwlEuqI/giphy.gif\"\r\n        />\r\n        <img\r\n          v-if=\"scope.value === 'female'\"\r\n          width=\"150\"\r\n          src=\"https://media.giphy.com/media/sxSVG3XHf7yww/giphy.gif\"\r\n        />\r\n      </slot>\r\n    </div>\r\n  `\r\n})\r\nexport default class TemplateRefTemplatesComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  columns: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.columns = [{\r\n      cellTemplate: this.$slots.editTmpl,\r\n      headerTemplate: this.$slots.hdrTpl,\r\n      name: 'Gender'\r\n    }];\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  get column() {\r\n    return { name: 'columnName' };\r\n  }\r\n\r\n  get scope() {\r\n    return { value: 'male' };\r\n  }\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Flex Column Width Distribution\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/columns/column-flex.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        :columnMode=\"'flex'\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"50\"\r\n        :rowHeight=\"'auto'\"\r\n        treeFromRelation=\"manager\"\r\n        treeToRelation=\"name\"\r\n        :rows=\"rows\"\r\n        @tree-action=\"onTreeAction($event)\">\r\n        <ngx-datatable-column name=\"Name\" :flexGrow=\"3\" :isTreeColumn=\"true\" :sortable=\"true\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row\">\r\n            {{scope.row.name}}\r\n          </template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" :flexGrow=\"1\">\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" :flexGrow=\"1\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    '.icon {height: 10px; width: 10px; }',\r\n    '.disabled {opacity: 0.5; }'\r\n  ],\r\n\r\n})\r\nexport default class ClientTreeComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company_tree.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onTreeAction(event: any) {\r\n    const index = event.rowIndex;\r\n    const row = event.row;\r\n    if (row.treeStatus === 'collapsed') {\r\n      row.treeStatus = 'expanded';\r\n    } else {\r\n      row.treeStatus = 'collapsed';\r\n    }\r\n    this.rows = [...this.rows];\r\n  }\r\n\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Full Screen\r\n        <small>\r\n          <a href=\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/tree/fullscreen.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material fullscreen\"\r\n        style=\"top: 52px\"\r\n        columnMode=\"standard\"\r\n        :headerHeight=\"50\"\r\n        :footerHeight=\"0\"\r\n        :rowHeight=\"50\"\r\n        :scrollbarV=\"true\"\r\n        :scrollbarH=\"true\"\r\n        :rows=\"rows\"\r\n        treeFromRelation=\"parentId\"\r\n        treeToRelation=\"id\"\r\n        :lazyTree=\"true\"\r\n        @tree-action=\"onTreeAction($event)\">\r\n        <ngx-datatable-column name=\"Id\" :width=\"80\"></ngx-datatable-column>\r\n        <ngx-datatable-column\r\n          name=\"Name\"\r\n          :isTreeColumn=\"true\"\r\n          :width=\"300\"\r\n          :treeLevelIndent=\"20\">\r\n          <!-- <ng-template ngx-datatable-tree-toggle let-tree=\"cellContext\">\r\n            <button [disabled]=\"tree.treeStatus==='disabled'\" (click)=\"tree.onTreeAction()\">\r\n              <span *ngIf=\"tree.treeStatus==='loading'\">\r\n                ...\r\n              </span>\r\n              <span *ngIf=\"tree.treeStatus==='collapsed'\">\r\n                ↑\r\n              </span>\r\n              <span *ngIf=\"tree.treeStatus==='expanded'\">\r\n                ↓\r\n              </span>\r\n              <span *ngIf=\"tree.treeStatus==='disabled'\">\r\n                ⃠\r\n              </span>\r\n            </button>\r\n          </ng-template> -->\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"City\" :width=\"300\" prop=\"address.city\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"State\" :width=\"300\" prop=\"address.state\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    '.icon {height: 10px; width: 10px; }',\r\n    '.disabled {opacity: 0.5; }'\r\n  ],\r\n})\r\nexport default class FullScreenTreeComponent extends Vue {\r\n\r\n  rows: Array<Record<string, unknown>> = [];\r\n  lastIndex = 15;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      data = data.slice(1, this.lastIndex);\r\n      this.rows = data.map((d) => {\r\n        this.$set(d, 'treeStatus', 'collapsed');\r\n        d.parentId = null;\r\n        return d;\r\n      });\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      setTimeout(() => {\r\n        cb(JSON.parse(req.response));\r\n      }, 500);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onTreeAction(event: any) {\r\n    const index = event.rowIndex;\r\n    const row = event.row;\r\n    if (row.treeStatus === 'collapsed') {\r\n      row.treeStatus = 'loading';\r\n      this.fetch((data) => {\r\n        data = data.slice(this.lastIndex, this.lastIndex + 3)\r\n          .map((d) => {\r\n            this.$set(d, 'treeStatus', 'collapsed');\r\n            d.parentId = row.id;\r\n            return d;\r\n          });\r\n        this.lastIndex = this.lastIndex + 3;\r\n        row.treeStatus = 'expanded';\r\n        this.rows = [...this.rows, ...data];\r\n      });\r\n    } else {\r\n      row.treeStatus = 'collapsed';\r\n      this.rows = [...this.rows];\r\n    }\r\n  }\r\n\r\n}\r\n","import { IRowContext } from 'types/row-context.type';\r\nimport { TableColumn } from 'types/table-column.type';\r\nimport { Keys } from 'utils/keys';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\n\r\nexport type TreeStatus = 'collapsed' | 'expanded' | 'loading' | 'disabled';\r\n\r\n@Component\r\nexport default class DataTableBodyCellComponent extends Vue {\r\n  @Prop() column: TableColumn;\r\n  @Prop() rowContext: IRowContext;\r\n  @Prop() tabIndex: string;\r\n  @Prop() cellSlot: (obj: Record<string, unknown>) => VNode[];\r\n  @Prop() renderTracking: boolean;\r\n  @Prop() displayCheck: (row: Record<string, unknown>, column?: TableColumn, value?: unknown) => boolean;\r\n\r\n  sanitizedValue: string = null;\r\n  value: unknown = null;\r\n  // sortDir: SortDirection = null;\r\n  isFocused = false;\r\n  // activateFn = this.activate.emit.bind(this.activate); todo\r\n\r\n  @Watch('rowContext.row', { deep: true, immediate: true }) onRowChanged(): void {\r\n    this.checkValueUpdates();\r\n  }\r\n\r\n  created(): void {\r\n    if (this.cellSlot) {\r\n      this.$slots.default = this.cellSlot({\r\n        row: this.rowContext?.row ?? {},\r\n        column: this.column,\r\n        rowIndex: this.rowContext.rowIndex,\r\n        expanded: this.rowContext.expanded,\r\n        group: this.rowContext.group,\r\n        value: this.value,\r\n        updateCell: this.$forceUpdate.bind(this),\r\n      });\r\n    }\r\n    if (this.renderTracking) {\r\n      this.$emit('cell-created', this.column);\r\n    }\r\n  }\r\n\r\n  beforeUpdate(): void {\r\n    if (this.cellSlot) {\r\n      this.$slots.default = this.cellSlot({\r\n        row: this.rowContext?.row ?? {},\r\n        column: this.column,\r\n        rowIndex: this.rowContext.rowIndex,\r\n        expanded: this.rowContext.expanded,\r\n        group: this.rowContext.group,\r\n        value: this.value,\r\n        updateCell: this.$forceUpdate.bind(this),\r\n      });\r\n    }\r\n    if (this.renderTracking) {\r\n      this.$emit('cell-updated', this.column);\r\n    }\r\n  }\r\n\r\n  checkValueUpdates(): void {\r\n    let value = '';\r\n\r\n    if (!this.rowContext || !this.column) {\r\n      value = '';\r\n    } else {\r\n      // todo: make transform by vue filters\r\n      // const val = this.column.$$valueGetter(this.row, this.column.prop);\r\n      // const userPipe: PipeTransform = this.column.pipe;\r\n\r\n      // if (userPipe) {\r\n      //   value = userPipe.transform(val);\r\n      // } else if (value !== undefined) {\r\n      //   value = val;\r\n      // }\r\n      value = this.column.$$valueGetter(this.rowContext.row, this.column.prop) as string;\r\n    }\r\n    if (this.value !== value) {\r\n      this.value = value;\r\n      // eslint-disable-next-line no-undefined\r\n      this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\r\n    }\r\n  }\r\n\r\n  stripHtml(html: string): string {\r\n    if (!html.replace) {\r\n      return html;\r\n    }\r\n    return html.replace(/<\\/?[^>]+(>|$)/g, '');\r\n  }\r\n\r\n  onFocus(): void {\r\n    this.isFocused = true;\r\n  }\r\n\r\n  onBlur(): void {\r\n    this.isFocused = false;\r\n  }\r\n\r\n  onClick(event: MouseEvent): void {\r\n    // props.context.isFocused = true;\r\n    // props.context.abcd = true;\r\n    this.$emit('activate', {\r\n      type: 'click',\r\n      event,\r\n      row: this.rowContext.row,\r\n      rowHeight: this.rowContext.rowHeight,\r\n      column: this.column,\r\n      cellElement: this.$el,\r\n      value: this.value,\r\n      group: this.rowContext.group,\r\n    });\r\n  }\r\n\r\n  onDblClick(event: MouseEvent): void {\r\n    this.$emit('activate', {\r\n      type: 'dblclick',\r\n      event,\r\n      row: this.rowContext.row,\r\n      rowHeight: this.rowContext.rowHeight,\r\n      column: this.column,\r\n      cellElement: this.$el,\r\n      value: this.value,\r\n      group: this.rowContext.group,\r\n    });\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n    const isTargetCell = event.target === this.$el;\r\n    const isAction =\r\n      keyCode === Keys.return ||\r\n      keyCode === Keys.down ||\r\n      keyCode === Keys.up ||\r\n      keyCode === Keys.left ||\r\n      keyCode === Keys.right ||\r\n      keyCode === Keys.pageUp ||\r\n      keyCode === Keys.pageDown;\r\n\r\n    if (isAction && isTargetCell) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      this.$emit('activate', {\r\n        type: 'keydown',\r\n        event,\r\n        row: this.rowContext.row,\r\n        rowIndex: this.rowContext.rowIndex,\r\n        rowHeight: this.rowContext.rowHeight,\r\n        column: this.column,\r\n        cellElement: this.$el,\r\n        value: this.value,\r\n        group: this.rowContext.group,\r\n      });\r\n    }\r\n  }\r\n\r\n  onCheckboxChange(event: MouseEvent): void {\r\n    this.$emit('activate', {\r\n      type: 'checkbox',\r\n      event,\r\n      row: this.rowContext.row,\r\n      rowHeight: this.rowContext.rowHeight,\r\n      column: this.column,\r\n      cellElement: this.$el,\r\n      treeStatus: this.rowContext.treeStatus,\r\n      value: this.value,\r\n      group: this.rowContext.group,\r\n    });\r\n  }\r\n\r\n  onTreeAction(event: MouseEvent): void {\r\n    this.$emit('tree-action', { event, row: this.rowContext.row });\r\n  }\r\n\r\n  onMouseEnter(event: MouseEvent): void {\r\n    this.$emit('mouseenter', { event, row: this.rowContext.row });\r\n  }\r\n\r\n  get cssClasses(): Record<string, boolean> {\r\n    if (!this.rowContext) {\r\n      return null;\r\n    }\r\n    const result: Record<string, boolean> = {};\r\n    let func: (data: Record<string, unknown>) => string | Record<string, unknown>;\r\n    if (this.column.cellClass) {\r\n      let cssClass = this.column.cellClass;\r\n      if (!Array.isArray(cssClass)) {\r\n        cssClass = [cssClass];\r\n      }\r\n      (cssClass as Array<(data: Record<string, unknown>) => string | Record<string, unknown>>).forEach(value => {\r\n        func = null;\r\n        if (typeof value === 'string') {\r\n          result[value] = true;\r\n        } else if (Array.isArray(value)) {\r\n          (value as Array<string>).forEach(val => {\r\n            result[val] = true;\r\n          });\r\n        } else if (typeof value === 'function') {\r\n          func = value;\r\n        }\r\n        if (func) {\r\n          const res = func({\r\n            row: this.rowContext?.row,\r\n            group: this.rowContext?.group,\r\n            column: this.column,\r\n            value: this.value,\r\n            rowHeight: this.rowContext?.rowHeight,\r\n          });\r\n\r\n          if (typeof res === 'string') {\r\n            result[res] = true;\r\n          } else if (typeof res === 'object') {\r\n            const keys = Object.keys(res);\r\n            for (const k of keys) {\r\n              if (res[k] === true) {\r\n                result[` ${k}`] = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // result['sort-active'] = !this.sortDir;\r\n    result['active'] = this.isFocused;\r\n    // result['sort-asc'] = this.sortDir === SortDirection.asc;\r\n    // result['sort-desc'] = this.sortDir === SortDirection.desc;\r\n    return result;\r\n  }\r\n\r\n  get styles(): Record<string, string | number> {\r\n    if (!this.rowContext) {\r\n      return {};\r\n    }\r\n    return {\r\n      width: `${this.column.width}px`,\r\n      // eslint-disable-next-line no-undefined\r\n      minWidth: this.column.minWidth ? `${this.column.minWidth}px` : undefined,\r\n      // eslint-disable-next-line no-undefined\r\n      maxWidth: this.column.maxWidth ? `${this.column.maxWidth}px` : undefined,\r\n      height: this.rowContext.rowHeight === 'auto' ? this.rowContext.rowHeight : `${this.rowContext.rowHeight}px`, // this.cellHeight(this.rowContext.rowHeight),\r\n    };\r\n  }\r\n\r\n  get marginCellStyle(): Record<string, string> {\r\n    if (!this.rowContext) {\r\n      return {};\r\n    }\r\n    return {\r\n      'margin-left': `${this.calcLeftMargin(this.column, this.rowContext.row)}px`,\r\n    };\r\n  }\r\n\r\n  get isCheckboxable(): boolean {\r\n    return (\r\n      this.column.checkboxable &&\r\n      (!this.displayCheck || this.displayCheck(this.rowContext.row, this.column, this.value))\r\n    );\r\n  }\r\n\r\n  cellHeight(rowHeight: number): string | number {\r\n    const height = rowHeight;\r\n    if (isNaN(height)) {\r\n      return height;\r\n    }\r\n    return `${height}px`;\r\n  }\r\n\r\n  calcLeftMargin(column: TableColumn, row: Record<string, unknown>): number {\r\n    const levelIndent = column.treeLevelIndent ? column.treeLevelIndent : 50;\r\n    return column.isTreeColumn ? (row.level as number) * levelIndent : 0;\r\n  }\r\n}\r\n","import { TGroupByField } from 'components/datatable.component';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport DataTableBodyGroupHeaderComponent from './body-group-header.component';\r\nimport DataTableBodyRowComponent from './body-row.component.vue';\r\nimport DataTableBodyRowDetailComponent from './body-row-detail.component';\r\n\r\n@Component({\r\n  name: 'datatable-row-wrapper',\r\n  components: {\r\n    'datatable-group-header': DataTableBodyGroupHeaderComponent,\r\n    'datatable-row-detail': DataTableBodyRowDetailComponent,\r\n    'datatable-body-row': DataTableBodyRowComponent,\r\n  },\r\n})\r\nexport default class DataTableRowWrapperComponent extends Vue {\r\n  @Prop() innerWidth: number;\r\n  @Prop() rowDetail: boolean;\r\n  @Prop() groupHeader: boolean;\r\n  @Prop() groupLevel: number;\r\n  @Prop() offsetX: number;\r\n  @Prop() rowDetailHeight: number;\r\n  @Prop() groupRowHeight: number;\r\n  @Prop() groupHeaderStyles: Record<string, string | number>;\r\n  @Prop() groupHeaderClasses: string | Array<string>;\r\n  @Prop() row: Record<string, unknown>;\r\n  @Prop() rowIdentity: (row: Record<string, unknown>) => string | number;\r\n  @Prop() groupRowsBy: Array<TGroupByField | Array<TGroupByField>>;\r\n  @Prop() rowIndex: number;\r\n  @Prop() expanded: boolean;\r\n  @Prop() styleObject: Record<string, string>;\r\n  @Prop() groupHeaderSlot: (obj: Record<string, unknown>) => VNode[];\r\n  @Prop() rowDetailSlot: (obj: Record<string, unknown>) => VNode[];\r\n\r\n  mounted(): void {\r\n    this.$emit('set-row-element', this.$el);\r\n  }\r\n\r\n  updated(): void {\r\n    this.$emit('set-row-element', this.$el);\r\n  }\r\n\r\n  onContextmenu($event: MouseEvent): void {\r\n    this.$emit('rowContextmenu', { event: $event, row: this.row });\r\n  }\r\n\r\n  get groupTitleStyles(): Record<string, string | number> {\r\n    const styles = this.groupHeaderStyles ?? {};\r\n    styles['backface-visibility'] = 'hidden';\r\n    styles['height'] = this.groupRowHeight ? `${this.groupRowHeight}px` : 'auto';\r\n    return styles;\r\n  }\r\n\r\n  get rowId(): string | number | null {\r\n    if (!this.row) {\r\n      return null;\r\n    }\r\n    if (this.rowIdentity) {\r\n      const result = this.rowIdentity(this.row);\r\n      if (typeof result === 'object') {\r\n        return null;\r\n      }\r\n      return result;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { IRowContext } from 'types/row-context.type';\r\nimport { IColumnsByPinRecord, IColumnsWidth } from 'utils/column';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { TableColumn } from '../../types/table-column.type';\r\nimport { Keys } from '../../utils/keys';\r\nimport DataTableBodyCellComponent from './body-cell.component.vue';\r\n\r\n@Component({\r\n  components: {\r\n    'datatable-body-cell': DataTableBodyCellComponent,\r\n  },\r\n})\r\nexport default class DataTableBodyRowComponent extends Vue {\r\n  @Prop() row: Record<string, unknown>;\r\n  @Prop() rowContext: IRowContext;\r\n  @Prop() columnsByPin: IColumnsByPinRecord[];\r\n  @Prop() columnGroupWidths: IColumnsWidth;\r\n  @Prop() groupStyles: Record<string, string | number>;\r\n  @Prop() rowClass: (row: Record<string, unknown>, rowIndex: number) => string | string;\r\n  @Prop() displayCheck: (row: Record<string, unknown>, column?: TableColumn, value?: unknown) => boolean;\r\n  @Prop() slots: () => Record<string, (arg?: Record<string, unknown>) => VNode[]>;\r\n  @Prop() renderTracking: boolean;\r\n\r\n  counter = 0; // it's need to update cells after row's changing\r\n  isFocused = false;\r\n\r\n  created(): void {\r\n    if (this.renderTracking) {\r\n      this.$emit('row-created', this.row);\r\n    }\r\n  }\r\n\r\n  updated(): void {\r\n    if (this.renderTracking) {\r\n      this.$emit('row-updated', this.row);\r\n    }\r\n    if (this.isFocused) {\r\n      (this.$el as HTMLElement).focus();\r\n    }\r\n  }\r\n\r\n  // @Watch('row', { deep: true }) onRowChanged(newVal, oldVal) {\r\n  //   if (newVal === oldVal) {\r\n  //     // there was only row's properties changed - it's need to update cells\r\n  //     this.counter++;\r\n  //   }\r\n  // }\r\n\r\n  onCellRendered(column: TableColumn): void {\r\n    this.$emit('row-updated', this.row);\r\n  }\r\n\r\n  onFocus(): void {\r\n    this.isFocused = true;\r\n  }\r\n\r\n  onBlur(): void {\r\n    this.isFocused = false;\r\n  }\r\n\r\n  onActivate(event: { cellIndex: number; rowElement: Element }, index: number): void {\r\n    event.cellIndex = index;\r\n    event.rowElement = this.$el;\r\n    this.$emit('activate', event);\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n    const isTargetRow = event.target === this.$el;\r\n\r\n    const isAction =\r\n      keyCode === Keys.return ||\r\n      keyCode === Keys.down ||\r\n      keyCode === Keys.up ||\r\n      keyCode === Keys.pageUp ||\r\n      keyCode === Keys.pageDown;\r\n\r\n    if (isAction && isTargetRow) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      this.$emit('activate', {\r\n        type: 'keydown',\r\n        event,\r\n        row: this.row,\r\n        rowIndex: this.rowContext.rowIndex,\r\n        rowElement: this.$el,\r\n      });\r\n    }\r\n  }\r\n\r\n  onMouseenter(event: MouseEvent): void {\r\n    this.$emit('activate', {\r\n      type: 'mouseenter',\r\n      event,\r\n      row: this.row,\r\n      rowElement: this.$el,\r\n    });\r\n  }\r\n\r\n  onTreeAction(event: Event): void {\r\n    this.$emit('tree-action', event);\r\n  }\r\n\r\n  get styles(): Record<string, string> {\r\n    if (this.rowContext) {\r\n      return {\r\n        width: `${this.columnGroupWidths?.total ?? 0}px`,\r\n        height: this.rowContext.rowHeight === 'auto' ? this.rowContext.rowHeight : `${this.rowContext.rowHeight}px`,\r\n      };\r\n    }\r\n    return {\r\n      width: `${this.columnGroupWidths?.total ?? 0}px`,\r\n    };\r\n  }\r\n\r\n  get cssClasses(): string {\r\n    let cls = '';\r\n    if (this.rowContext?.isSelected) {\r\n      cls += ' active';\r\n    }\r\n    if (this.rowContext?.rowIndex % 2 !== 0) {\r\n      cls += ' datatable-row-odd';\r\n    } else {\r\n      cls += ' datatable-row-even';\r\n    }\r\n    if (typeof this.rowClass === 'function') {\r\n      const res = this.rowClass(this.rowContext.row, this.rowContext.rowIndex);\r\n      if (typeof res === 'string') {\r\n        cls += ` ${res}`;\r\n      } else if (typeof res === 'object') {\r\n        const keys = Object.keys(res);\r\n        for (const k of keys) {\r\n          if (res[k] === true) {\r\n            cls += ` ${k}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return cls;\r\n  }\r\n}\r\n","import { TreeStatus } from 'components/body/body-cell.component';\r\nimport { TGroupByField } from 'components/datatable.component';\r\nimport { ScrollbarHelper } from 'services/scrollbar-helper.service';\r\nimport { CheckMode } from 'types/check.type';\r\nimport { IGroupedRows } from 'types/grouped-rows';\r\nimport { IRowContext } from 'types/row-context.type';\r\nimport { SelectionType } from 'types/selection.type';\r\nimport { TableColumn } from 'types/table-column.type';\r\nimport { IColumnsByPinRecord, IColumnsWidth } from 'utils/column';\r\nimport { RowHeightCache } from 'utils/row-height-cache';\r\nimport { translateXY } from 'utils/translate';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\nimport DataTableBodyGroupHeaderComponent from './body-group-header.component';\r\nimport DataTableBodyRowComponent from './body-row.component.vue';\r\nimport DataTableBodyRowDetailComponent from './body-row-detail.component';\r\nimport DataTableRowWrapperComponent from './body-row-wrapper.component.vue';\r\nimport ProgressBarComponent from './progress-bar.component';\r\nimport ScrollerComponent from './scroller.component';\r\nimport DataTableSelectionComponent, { Model } from './selection.component';\r\n// import DataTableRowWrapperComponent from './body-row-wrapper.component.vue';\r\n// import DataTableBodyRowComponent from './body-row.component.vue';\r\nimport DataTableSummaryRowComponent from './summary/summary-row.component';\r\n\r\n@Component({\r\n  components: {\r\n    'datatable-selection': DataTableSelectionComponent,\r\n    'datatable-progress': ProgressBarComponent,\r\n    'datatable-scroller': ScrollerComponent,\r\n    'datatable-summary-row': DataTableSummaryRowComponent,\r\n    'datatable-row-wrapper': DataTableRowWrapperComponent,\r\n    'datatable-body-row': DataTableBodyRowComponent,\r\n    'datatable-group-header': DataTableBodyGroupHeaderComponent,\r\n    'datatable-row-detail': DataTableBodyRowDetailComponent,\r\n  },\r\n})\r\nexport default class DataTableBodyComponent extends Vue {\r\n  @Prop() scrollbarV: boolean;\r\n  @Prop() scrollbarH: boolean;\r\n  @Prop() loadingIndicator: boolean;\r\n  @Prop() externalPaging: boolean;\r\n  @Prop() rowHeight: number | ((row: Record<string, unknown>, index?: number) => number);\r\n  @Prop() groupRowHeight: number | ((row: Record<string, unknown>, index?: number) => number);\r\n  @Prop() groupHeaderStyles: Record<string, string | number>;\r\n  @Prop() groupHeaderClasses: string | Array<string>;\r\n  @Prop() offsetX: number;\r\n  @Prop() emptyMessage: string;\r\n  @Prop() selectionType: SelectionType;\r\n  @Prop() checkMode: CheckMode;\r\n  @Prop({ type: Array, default: () => [] as Array<Record<string, unknown>> }) selected: Array<Record<string, unknown>>;\r\n  @Prop({ type: Array, default: () => [] as Array<Record<string, unknown>> }) checked: Array<Record<string, unknown>>;\r\n  @Prop() rowIdentity: (row: Record<string, unknown>) => string | number;\r\n  @Prop() rowDetail: boolean;\r\n  @Prop() rowDetailHeight: number | string | ((row?: Record<string, unknown>, index?: number) => number);\r\n  @Prop() groupHeader: boolean;\r\n  @Prop() selectCheck: () => void;\r\n  @Prop() displayCheck: (row: Record<string, unknown>, column?: TableColumn, value?: unknown) => boolean;\r\n  @Prop() trackByProp: string;\r\n  @Prop() rowClass: (row: Record<string, unknown>, rowIndex: number) => string | string;\r\n  // @Prop() groupedRows: any;\r\n  @Prop() groupExpansionDefault: boolean;\r\n  @Prop() innerWidth: number;\r\n  @Prop() groupRowsBy: Array<TGroupByField | Array<TGroupByField>>;\r\n  @Prop() virtualization: boolean;\r\n  @Prop() summaryRow: boolean;\r\n  @Prop() summaryPosition: string;\r\n  @Prop() summaryHeight: number | string;\r\n  @Prop() pageSize: number;\r\n  @Prop() limit: number;\r\n  @Prop() rows: Record<string, unknown>[];\r\n  @Prop() columns: TableColumn[];\r\n  @Prop() offset: number;\r\n  @Prop({ default: 0 }) rowCount: number;\r\n  @Prop({ default: 0 }) bodyHeight: number;\r\n  @Prop({ type: [Number, String], default: null }) minItemHeight: number | string;\r\n  @Prop({ type: [String], default: 'height' }) heightField: string;\r\n  @Prop() groupHeaderSlot: (obj: Record<string, unknown>) => VNode[];\r\n  @Prop() rowDetailSlot: (obj: Record<string, unknown>) => VNode[];\r\n  @Prop() renderTracking: boolean;\r\n  @Prop() columnGroupWidths: IColumnsWidth;\r\n  @Prop() columnsByPin: IColumnsByPinRecord[];\r\n  @Prop() beforeSelectRowCheck: (\r\n    newRow: Record<string, unknown>,\r\n    oldSelected: Record<string, unknown>[]\r\n  ) => boolean | Promise<boolean>;\r\n\r\n  scroller: ScrollerComponent = null; // ScrollerComponent\r\n  selector: DataTableSelectionComponent = null; // DataTableSelectionComponent;\r\n  rowHeightsCache: RowHeightCache = new RowHeightCache();\r\n  offsetY = 0;\r\n  myOffset = 0;\r\n  myOffsetX = 0;\r\n  indexes: { first: number; last: number } = { first: 0, last: 0 };\r\n  rowIndexes = new Map<Record<string, unknown>, number>();\r\n  rowExpansions = new Map<Record<string, unknown> | IGroupedRows, boolean>();\r\n  myBodyHeight: string = null;\r\n  groupStyles = {\r\n    left: {},\r\n    center: {},\r\n    right: {},\r\n  };\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n  // onBodyScrollHandler = throttle(this.onBodyScroll.bind(this), 10, { trailing: true });\r\n\r\n  rowTrackingFn: (row: Record<string, unknown>) => string | number;\r\n  lastFirst: number;\r\n  lastLast: number;\r\n  lastRowCount: number;\r\n  rowsChanged: boolean;\r\n  rowContexts: Array<IRowContext> = [];\r\n  private readonly scrollbarHelper = new ScrollbarHelper();\r\n  private renderCounter = 0;\r\n  private renderId: number = null;\r\n  private pageRowCount = 0;\r\n\r\n  @Watch('pageSize') onPageSize(): void {\r\n    this.recalcLayout();\r\n  }\r\n\r\n  @Watch('rows', { immediate: true }) async onRowsChanged(): Promise<void> {\r\n    this.rowsChanged = true;\r\n    this.rowExpansions.clear();\r\n    // const updateOffset = this.rows && this.rows.length && this.offset || (!this.offset && this.offsetY);\r\n    const updateOffset =\r\n      this.rows && this.rows.length && ((this.offset && !this.offsetY) || (!this.offset && this.offsetY));\r\n    if (updateOffset) {\r\n      this.updateOffsetY(this.offset, true);\r\n      await this.$nextTick();\r\n      if (this.offset && !this.offsetY) {\r\n        // if offsetY wasn't set, try one more time\r\n        this.updateOffsetY(this.offset, true);\r\n        await this.$nextTick();\r\n      }\r\n    }\r\n    this.lastFirst = -1;\r\n    this.recalcLayout();\r\n  }\r\n\r\n  // @Watch('groupedRows') onGroupedRowsChanged() {\r\n  //   this.onRowsChanged();\r\n  // }\r\n\r\n  @Watch('selected', { deep: true }) async onSelectedChanged(): Promise<void> {\r\n    await this.$nextTick();\r\n    this.rowContexts.forEach(rowContext => {\r\n      rowContext.isSelected = this.isSelect(rowContext.row);\r\n      rowContext.isChecked = this.isChecked(rowContext.row);\r\n    });\r\n  }\r\n\r\n  @Watch('checked', { deep: true }) async onCheckedChanged(): Promise<void> {\r\n    await this.$nextTick();\r\n    this.rowContexts.forEach(rowContext => {\r\n      rowContext.isChecked = this.isChecked(rowContext.row);\r\n    });\r\n  }\r\n\r\n  @Watch('columns', { immediate: true }) onColumnsChanged(): void {\r\n    this.buildStylesByGroup();\r\n  }\r\n\r\n  @Watch('offset', { immediate: true }) onOffsetChanged(): void {\r\n    this.myOffset = this.offset;\r\n  }\r\n\r\n  @Watch('offsetX', { immediate: true }) onOffsetXChanged(): void {\r\n    this.myOffsetX = this.offsetX;\r\n  }\r\n\r\n  @Watch('myOffsetX') onMyOffsetXChanged(): void {\r\n    this.buildStylesByGroup();\r\n  }\r\n\r\n  @Watch('columnGroupWidths') onColumnGroupWidthsChanged() {\r\n    this.buildStylesByGroup();\r\n  }\r\n\r\n  @Watch('innerWidth') onInnerWidthChanged(): void {\r\n    this.buildStylesByGroup();\r\n  }\r\n\r\n  @Watch('myOffset') onMyOffsetChanged(): void {\r\n    if (this.limit) {\r\n      this.recalcLayout();\r\n    }\r\n  }\r\n\r\n  @Watch('rowCount') onRowCountChanged(): void {\r\n    this.recalcLayout();\r\n  }\r\n\r\n  @Watch('bodyHeight', { immediate: true }) onBodyHeightChanged(): void {\r\n    this.myBodyHeight = this.bodyHeight.toString();\r\n    if (this.bodyHeight === -1) {\r\n      this.myBodyHeight = '0px';\r\n      return;\r\n    }\r\n    if (this.scrollbarV) {\r\n      this.myBodyHeight = this.myBodyHeight + 'px';\r\n    } else {\r\n      this.myBodyHeight = 'auto';\r\n    }\r\n    this.pageRowCount = 0;\r\n    this.recalcLayout();\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of DataTableBodyComponent.\r\n   */\r\n  created(): void {\r\n    // declare fn here so we can get access to the `this` property\r\n    this.rowTrackingFn = (row: Record<string, unknown>): string | number => {\r\n      const idx = this.getRowIndex(row);\r\n      if (this.trackByProp) {\r\n        return `${idx}-${this.trackByProp}`;\r\n      }\r\n      return idx;\r\n    };\r\n  }\r\n\r\n  mounted(): void {\r\n    this.selector = this.$refs.selector as DataTableSelectionComponent;\r\n    this.scroller = this.$refs.scroller as ScrollerComponent;\r\n  }\r\n\r\n  get bodyWidth(): string {\r\n    if (this.scrollbarH) {\r\n      return `${this.innerWidth}px`;\r\n    }\r\n    return '100%';\r\n  }\r\n\r\n  get styleObject(): Record<string, string> {\r\n    return {\r\n      width: this.bodyWidth ? this.bodyWidth : 'auto',\r\n      height: this.myBodyHeight ? this.myBodyHeight : 'auto',\r\n      'overflow-anchor': 'auto',\r\n      contain: 'content',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns if selection is enabled.\r\n   */\r\n  get selectEnabled(): boolean {\r\n    return Boolean(this.selectionType);\r\n  }\r\n\r\n  get checkEnabled(): boolean {\r\n    return this.checkMode === CheckMode.checkNoSelect || this.selectionType === SelectionType.checkbox;\r\n  }\r\n\r\n  get isUseRowHeightCache(): boolean {\r\n    if (typeof this.rowHeight === 'function' || this.rowDetailHeight || this.groupRowsBy) {\r\n      return true;\r\n    }\r\n    return false;\r\n    // if (\r\n    //   (this.fixedRowHeight && !this.rowDetailHeight && !this.groupRowsBy) ||\r\n    //   (this.scrollbarV && !this.virtualization) ||\r\n    //   !this.scrollbarV\r\n    // ) {\r\n    //   return false;\r\n    // }\r\n    // return true;\r\n  }\r\n\r\n  get fixedRowHeight(): boolean {\r\n    if (this.rowHeight && typeof this.rowHeight === 'number') {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Property that would calculate the height of scroll bar\r\n   * based on the row heights cache for virtual scroll and virtualization. Other scenarios\r\n   * calculate scroll height automatically (as height will be undefined).\r\n   */\r\n  get scrollHeight(): number | undefined {\r\n    if (this.scrollbarV && this.virtualization && this.rowCount) {\r\n      if (!this.isUseRowHeightCache) {\r\n        const height = this.rowHeight as number;\r\n        return height * this.rowCount;\r\n      }\r\n      return this.rowHeightsCache.query(this.rowCount - 1);\r\n    }\r\n    if (!this.rowCount) {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  get scrollWidth(): string {\r\n    return this.columnGroupWidths ? this.columnGroupWidths.total.toString() : 'auto';\r\n  }\r\n\r\n  get cellSlots(): () => Record<string, (arg?: Record<string, unknown>) => VNode[]> {\r\n    const result = {};\r\n    if (this.columns) {\r\n      this.columns.forEach(column => {\r\n        if (column.cellTemplate) {\r\n          result[column.prop] = column.cellTemplate;\r\n        }\r\n      });\r\n    }\r\n    return () => result;\r\n  }\r\n\r\n  /**\r\n   * Called once, before the instance is destroyed.\r\n   */\r\n  destroyed(): void {\r\n    // todo\r\n    // if (this.rowDetail) this.listener.unsubscribe();\r\n    // if (this.groupHeader) this.listener.unsubscribe();\r\n  }\r\n\r\n  reset(): void {\r\n    this.myOffsetX = 0;\r\n    this.offsetY = 0;\r\n  }\r\n\r\n  onSelect(event: { selected: Array<Record<string, unknown>>; index: number }): void {\r\n    this.$emit('select', event);\r\n  }\r\n\r\n  /**\r\n   * Updates the Y offset given a new offset.\r\n   */\r\n  updateOffsetY(offset?: number, fromPager: boolean = false): number {\r\n    // scroller is missing on empty table\r\n    if (!this.scroller) {\r\n      return;\r\n    }\r\n    let offsetY = 0;\r\n    if (this.scrollbarV && this.virtualization && offset) {\r\n      // First get the row Index that we need to move to.\r\n      const rowIndex = this.pageSize * offset;\r\n      if (this.isUseRowHeightCache || typeof this.rowHeight === 'function') {\r\n        offsetY = this.rowHeightsCache.query(rowIndex - 1);\r\n      } else {\r\n        offsetY = rowIndex * this.rowHeight;\r\n      }\r\n    } else if (this.scrollbarV && !this.virtualization) {\r\n      offsetY = 0;\r\n    }\r\n    if (offset && !offsetY) {\r\n      return 0;\r\n    }\r\n    this.scroller.setOffset(offsetY || 0, fromPager);\r\n    return offsetY || 0;\r\n  }\r\n\r\n  onScrollerWidthChanged(width: number) {\r\n    this.buildStylesByGroup();\r\n  }\r\n\r\n  onScrollSetup(event: { scrollYPos: number; scrollXPos: number }): void {\r\n    this.myOffsetX = event.scrollXPos;\r\n    this.offsetY = event.scrollYPos;\r\n  }\r\n\r\n  /**\r\n   * Body was scrolled, this is mainly useful for\r\n   * when a user is server-side pagination via virtual scroll.\r\n   */\r\n  onBodyScroll(event: { direction: string; scrollYPos: number; scrollXPos: number; fromPager: boolean }): void {\r\n    const scrollYPos: number = event.scrollYPos;\r\n    const scrollXPos: number = event.scrollXPos;\r\n\r\n    // if scroll change, trigger update\r\n    // this is mainly used for header cell positions\r\n    if (this.offsetY !== scrollYPos || this.myOffsetX !== scrollXPos) {\r\n      // Math.abs(scrollYPos - this.offsetY) > 50\r\n      this.$emit('scroll', {\r\n        offsetY: scrollYPos,\r\n        offsetX: scrollXPos,\r\n      });\r\n    }\r\n    this.offsetY = scrollYPos;\r\n    this.myOffsetX = scrollXPos;\r\n    this.$nextTick(() => {\r\n      this.updateIndexes(event.direction);\r\n      this.updatePage(event.direction, event.fromPager);\r\n      this.updateRows();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the page given a direction.\r\n   */\r\n  updatePage(direction: string, fromPager: boolean): void {\r\n    let offset = this.indexes.first / this.pageSize;\r\n\r\n    if (fromPager) {\r\n      offset = Math.ceil(offset);\r\n    } else if (direction === 'up') {\r\n      offset = Math.ceil(offset);\r\n    } else if (direction === 'down') {\r\n      offset = Math.floor(offset);\r\n    }\r\n\r\n    if (!fromPager && ['up', 'down'].includes(direction) && !isNaN(offset)) {\r\n      this.$emit('page', { offset });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the rows in the view port\r\n   */\r\n  updateRows(force: boolean = false): void {\r\n    const { first, last } = this.indexes;\r\n    if (!force && !this.rowsChanged && this.lastFirst === first && this.lastLast === last) {\r\n      // console.log('this.lastFirst === first');\r\n      return;\r\n    }\r\n    this.rowsChanged = false;\r\n    if (this.rows?.length) {\r\n      this.lastFirst = first;\r\n      this.lastLast = last;\r\n    }\r\n    this.lastRowCount = this.rowCount;\r\n    // if (!this.pagination) {\r\n    //   first = Math.max(0, first - 20);\r\n    //   last = Math.min(this.rowCount, last + 10);\r\n    // }\r\n    let rowIndex = first;\r\n    let idx = 0;\r\n    this.rowIndexes.clear();\r\n\r\n    // if grouprowsby has been specified treat row paging\r\n    // parameters as group paging parameters ie if limit 10 has been\r\n    // specified treat it as 10 groups rather than 10 rows\r\n    // if (this.groupedRows) {\r\n    //   let maxRowsPerGroup = 3;\r\n    //   // if there is only one group set the maximum number of\r\n    //   // rows per group the same as the total number of rows\r\n    //   if (this.groupedRows.length === 1) {\r\n    //     maxRowsPerGroup = this.groupedRows[0].value.length;\r\n    //   }\r\n    //   let index = 0;\r\n    //   while (rowIndex < last && rowIndex < this.groupedRows.length) {\r\n    //     // Add the groups into this page\r\n    //     const group = this.groupedRows[rowIndex];\r\n    //     group.value.forEach(row => this.rowIndexes.set(row, ++index));\r\n    //     temp[idx] = group;\r\n    //     idx++;\r\n\r\n    //     // Group index in this context\r\n    //     rowIndex++;\r\n    //   }\r\n    // } else {\r\n    const temp: Array<IRowContext> = [];\r\n    // let rowContext: IRowContext;\r\n    let group;\r\n    while (rowIndex < last && rowIndex < this.rowCount) {\r\n      const row = this.rows[rowIndex];\r\n      if (row) {\r\n        if (row.__isGroup) {\r\n          group = row;\r\n        }\r\n        this.rowIndexes.set(row, rowIndex);\r\n        // rowContext = this.rowContexts[idx];\r\n        // if (!rowContext) {\r\n        //   // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        //   rowContext = {} as any;\r\n        // }\r\n        // rowContext.row = row;\r\n        // rowContext.rowIndex = rowIndex;\r\n        // rowContext.rowHeight = this.getRowHeight(row);\r\n        // rowContext.isSelected = this.isSelect(row);\r\n        // rowContext.isChecked = this.isChecked(row);\r\n        // rowContext.expanded = this.getRowExpanded(row);\r\n        // rowContext.treeStatus = this.treeStatus(row);\r\n        // temp[idx] = rowContext;\r\n        temp[idx] = {\r\n          row,\r\n          rowIndex,\r\n          rowHeight: this.getRowHeight(row),\r\n          isSelected: this.isSelect(row),\r\n          isChecked: this.isChecked(row),\r\n          expanded: this.getRowExpanded(row),\r\n          treeStatus: this.treeStatus(row),\r\n          group: group as unknown as IGroupedRows,\r\n        };\r\n        idx++;\r\n      }\r\n      rowIndex++;\r\n    }\r\n    // }\r\n    this.rowContexts = temp;\r\n    // eslint-disable-next-line no-console\r\n    // console.log('updateRows first = ', first, last);\r\n  }\r\n\r\n  /**\r\n   * Get the row height\r\n   */\r\n  getRowHeight(row: Record<string, unknown>): number {\r\n    // if its a function return it\r\n    if (typeof this.rowHeight === 'function') {\r\n      return this.rowHeight(row);\r\n    }\r\n    return this.rowHeight;\r\n  }\r\n\r\n  /**\r\n   * @param group the group with all rows\r\n   */\r\n  getGroupHeight(group: { value: Array<Record<string, unknown>> }): number {\r\n    let rowHeight = 0;\r\n    if (Array.isArray(group.value)) {\r\n      for (const value of group.value) {\r\n        rowHeight += this.getRowAndDetailHeight(value);\r\n      }\r\n    }\r\n    return rowHeight;\r\n  }\r\n\r\n  /**\r\n   * Calculate row height based on the expanded state of the row.\r\n   */\r\n  getRowAndDetailHeight(row: Record<string, unknown>): number {\r\n    let rowHeight = this.getRowHeight(row);\r\n    const expanded = this.rowExpansions.get(row);\r\n\r\n    // Adding detail row height if its expanded.\r\n    if (expanded) {\r\n      rowHeight += this.getDetailRowHeight(row);\r\n    }\r\n\r\n    return rowHeight;\r\n  }\r\n\r\n  /**\r\n   * Get the height of the detail row.\r\n   */\r\n  getDetailRowHeight = (row?: Record<string, unknown>, index?: number): number => {\r\n    if (!this.rowDetail) {\r\n      return 0;\r\n    }\r\n    const rowHeight = this.rowDetailHeight || this.getRowHeight(row) || 50;\r\n    return typeof rowHeight === 'function' ? rowHeight(row, index) : Number(rowHeight);\r\n  };\r\n\r\n  /**\r\n   * Calculates the styles for the row so that the rows can be moved in 2D space\r\n   * during virtual scroll inside the DOM.   In the below case the Y position is\r\n   * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\r\n   * 100 px then following styles are generated:\r\n   *\r\n   * transform: translate3d(0px, 0px, 0px);    ->  row0\r\n   * transform: translate3d(0px, 30px, 0px);   ->  row1\r\n   * transform: translate3d(0px, 130px, 0px);  ->  row2\r\n   *\r\n   * Row heights have to be calculated based on the row heights cache as we wont\r\n   * be able to determine which row is of what height before hand.  In the above\r\n   * case the positionY of the translate3d for row2 would be the sum of all the\r\n   * heights of the rows before it (i.e. row0 and row1).\r\n   *\r\n   * @param {*} row The row that needs to be placed in the 2D space.\r\n   * @returns {*} Returns the CSS3 style to be applied\r\n   *\r\n   * @memberOf DataTableBodyComponent\r\n   */\r\n  getRowWrapperStyles(rowContext: IRowContext): Record<string, string> {\r\n    if (!rowContext || !this.columnGroupWidths) {\r\n      return null;\r\n    }\r\n    const styles = {};\r\n    // only add styles for the group if there is a group\r\n    if (this.groupRowsBy) {\r\n      styles['width'] = `${this.columnGroupWidths.total}px`;\r\n    }\r\n\r\n    if (this.scrollbarV && this.virtualization) {\r\n      let idx = 0;\r\n      // let row = rows;\r\n      // if (this.groupedRows) {\r\n      //   // Get the latest row rowindex in a group\r\n      //   row = rows[rows.length - 1];\r\n      //   idx = row ? this.getRowIndex(row) : 0;\r\n      // } else {\r\n      idx = rowContext.rowIndex;\r\n      // }\r\n      // const pos = idx * rowHeight;\r\n      // The position of this row would be the sum of all row heights\r\n      // until the previous row position.\r\n      let pos = 0;\r\n      let height = 50;\r\n      if (!this.isUseRowHeightCache) {\r\n        height = this.rowHeight as number;\r\n        pos = idx * height;\r\n      } else {\r\n        pos = this.rowHeightsCache.query(idx - 1);\r\n      }\r\n      translateXY(styles, 0, pos);\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  getRowOffsetY(index: number): { offsetY: number; height: number } {\r\n    if (this.isUseRowHeightCache || typeof this.rowHeight === 'function') {\r\n      let result = this.rowHeightsCache.queryWithHeight(index);\r\n      if (!result) {\r\n        result = { height: 0, offsetY: 0 };\r\n      }\r\n      return result;\r\n    }\r\n    return {\r\n      offsetY: this.rowHeight * index,\r\n      height: this.rowHeight,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate bottom summary row offset for scrollbar mode.\r\n   * For more information about cache and offset calculation\r\n   * see description for `getRowsStyles` method\r\n   *\r\n   * @returns {*} Returns the CSS3 style to be applied\r\n   *\r\n   * @memberOf DataTableBodyComponent\r\n   */\r\n  getBottomSummaryRowStyles(): Record<string, string> {\r\n    if (!this.scrollbarV || !this.rows || !this.rows.length) {\r\n      return null;\r\n    }\r\n\r\n    const styles = { position: 'absolute' };\r\n    let pos = 0;\r\n    if (this.isUseRowHeightCache || typeof this.rowHeight === 'function') {\r\n      pos = this.rowHeightsCache.query(this.rows.length - 1);\r\n    } else {\r\n      pos = this.rowHeight * (this.rowCount - 1);\r\n    }\r\n\r\n    translateXY(styles, 0, pos);\r\n\r\n    return styles;\r\n  }\r\n\r\n  /**\r\n   * Hides the loading indicator\r\n   */\r\n  // hideIndicator(): void {\r\n  //   setTimeout(() => this.loadingIndicator = false, 500);\r\n  // }\r\n\r\n  /**\r\n   * Updates the index of the rows in the viewport\r\n   */\r\n  updateIndexes(direction?: string): void {\r\n    let first = 0;\r\n    let last = 0;\r\n\r\n    if (this.scrollbarV && !this.limit) {\r\n      if (this.virtualization) {\r\n        // Calculation of the first and last indexes will be based on where the\r\n        // scrollY position would be at.  The last index would be the one\r\n        // that shows up inside the view port the last.\r\n        const height = this.bodyHeight;\r\n        if (this.isUseRowHeightCache || typeof this.rowHeight === 'function') {\r\n          first = this.rowHeightsCache.getRowIndex(this.offsetY);\r\n          last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\r\n        } else {\r\n          first = Math.floor(this.offsetY / this.rowHeight);\r\n          if (!this.pageRowCount) {\r\n            last = Math.ceil((height + this.offsetY + this.rowHeight) / this.rowHeight);\r\n            this.pageRowCount = last - first;\r\n          } else {\r\n            last = first + this.pageRowCount;\r\n          }\r\n        }\r\n      } else {\r\n        // If virtual rows are not needed\r\n        // We render all in one go\r\n        first = 0;\r\n        last = this.rowCount;\r\n      }\r\n    } else {\r\n      // The server is handling paging and will pass an array that begins with the\r\n      // element at a specified offset.  first should always be 0 with external paging.\r\n      if (!this.externalPaging) {\r\n        first = Math.max(this.myOffset * this.pageSize, 0);\r\n      }\r\n      last = Math.min(first + this.pageSize, this.rowCount);\r\n    }\r\n    // if (direction === 'down') {\r\n    //   last = last === this.rowCount ? last : last + 1;\r\n    // }\r\n    this.indexes = { first, last };\r\n  }\r\n\r\n  /**\r\n   * Refreshes the full Row Height cache.  Should be used\r\n   * when the entire row array state has changed.\r\n   */\r\n  refreshRowHeightCache(): void {\r\n    if (!this.isUseRowHeightCache) {\r\n      return;\r\n    }\r\n    // clear the previous row height cache if already present.\r\n    // this is useful during sorts, filters where the state of the\r\n    // rows array is changed.\r\n    this.rowHeightsCache.clearCache();\r\n\r\n    // Initialize the tree only if there are rows inside the tree.\r\n    if (this.rows && this.rows.length) {\r\n      this.rowHeightsCache.initCache({\r\n        rows: this.rows,\r\n        rowHeight: this.rowHeight,\r\n        rowDetailHeight: this.getDetailRowHeight,\r\n        groupRowHeight: this.groupRowHeight,\r\n        externalVirtual: this.scrollbarV && this.externalPaging,\r\n        rowCount: this.rowCount,\r\n        rowIndexes: this.rowIndexes,\r\n        rowExpansions: this.rowExpansions,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the index for the view port\r\n   */\r\n  getAdjustedViewPortIndex(): number {\r\n    // Capture the row index of the first row that is visible on the viewport.\r\n    // If the scroll bar is just below the row which is highlighted then make that as the\r\n    // first index.\r\n    const viewPortFirstRowIndex = this.indexes.first;\r\n\r\n    let offsetScroll;\r\n    if (this.isUseRowHeightCache || typeof this.rowHeight === 'function') {\r\n      offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex);\r\n      return offsetScroll <= this.offsetY ? Math.max(0, viewPortFirstRowIndex - 1) : viewPortFirstRowIndex;\r\n    }\r\n    offsetScroll = this.rowHeight * viewPortFirstRowIndex;\r\n    return offsetScroll <= this.offsetY ? Math.max(0, viewPortFirstRowIndex - 1) : viewPortFirstRowIndex;\r\n    // return viewPortFirstRowIndex;\r\n  }\r\n\r\n  /**\r\n   * Toggle the Expansion of the row i.e. if the row is expanded then it will\r\n   * collapse and vice versa.   Note that the expanded status is stored as\r\n   * a part of the row object itself as we have to preserve the expanded row\r\n   * status in case of sorting and filtering of the row set.\r\n   */\r\n  toggleRowExpansion(rowContext: IRowContext): boolean {\r\n    // Capture the row index of the first row that is visible on the viewport.\r\n    // const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\r\n    let expanded = rowContext.expanded;\r\n\r\n    // If the rowDetailHeight is auto --> only in case of non-virtualized scroll\r\n    if (this.isUseRowHeightCache) {\r\n      const rowDetailHeight = this.getDetailRowHeight(rowContext.row) * (expanded ? -1 : 1);\r\n      this.rowHeightsCache.update(rowContext.rowIndex, rowDetailHeight);\r\n    }\r\n    // Update the toggled row and update thive nevere heights in the cache.\r\n    expanded = !expanded;\r\n    this.rowExpansions.set(rowContext.row, expanded);\r\n\r\n    this.$emit('detail-toggle', {\r\n      rows: [rowContext.row],\r\n      currentIndex: rowContext.rowIndex, // viewPortFirstRowIndex\r\n    });\r\n    return Boolean(expanded);\r\n  }\r\n\r\n  /**\r\n   * Expand/Collapse all the rows no matter what their state is.\r\n   */\r\n  toggleAllRows(expanded: boolean): void {\r\n    // clear prev expansions\r\n    this.rowExpansions.clear();\r\n\r\n    const rowExpanded = Boolean(expanded);\r\n\r\n    // Capture the row index of the first row that is visible on the viewport.\r\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\r\n\r\n    for (const row of this.rows) {\r\n      this.rowExpansions.set(row, rowExpanded);\r\n    }\r\n\r\n    if (this.scrollbarV) {\r\n      // Refresh the full row heights cache since every row was affected.\r\n      this.recalcLayout();\r\n    }\r\n\r\n    // Emit all rows that have been expanded.\r\n    this.$emit('detail-toggle', {\r\n      rows: this.rows,\r\n      currentIndex: viewPortFirstRowIndex,\r\n    });\r\n  }\r\n\r\n  onGroupToggle($event: { value: Record<string, unknown> }): void {\r\n    this.$emit('group-toggle', $event);\r\n  }\r\n\r\n  /**\r\n   * Recalculates the table\r\n   */\r\n  recalcLayout(): void {\r\n    this.refreshRowHeightCache();\r\n    this.updateIndexes();\r\n    this.updateRows();\r\n  }\r\n\r\n  /**\r\n   * Tracks the column\r\n   */\r\n  columnTrackingFn(index: number, column: TableColumn): string {\r\n    return column.$$id;\r\n  }\r\n\r\n  /**\r\n   * Gets the row pinning group styles\r\n   */\r\n  // stylesByGroup(group: string) {\r\n  //   const widths = this.columnGroupWidths;\r\n  //   const offsetX = this.myOffsetX;\r\n\r\n  //   const styles = {\r\n  //     width: `${widths[group]}px`\r\n  //   };\r\n\r\n  //   if (group === 'left') {\r\n  //     translateXY(styles, offsetX, 0);\r\n  //   } else if (group === 'right') {\r\n  //     const bodyWidth = parseInt(this.innerWidth + '', 0);\r\n  //     const totalDiff = widths.total - bodyWidth;\r\n  //     const offsetDiff = totalDiff - offsetX;\r\n  //     const offset = offsetDiff * -1;\r\n  //     translateXY(styles, offset, 0);\r\n  //   }\r\n\r\n  //   return styles;\r\n  // }\r\n\r\n  initExpansions(group: IGroupedRows): void {\r\n    this.rowExpansions.set(group, true);\r\n    if (group.groups) {\r\n      for (const gr of group.groups) {\r\n        this.initExpansions(gr);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns if the row was expanded and set default row expansion when row expansion is empty\r\n   */\r\n  getRowExpanded(row: Record<string, unknown>): boolean {\r\n    // if (this.rowExpansions.size === 0 && this.groupExpansionDefault && this.groupedRows) {\r\n    //   for (const group of this.groupedRows) {\r\n    //     this.initExpansions(group);\r\n    //   }\r\n    // }\r\n    if (!this.rowDetail) {\r\n      return false;\r\n    }\r\n    const expanded = Boolean(this.rowExpansions.get(row));\r\n    return expanded;\r\n  }\r\n\r\n  /**\r\n   * Gets the row index given a row\r\n   */\r\n  getRowIndex(row: Record<string, unknown>): number {\r\n    return row ? this.rowIndexes.get(row) || 0 : 0;\r\n  }\r\n\r\n  onTreeAction(event: unknown): void {\r\n    this.$emit('tree-action', event);\r\n  }\r\n\r\n  isSelect(row: Record<string, unknown>): boolean {\r\n    if (!this.selectEnabled) {\r\n      return false;\r\n    }\r\n    return this.selector ? this.selector.getRowSelected(row) : false;\r\n  }\r\n\r\n  isChecked(row: Record<string, unknown>): boolean {\r\n    if (!this.checkEnabled) {\r\n      return false;\r\n    }\r\n    return this.selector ? this.selector.getRowChecked(row) : false;\r\n  }\r\n\r\n  onActivate(model: Model, index: number): void {\r\n    if (this.selector) {\r\n      this.selector.onActivate(model, this.indexes.first + index);\r\n    }\r\n  }\r\n\r\n  onRowRendered(row: Record<string, unknown>): void {\r\n    if (this.renderCounter === 0) {\r\n      // eslint-disable-next-line no-console\r\n      console.time('render');\r\n    }\r\n    this.renderCounter++;\r\n    const counter = this.renderCounter;\r\n    clearTimeout(this.renderId);\r\n    this.renderId = setTimeout(() => this.checkRenderFinish(counter), 100) as unknown as number;\r\n  }\r\n\r\n  checkRenderFinish(counter: number): void {\r\n    if (counter === this.renderCounter) {\r\n      // eslint-disable-next-line no-console\r\n      console.timeEnd('render');\r\n      this.renderCounter = 0;\r\n      this.$emit('rendered');\r\n    } else {\r\n      counter = this.renderCounter;\r\n      clearTimeout(this.renderId);\r\n      this.renderId = setTimeout(() => this.checkRenderFinish(counter), 100) as unknown as number;\r\n    }\r\n  }\r\n\r\n  buildStylesByGroup(): void {\r\n    this.groupStyles['left'] = this.calcStylesByGroup('left');\r\n    this.groupStyles['center'] = this.calcStylesByGroup('center');\r\n    this.groupStyles['right'] = this.calcStylesByGroup('right');\r\n  }\r\n\r\n  calcStylesByGroup(group: keyof IColumnsWidth): Record<string, string> {\r\n    if (!this.columnGroupWidths) {\r\n      return null;\r\n    }\r\n    const widths = this.columnGroupWidths;\r\n    const offsetX = this.myOffsetX;\r\n    const styles = {\r\n      width: `${widths[group]}px`,\r\n      // 'will-change': 'transform',\r\n    };\r\n    if (group === 'left') {\r\n      translateXY(styles, offsetX, 0);\r\n    } else if (group === 'right') {\r\n      const bodyWidth = parseInt(this.innerWidth.toString(), 10);\r\n      const totalDiff = widths.total - bodyWidth;\r\n      const offsetDiff = totalDiff - offsetX;\r\n      const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\r\n      translateXY(styles, offset, 0);\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  getGroupStyles(colGroup: { type: 'left' | 'center' | 'right' }): Record<string, string | number> {\r\n    if (!this.columnGroupWidths) {\r\n      return null;\r\n    }\r\n    if (colGroup && colGroup.type) {\r\n      return {\r\n        width: `${this.columnGroupWidths.total}px`,\r\n        ...this.groupStyles[colGroup.type],\r\n      };\r\n    }\r\n    return {\r\n      width: `${this.columnGroupWidths.total}px`,\r\n    };\r\n  }\r\n\r\n  treeStatus(row: Record<string, unknown>): TreeStatus {\r\n    if (!row) {\r\n      return null;\r\n    }\r\n    return row.treeStatus as TreeStatus;\r\n  }\r\n\r\n  isRowVisible(row: Record<string, unknown>): boolean {\r\n    const rowContext = this.rowContexts.find(c => c.row === row);\r\n    if (!rowContext) {\r\n      return false;\r\n    }\r\n    let rowOffsetY;\r\n    if (this.isUseRowHeightCache || typeof this.rowHeight === 'function') {\r\n      rowOffsetY = this.rowHeightsCache.query(rowContext.rowIndex);\r\n    } else {\r\n      rowOffsetY = this.rowHeight * rowContext.rowIndex;\r\n    }\r\n    return rowOffsetY >= this.offsetY && rowOffsetY <= this.offsetY + this.bodyHeight;\r\n  }\r\n\r\n  onCellFocus($event: Event): void {\r\n    // eslint-disable-next-line no-console\r\n    console.log('onCellFocus($event)');\r\n  }\r\n\r\n  /**\r\n   * Toggle the expansion of the row\r\n   */\r\n  toggleExpandDetail(row: Record<string, unknown>): void {\r\n    const rowContext = this.rowContexts.find(c => c.row === row);\r\n    if (!rowContext) {\r\n      throw new Error('row context is not found');\r\n    }\r\n    rowContext.expanded = this.toggleRowExpansion(rowContext);\r\n    this.updateIndexes();\r\n    this.updateRows(true);\r\n    this.$emit('detail-toggle', {\r\n      type: 'row',\r\n      value: row,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Expand all the rows.\r\n   */\r\n  expandAllDetails(): void {\r\n    this.toggleAllRows(true);\r\n    this.$emit('detail-toggle', {\r\n      type: 'all',\r\n      value: true,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Collapse all the rows.\r\n   */\r\n  collapseAllDetails(): void {\r\n    this.toggleAllRows(false);\r\n    this.$emit('detail-toggle', {\r\n      type: 'all',\r\n      value: false,\r\n    });\r\n  }\r\n}\r\n","import '../themes/material.scss';\r\nimport '../themes/dark.scss';\r\nimport '../themes/bootstrap.scss';\r\nimport '../../assets/icons.css';\r\nimport { CheckMode } from 'types/check.type';\r\nimport { ColumnMode } from 'types/column-mode.type';\r\nimport { ContextmenuType } from 'types/contextmenu.type';\r\nimport { IGroupedRows } from 'types/grouped-rows';\r\nimport { SelectionType } from 'types/selection.type';\r\nimport { SortType } from 'types/sort.type';\r\nimport { ISortEvent, ISortPropDir } from 'types/sort-prop-dir.type';\r\nimport { TableColumn } from 'types/table-column.type';\r\nimport { columnGroupWidths, columnsByPin, columnsByPinArr, IColumnsByPinRecord, IColumnsWidth } from 'utils/column';\r\nimport { setColumnDefaults, setColumnsDefaults } from 'utils/column-helper';\r\nimport { isArrayEqual } from 'utils/equal.array';\r\nimport { adjustColumnWidths, forceFillColumnWidths } from 'utils/math';\r\nimport { sortRows } from 'utils/sort';\r\nimport { throttleable } from 'utils/throttle';\r\nimport { groupRowsByParents, optionalGetterForProp } from 'utils/tree';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\nimport VisibilityDirective from '../directives/visibility.directive';\r\nimport { DimensionsHelper } from '../services/dimensions-helper.service';\r\nimport { ScrollbarHelper } from '../services/scrollbar-helper.service';\r\nimport DataTableBody from './body/body.component';\r\nimport DataTableBodyComponent from './body/body.component.vue';\r\nimport DataTableBodyCellComponent from './body/body-cell.component.vue';\r\nimport DataTableColumnComponent from './columns/column.component';\r\nimport DataTableFooterComponent from './footer/footer.component';\r\nimport DataTableHeaderComponent from './header/header.component';\r\n\r\nVue.component('datatable-column', DataTableColumnComponent);\r\nVue.component('datatable-body-cell', DataTableBodyCellComponent);\r\n\r\ninterface IGroup {\r\n  title: string;\r\n  prop: string;\r\n  valueGetter?: (value: unknown) => string;\r\n}\r\n\r\nexport type TGroupByField = string | IGroup;\r\n\r\ntype TRowHeightFunc = (row: Record<string, unknown>, index?: number) => number;\r\n\r\n@Component({\r\n  directives: {\r\n    'v-visibility-observer': VisibilityDirective,\r\n  },\r\n  components: {\r\n    'datatable-header': DataTableHeaderComponent,\r\n    'datatable-body': DataTableBodyComponent,\r\n    'datatable-footer': DataTableFooterComponent,\r\n  },\r\n})\r\nexport default class DatatableComponent extends Vue {\r\n  @Prop({ default: false }) visibilityCheck: boolean;\r\n  @Prop({ default: 1000 }) visibilityCheckTimeout: number;\r\n  /**\r\n   * Rows that are displayed in the table.\r\n   */\r\n  @Prop() rows: Array<Record<string, unknown>>;\r\n  /**\r\n   * This attribute allows the user to set the names of the columns to group the data with\r\n   */\r\n  @Prop() groupRowsBy: Array<TGroupByField | Array<TGroupByField>>;\r\n  @Prop() columns: TableColumn[];\r\n  /**\r\n   * List of row objects that should be\r\n   * represented as selected in the grid.\r\n   * Default value: `[]`\r\n   */\r\n  @Prop({ type: Array, default: (): Array<Record<string, unknown>> => [] }) selected: Array<Record<string, unknown>>;\r\n  /**\r\n   * List of row objects that should be\r\n   * represented as checked in the grid.\r\n   * Default value: `[]`\r\n   */\r\n  @Prop({ type: Array, default: (): Array<Record<string, unknown>> => [] }) checked: Array<Record<string, unknown>>;\r\n  /**\r\n   * Enable vertical scrollbars\r\n   */\r\n  @Prop({ type: Boolean, default: false }) scrollbarV: boolean;\r\n  /**\r\n   * Enable horz scrollbars\r\n   */\r\n  @Prop({ type: Boolean, default: false }) scrollbarH: boolean;\r\n  /**\r\n   * The row height; which is necessary\r\n   * to calculate the height for the lazy rendering.\r\n   */\r\n  @Prop({ default: 'auto' }) rowHeight: TRowHeightFunc | number | string;\r\n  /**\r\n   * The group header row height\r\n   */\r\n  @Prop() groupRowHeight: number | string;\r\n  /**\r\n   * The group header row styles\r\n   */\r\n  @Prop() groupHeaderStyles: Record<string, string | number>;\r\n  /**\r\n   * The group header row css classes\r\n   */\r\n  @Prop() groupHeaderClasses: string | Array<string>;\r\n  /**\r\n   * The detail row height\r\n   */\r\n  @Prop() rowDetailHeight: number | string;\r\n  /**\r\n   * Type of column width distribution formula.\r\n   * Example: flex, force, standard\r\n   */\r\n  @Prop({ type: String, validator: (value: string) => ['standard', 'flex', 'force'].indexOf(value) !== -1 })\r\n  columnMode: string;\r\n  /**\r\n   * The minimum header height in pixels.\r\n   * Pass a falsey for no header\r\n   */\r\n  @Prop({ type: Number, default: 30 }) headerHeight: number;\r\n  /**\r\n   * The minimum footer height in pixels.\r\n   * Pass falsey for no footer\r\n   */\r\n  @Prop({ type: Number, default: 0 }) footerHeight: number;\r\n  /**\r\n   * If the table should use external paging\r\n   * otherwise its assumed that all data is preloaded.\r\n   */\r\n  @Prop({ type: Boolean, default: false }) externalPaging: boolean;\r\n  /**\r\n   * If the table should use external page switcher\r\n   */\r\n  @Prop({ type: Boolean, default: false }) externalPager: boolean;\r\n  /**\r\n   * If the table should use external sorting or\r\n   * the built-in basic sorting.\r\n   */\r\n  @Prop({ type: Boolean, default: false }) externalSorting: boolean;\r\n  /**\r\n   * The page size to be shown.\r\n   * Default value: `undefined`\r\n   */\r\n  @Prop() limit: number;\r\n  /**\r\n   * The total count of all rows.\r\n   * Default value: `0`\r\n   */\r\n  @Prop({ type: Number, default: 0 }) count: number;\r\n  /**\r\n   * The current offset ( page - 1 ) shown.\r\n   * Default value: `0`\r\n   */\r\n  @Prop({ type: Number, default: 0 }) offset: number;\r\n  /**\r\n   * Show the linear loading bar.\r\n   * Default value: `false`\r\n   */\r\n  @Prop({ type: Boolean, default: false }) loadingIndicator: boolean;\r\n  /**\r\n   * Type of row selection. Options are:\r\n   *\r\n   *  - `single`\r\n   *  - `multi`\r\n   *  - `checkbox`\r\n   *  - `multiClick`\r\n   *  - `cell`\r\n   *\r\n   * For no selection pass a `false`.\r\n   * Default value: `undefined`\r\n   */\r\n  @Prop() selectionType: SelectionType;\r\n  /**\r\n   * Type of row check type. Options are:\r\n   *\r\n   *  - `checkIsSelect`\r\n   *  - `checkNoSelect`\r\n   *\r\n   * Default value: `checkIsSelect`\r\n   */\r\n  @Prop({ default: CheckMode.checkIsSelect }) checkMode: CheckMode;\r\n  /**\r\n   * Enable/Disable ability to re-order columns\r\n   * by dragging them.\r\n   */\r\n  @Prop({ type: Boolean, default: true }) reorderable: boolean;\r\n  /**\r\n   * Swap columns on re-order columns or\r\n   * move them.\r\n   */\r\n  @Prop({ type: Boolean, default: false }) swapColumns: boolean;\r\n  /**\r\n   * The type of sorting\r\n   */\r\n  @Prop({ type: String, validator: (value: string) => ['single', 'multi'].indexOf(value) !== -1 }) sortType: string;\r\n  /**\r\n   * Array of sorted columns by property and type.\r\n   * Default value: `[]`\r\n   */\r\n  @Prop({ type: Array, default: (): Array<ISortPropDir> => [] }) sorts: ISortPropDir[];\r\n  /**\r\n   * Go to first page when sorting to see the newly sorted data\r\n   * Default value: true\r\n   */\r\n  @Prop({ default: true }) goToFirstAfterSort: boolean;\r\n  /**\r\n   * Css class overrides\r\n   */\r\n  @Prop({\r\n    type: Object,\r\n    default: () => ({\r\n      sortAscending: 'datatable-icon-up',\r\n      sortDescending: 'datatable-icon-down',\r\n      pagerLeftArrow: 'datatable-icon-left',\r\n      pagerRightArrow: 'datatable-icon-right',\r\n      pagerPrevious: 'datatable-icon-prev',\r\n      pagerNext: 'datatable-icon-skip',\r\n    }),\r\n  })\r\n  cssClasses: Record<string, unknown>;\r\n  /**\r\n   * Message overrides for localization\r\n   *\r\n   * emptyMessage     [default] = 'No data to display'\r\n   * totalMessage     [default] = 'total'\r\n   * selectedMessage  [default] = 'selected'\r\n   */\r\n  @Prop({\r\n    type: Object,\r\n    default: () => ({\r\n      emptyMessage: 'No data to display',\r\n      // Footer total message\r\n      totalMessage: 'total',\r\n      // Footer selected message\r\n      selectedMessage: 'selected',\r\n    }),\r\n  })\r\n  messages: Record<string, string>;\r\n  /**\r\n   * This will be used when displaying or selecting rows.\r\n   * when tracking/comparing them, we'll use the value of this fn,\r\n   *\r\n   * (`fn(x) === fn(y)` instead of `x === y`)\r\n   */\r\n  @Prop({ type: Function, default: (x: Record<string, unknown>) => x }) rowIdentity: (\r\n    x: Record<string, unknown>\r\n  ) => string | number;\r\n  /**\r\n   * Row specific classes.\r\n   * Similar implementation to ngClass.\r\n   *\r\n   *  [rowClass]=\"'first second'\"\r\n   *  [rowClass]=\"{ 'first': true, 'second': true, 'third': false }\"\r\n   */\r\n  @Prop() rowClass: (row: Record<string, unknown>, rowIndex: number) => string | string;\r\n  /**\r\n   * A boolean/function you can use to check whether you want\r\n   * to select a particular row based on a criteria. Example:\r\n   *\r\n   *    (selection) => {\r\n   *      return selection !== 'Ethel Price';\r\n   *    }\r\n   */\r\n  @Prop() selectCheck: () => void;\r\n  /**\r\n   * A function you can use to check whether you want\r\n   * to show the checkbox for a particular row based on a criteria. Example:\r\n   *\r\n   *    (row, column, value) => {\r\n   *      return row.name !== 'Ethel Price';\r\n   *    }\r\n   */\r\n  @Prop({ type: Function, default: null }) displayCheck: (\r\n    row: Record<string, unknown>,\r\n    column?: TableColumn,\r\n    value?: unknown\r\n  ) => boolean;\r\n  /**\r\n   * A boolean you can use to set the detault behaviour of rows and groups\r\n   * whether they will start expanded or not. If ommited the default is NOT expanded.\r\n   *\r\n   */\r\n  @Prop({ type: Boolean, default: false }) groupExpansionDefault: boolean;\r\n  /**\r\n   * Property to which you can use for custom tracking of rows.\r\n   * Example: 'name'\r\n   */\r\n  @Prop() trackByProp: string;\r\n  /**\r\n   * Property to which you can use for determining select all\r\n   * rows on current page or not.\r\n   *\r\n   * @type {boolean}\r\n   * @memberOf DatatableComponent\r\n   */\r\n  @Prop({ type: Boolean, default: false }) selectAllRowsOnPage: boolean;\r\n  /**\r\n   * A flag for row virtualization on / off\r\n   */\r\n  @Prop({ type: Boolean, default: true }) virtualization: boolean;\r\n  /**\r\n   * Tree from relation\r\n   */\r\n  @Prop() treeFromRelation: string;\r\n  /**\r\n   * Tree to relation\r\n   */\r\n  @Prop() treeToRelation: string;\r\n  /**\r\n   * Is the tree will be lazy loading\r\n   */\r\n  @Prop({ default: false }) lazyTree: boolean;\r\n  /**\r\n   * A flag for switching summary row on / off\r\n   */\r\n  @Prop({ type: Boolean, default: false }) summaryRow: boolean;\r\n  /**\r\n   * A height of summary row\r\n   */\r\n  @Prop({ default: 30 }) summaryHeight: number | string;\r\n  /**\r\n   * A property holds a summary row position: top/bottom\r\n   */\r\n  @Prop({ type: String, default: 'top' }) summaryPosition: string;\r\n  /**\r\n   * Before selection row check function. If return false selection will be cancel\r\n   */\r\n  @Prop() beforeSelectRowCheck: (\r\n    newRow: Record<string, unknown>,\r\n    oldSelected: Record<string, unknown>[]\r\n  ) => boolean | Promise<boolean>;\r\n\r\n  // non-reactive\r\n  /**\r\n   * Reference to the body component for manually\r\n   * invoking functions on the body.\r\n   */\r\n  bodyComponent: DataTableBody;\r\n  /**\r\n   * Reference to the header component for manually\r\n   * invoking functions on the header.\r\n   *\r\n   * @private\r\n   * @type {DataTableHeaderComponent}\r\n   * @memberOf DatatableComponent\r\n   */\r\n  headerComponent: DataTableHeaderComponent;\r\n\r\n  resizeHandler: () => void;\r\n  resizeObserver?: ResizeObserver;\r\n\r\n  groupedRows: IGroupedRows[] = null;\r\n\r\n  innerWidth = 0;\r\n  pageSize = 0;\r\n  bodyHeight = 0;\r\n  rowCount = 0;\r\n  offsetX = 0;\r\n  internalRows: Array<Record<string, unknown>> = null;\r\n  initialRows: Array<Record<string, unknown>> = null;\r\n  internalColumns: TableColumn[] = null;\r\n  myColumnMode: ColumnMode = ColumnMode.standard;\r\n  mySortType: SortType = SortType.single;\r\n  mySorts: Array<ISortPropDir> = [];\r\n  innerOffset = 0; // page number after scrolling\r\n  mySelected: Array<Record<string, unknown>> = [];\r\n  myChecked: Array<Record<string, unknown>> = [];\r\n  expandedGroups: Record<string, boolean> = {};\r\n  renderTracking = false;\r\n  isVisible = false;\r\n\r\n  rowDetail = false; // DatatableRowDetailDirective;\r\n  groupHeader = false; // DatatableGroupHeaderDirective;\r\n\r\n  groupHeaderSlot: (obj: Record<string, unknown>) => VNode[] = null;\r\n  rowDetailSlot: (obj: Record<string, unknown>) => VNode[] = null;\r\n  footerSlot: (obj: Record<string, unknown>) => VNode[] = null;\r\n  // isColumnsInited = false;\r\n  // isColumnsInitedTimeoutId: number;\r\n  columnGroupWidths: IColumnsWidth = null;\r\n  columnsByPinArray: IColumnsByPinRecord[] = null;\r\n\r\n  private readonly scrollbarHelper: ScrollbarHelper = new ScrollbarHelper();\r\n  private readonly dimensionsHelper: DimensionsHelper = new DimensionsHelper();\r\n  private needToCalculateDims = true;\r\n  private activeGroupRow: IGroupedRows = null;\r\n  private recalculateColumnsTimer: number;\r\n\r\n  @Watch('rows', { immediate: true }) onRowsChanged(val: Array<Record<string, unknown>>): void {\r\n    if (val) {\r\n      this.internalRows = [...val];\r\n    }\r\n    this.innerSortRows();\r\n    this.groupedRows = null;\r\n    if (this.rows && this.groupRowsBy) {\r\n      // this.groupedRows = this.groupArrayBy(this.rows, this.groupRowsBy);\r\n      this.groupedRows = this.groupArrayBy(this.rows, this.groupRowsBy, 0);\r\n      this.internalRows = this.processGroupedRows(this.groupedRows) as Array<Record<string, unknown>>;\r\n    }\r\n\r\n    // recalculate sizes/etc\r\n    if (this.$el) {\r\n      this.recalculate();\r\n    }\r\n  }\r\n\r\n  @Watch('groupRowsBy') onGroupRowsByChanged(\r\n    newVal: Array<TGroupByField | Array<TGroupByField>>,\r\n    oldVal: Array<TGroupByField | Array<TGroupByField>>\r\n  ): void {\r\n    if (isArrayEqual(newVal, oldVal)) {\r\n      return;\r\n    }\r\n    this.expandedGroups = {};\r\n    this.groupHeader = Boolean(this.groupRowsBy);\r\n    this.groupedRows = null;\r\n    if (this.groupRowsBy) {\r\n      this.groupedRows = this.groupArrayBy(this.rows, this.groupRowsBy, 0);\r\n      this.internalRows = this.processGroupedRows(this.groupedRows) as Array<Record<string, unknown>>;\r\n    } else {\r\n      this.internalRows = this.rows;\r\n    }\r\n    // auto sort on new updates\r\n    if (!this.externalSorting) {\r\n      this.sortInternalRows();\r\n    }\r\n    this.recalculate();\r\n  }\r\n\r\n  /**\r\n   * Columns to be displayed.\r\n   */\r\n  @Watch('columns', { immediate: true }) onColumnsChanged(newVal: TableColumn[]): void {\r\n    if (newVal) {\r\n      setColumnsDefaults(newVal, this);\r\n      this.internalColumns = [...newVal];\r\n      this.$nextTick(() => this.recalculateColumns());\r\n    }\r\n  }\r\n  /**\r\n   * The page size to be shown.\r\n   * Default value: `undefined`\r\n   */\r\n  @Watch('limit') onLimitChanged(): void {\r\n    // recalculate sizes/etc\r\n    this.recalculate();\r\n  }\r\n  /**\r\n   * The total count of all rows.\r\n   * Default value: `0`\r\n   */\r\n  @Watch('count') onCountChanged(): void {\r\n    // recalculate sizes/etc\r\n    this.recalculate();\r\n  }\r\n\r\n  @Watch('columnMode', { immediate: true }) onColumnModeChanged(): void {\r\n    this.myColumnMode = ColumnMode[this.columnMode] as ColumnMode;\r\n  }\r\n\r\n  @Watch('sortType', { immediate: true }) onSortTypeChanged(): void {\r\n    if (SortType[this.sortType]) {\r\n      this.mySortType = SortType[this.sortType] as SortType;\r\n    }\r\n  }\r\n\r\n  @Watch('offset', { immediate: true }) onOffsetChanged(): void {\r\n    if (this.innerOffset !== this.offset) {\r\n      this.innerOffset = this.offset;\r\n      if (this.pageSize && this.innerOffset >= 0) {\r\n        this.onFooterPage({ page: this.innerOffset + 1 });\r\n      }\r\n    }\r\n  }\r\n\r\n  @Watch('pageSize') onPageSizeChanged(): void {\r\n    if (this.pageSize && this.innerOffset >= 0) {\r\n      this.$nextTick(() => this.onFooterPage({ page: this.innerOffset + 1 }));\r\n    }\r\n  }\r\n\r\n  @Watch('selected', { immediate: true }) onSelectedChanged(): void {\r\n    this.mySelected = this.selected;\r\n  }\r\n\r\n  @Watch('checked', { immediate: true }) onCheckedChanged(): void {\r\n    this.myChecked = this.checked;\r\n  }\r\n\r\n  @Watch('sorts', { immediate: true }) onSortsChanged(): void {\r\n    this.mySorts = this.sorts;\r\n  }\r\n\r\n  @Watch('mySorts') onMySortsChanged(): void {\r\n    this.innerSortRows();\r\n  }\r\n\r\n  /**\r\n   * Window resize handler to update sizes.\r\n   */\r\n  @throttleable(5)\r\n  onWindowResize(): void {\r\n    this.recalculate();\r\n  }\r\n\r\n  created(): void {\r\n    this.groupHeader = Boolean(this.groupRowsBy);\r\n    if (this.$listeners.rendered) {\r\n      this.renderTracking = true;\r\n    }\r\n  }\r\n\r\n  beforeDestroy(): void {\r\n    if (this.resizeHandler) {\r\n      window.removeEventListener('resize', this.resizeHandler);\r\n    }\r\n    if (this.resizeObserver) {\r\n      this.resizeObserver.unobserve(this.$el);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hook that is called after data-bound\r\n   * properties of a directive are initialized.\r\n   */\r\n  mounted(): void {\r\n    this.bodyComponent = this.$refs.datatableBody as DataTableBody;\r\n    this.headerComponent = this.$refs.datatableHeader as DataTableHeaderComponent;\r\n    this.groupHeaderSlot = this.$scopedSlots.groupHeader || this.$scopedSlots['group-header'];\r\n    this.rowDetailSlot = this.$scopedSlots.rowDetail || this.$scopedSlots['row-detail'];\r\n    this.footerSlot = this.$scopedSlots.footer;\r\n    this.rowDetail = Boolean(this.rowDetailSlot);\r\n\r\n    if (!this.externalSorting) {\r\n      this.sortInternalRows();\r\n    }\r\n    if ((window as Window).ResizeObserver) {\r\n      this.needToCalculateDims = false;\r\n      this.resizeObserver = new (window as Window).ResizeObserver(entries => {\r\n        let height = 0;\r\n        let width = 0;\r\n        if (entries.length && entries[0].contentRect) {\r\n          width = Math.round(entries[0].contentRect.width);\r\n          height = Math.round(entries[0].contentRect.height);\r\n        } else {\r\n          height = this.$el.clientHeight;\r\n          width = this.$el.clientWidth;\r\n        }\r\n        if (this.scrollbarV) {\r\n          if (this.headerHeight) {\r\n            height = height - this.headerHeight;\r\n          }\r\n          if (this.footerHeight) {\r\n            height = height - this.footerHeight;\r\n          }\r\n        }\r\n        if (this.innerWidth === width && this.bodyHeight === height) {\r\n          return;\r\n        }\r\n        this.innerWidth = width;\r\n        this.bodyHeight = height;\r\n        if (typeof requestAnimationFrame === 'undefined') {\r\n          this.recalculate();\r\n        } else {\r\n          requestAnimationFrame(() => {\r\n            this.recalculate();\r\n          });\r\n        }\r\n      });\r\n      this.resizeObserver.observe(this.$el);\r\n    } else {\r\n      this.resizeHandler = this.onWindowResize.bind(this) as () => void;\r\n      window.addEventListener('resize', this.resizeHandler);\r\n    }\r\n    const init = () => {\r\n      this.recalculate();\r\n      // emit page for virtual server-side kickoff\r\n      if (this.externalPaging && this.scrollbarV) {\r\n        this.$emit('page', {\r\n          count: this.count,\r\n          pageSize: this.pageSize,\r\n          limit: this.limit,\r\n          offset: this.innerOffset,\r\n        });\r\n      }\r\n    };\r\n    if (typeof requestAnimationFrame === 'undefined') {\r\n      init();\r\n    } else {\r\n      requestAnimationFrame(() => {\r\n        init();\r\n      });\r\n    }\r\n  }\r\n\r\n  get myRowHeight(): number | string | TRowHeightFunc {\r\n    if (typeof this.rowHeight === 'string') {\r\n      return this.rowHeight === 'auto' ? 'auto' : Number(this.rowHeight);\r\n    }\r\n    return this.rowHeight;\r\n  }\r\n\r\n  get myOffset(): number {\r\n    if (this.rowCount) {\r\n      return Math.max(Math.min(this.innerOffset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\r\n    }\r\n    return this.innerOffset;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied if the header height if fixed height.\r\n   */\r\n  get isFixedHeader(): boolean {\r\n    const headerHeight: number | string = this.headerHeight;\r\n    return typeof headerHeight === 'string' ? <string>headerHeight !== 'auto' : true;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to the root element if\r\n   * the row heights are fixed heights.\r\n   */\r\n  get isFixedRow(): boolean {\r\n    if (typeof this.rowHeight === 'function' || this.rowHeight === 'auto') {\r\n      return false;\r\n    }\r\n    return true;\r\n    // const rowHeight: number | string = this.rowHeight;\r\n    // return typeof rowHeight === 'string' ? rowHeight !== 'auto' : true;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root element if\r\n   * vertical scrolling is enabled.\r\n   */\r\n  get isVertScroll(): boolean {\r\n    return this.scrollbarV;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root element if\r\n   * virtualization is enabled.\r\n   */\r\n  get isVirtualized(): boolean {\r\n    return this.virtualization;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to the root element\r\n   * if the horziontal scrolling is enabled.\r\n   */\r\n  get isHorScroll(): boolean {\r\n    return this.scrollbarH;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root element is selectable.\r\n   */\r\n  get isSelectable(): boolean {\r\n    // eslint-disable-next-line no-undefined\r\n    return this.selectionType !== undefined;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root is checkbox selection.\r\n   */\r\n  get isCheckboxSelection(): boolean {\r\n    return this.selectionType === SelectionType.checkbox;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root if cell selection.\r\n   */\r\n  get isCellSelection(): boolean {\r\n    return this.selectionType === SelectionType.cell;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root if single select.\r\n   */\r\n  get isSingleSelection(): boolean {\r\n    return this.selectionType === SelectionType.single;\r\n  }\r\n\r\n  get isSingleFocusSelection(): boolean {\r\n    return this.selectionType === SelectionType.singleFocus;\r\n  }\r\n\r\n  /**\r\n   * CSS class added to root element if mulit select\r\n   */\r\n  get isMultiSelection(): boolean {\r\n    return this.selectionType === SelectionType.multi;\r\n  }\r\n\r\n  /**\r\n   * CSS class added to root element if mulit click select\r\n   */\r\n  get isMultiClickSelection(): boolean {\r\n    return this.selectionType === SelectionType.multiClick;\r\n  }\r\n\r\n  get classObject(): Record<string, unknown> {\r\n    return {\r\n      'fixed-header': this.isFixedHeader,\r\n      'fixed-row': this.isFixedRow,\r\n      'scroll-vertical': this.isVertScroll,\r\n      virtualized: this.isVirtualized,\r\n      'scroll-horz': this.isHorScroll,\r\n      selectable: this.isSelectable,\r\n      'checkbox-selection': this.isCheckboxSelection,\r\n      'cell-selection': this.isCellSelection,\r\n      'single-selection': this.isSingleSelection,\r\n      'multi-selection': this.isMultiSelection,\r\n      'multi-click-selection': this.isMultiClickSelection,\r\n    };\r\n  }\r\n\r\n  get allRowsSelected(): boolean {\r\n    let arr = this.mySelected;\r\n    if (this.checkMode === CheckMode.checkNoSelect) {\r\n      arr = this.myChecked;\r\n    }\r\n    let allRowsSelected = this.rows && arr && arr.length === this.rows.length;\r\n\r\n    if (this.selectAllRowsOnPage && this.bodyComponent) {\r\n      const indexes: { first: number; last: number } = this.bodyComponent.indexes;\r\n      let rowsOnPage = this.rows.length;\r\n      if (this.limit && !this.scrollbarV && !this.virtualization) {\r\n        rowsOnPage = indexes.last - indexes.first;\r\n      }\r\n      allRowsSelected = arr.length === rowsOnPage;\r\n    }\r\n\r\n    return arr && this.rows && this.rows.length !== 0 && allRowsSelected;\r\n  }\r\n\r\n  get scrollbarWidth(): number {\r\n    return this.scrollbarHelper.width;\r\n  }\r\n\r\n  reset(): void {\r\n    this.bodyComponent.reset();\r\n  }\r\n\r\n  adjust(): void {\r\n    this.bodyHeight = -1;\r\n    setTimeout(() => {\r\n      this.recalculateDims();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Recalc's the sizes of the grid.\r\n   *\r\n   * Updated automatically on changes to:\r\n   *\r\n   *  - Columns\r\n   *  - Rows\r\n   *  - Paging related\r\n   *\r\n   * Also can be manually invoked or upon window resize.\r\n   */\r\n  recalculate(): void {\r\n    if (this.needToCalculateDims) {\r\n      // this.recalculatePages will be called in this.recalculateDims\r\n      this.recalculateDims();\r\n    } else {\r\n      this.recalculatePages();\r\n    }\r\n    this.recalculateColumns();\r\n  }\r\n\r\n  /**\r\n   * Recalulcates the column widths based on column width\r\n   * distribution mode and scrollbar offsets.\r\n   */\r\n  recalculateColumns(\r\n    columns: TableColumn[] = this.internalColumns,\r\n    forceIdx: number = -1,\r\n    allowBleed: boolean = this.scrollbarH\r\n  ): TableColumn[] | null {\r\n    if (!columns) {\r\n      return null;\r\n    }\r\n    let width = this.innerWidth;\r\n    if (this.scrollbarV || this.treeFromRelation) {\r\n      width = width - this.scrollbarHelper.width;\r\n    }\r\n    this.calculateColumnsWidth(width, columns, forceIdx, allowBleed);\r\n    this.$nextTick(() => {\r\n      const colsByPin = columnsByPin(columns);\r\n      this.columnsByPinArray = columnsByPinArr(colsByPin);\r\n      this.columnGroupWidths = columnGroupWidths(colsByPin, columns, width);\r\n    });\r\n    return columns;\r\n  }\r\n\r\n  calculateColumnsWidth(\r\n    width: number,\r\n    columns: TableColumn[] = this.internalColumns,\r\n    forceIdx: number = -1,\r\n    allowBleed: boolean = this.scrollbarH\r\n  ) {\r\n    if (this.myColumnMode === ColumnMode.force) {\r\n      forceFillColumnWidths(columns, width, forceIdx, allowBleed);\r\n    } else if (this.myColumnMode === ColumnMode.flex) {\r\n      adjustColumnWidths(columns, width);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recalculates the dimensions of the table size.\r\n   * Internally calls the page size and row count calcs too.\r\n   *\r\n   */\r\n  recalculateDims(): void {\r\n    const dims = this.dimensionsHelper.getDimensions(this.$el);\r\n    this.innerWidth = Math.floor(dims.width);\r\n\r\n    if (this.scrollbarV) {\r\n      let height = dims.height;\r\n      if (this.headerHeight) {\r\n        height = height - this.headerHeight;\r\n      }\r\n      if (this.footerHeight) {\r\n        height = height - this.footerHeight;\r\n      }\r\n      this.bodyHeight = height;\r\n    }\r\n    this.recalculatePages();\r\n  }\r\n\r\n  /**\r\n   * Recalculates the pages after a update.\r\n   */\r\n  recalculatePages(): void {\r\n    this.pageSize = this.calcPageSize();\r\n    this.rowCount = this.calcRowCount();\r\n    this.$emit('row-count', this.rowCount);\r\n  }\r\n\r\n  /**\r\n   * Body triggered a page event.\r\n   */\r\n  onBodyPage({ offset }: { offset: number }): void {\r\n    // Avoid pagination caming from body events like scroll when the table\r\n    // has no virtualization and the external paging is enable.\r\n    // This means, let's the developer handle pagination by my him(her) self\r\n    if (this.externalPaging && !this.virtualization) {\r\n      return;\r\n    }\r\n    if (this.innerOffset === offset) {\r\n      return;\r\n    }\r\n    this.innerOffset = offset;\r\n    this.$emit('page', {\r\n      count: this.count,\r\n      pageSize: this.pageSize,\r\n      limit: this.limit,\r\n      offset: this.innerOffset,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The body triggered a scroll event.\r\n   */\r\n  onBodyScroll(event: MouseEvent): void {\r\n    this.offsetX = event.offsetX;\r\n    // this.$emit('offsetX', event.offsetX);\r\n    this.$emit('scroll', event);\r\n  }\r\n\r\n  /**\r\n   * The footer triggered a page event.\r\n   */\r\n  onFooterPage(event: { page: number }): void {\r\n    this.innerOffset = event.page - 1;\r\n    if (this.bodyComponent) {\r\n      this.bodyComponent.updateOffsetY(this.innerOffset, true);\r\n    }\r\n\r\n    this.$emit('page', {\r\n      count: this.count,\r\n      pageSize: this.pageSize,\r\n      limit: this.limit,\r\n      offset: this.innerOffset,\r\n    });\r\n\r\n    if (this.selectAllRowsOnPage && !this.scrollbarV && this.limit) {\r\n      this.mySelected = [];\r\n      this.$emit('select', {\r\n        selected: this.mySelected,\r\n      });\r\n    }\r\n  }\r\n\r\n  onVisible(visible: boolean): void {\r\n    if (this.isVisible !== visible) {\r\n      this.isVisible = visible;\r\n      if (this.isVisible) {\r\n        this.recalculate();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recalculates the sizes of the page\r\n   */\r\n  calcPageSize(val: Array<Record<string, unknown>> = this.rows): number {\r\n    // Keep the page size constant even if the row has been expanded.\r\n    // This is because an expanded row is still considered to be a child of\r\n    // the original row.  Hence calculation would use rowHeight only.\r\n    if (this.scrollbarV && this.virtualization) {\r\n      let rowHeight = 50;\r\n      if (typeof this.rowHeight === 'number') {\r\n        rowHeight = this.rowHeight;\r\n      }\r\n      const size = Math.ceil(this.bodyHeight / rowHeight);\r\n      return Math.max(size, 0);\r\n    }\r\n\r\n    // if limit is passed, we are paging\r\n    // eslint-disable-next-line no-undefined\r\n    if (this.limit !== undefined && this.limit !== null) {\r\n      return Number(this.limit);\r\n    }\r\n\r\n    // otherwise use row length\r\n    if (val) {\r\n      return val.length;\r\n    }\r\n\r\n    // other empty :(\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Calculates the row count.\r\n   */\r\n  calcRowCount(val: Array<Record<string, unknown>> = this.rows): number {\r\n    if (!this.externalPaging) {\r\n      if (!val) {\r\n        return 0;\r\n      }\r\n\r\n      if (this.groupRowsBy) {\r\n        return this.internalRows.length;\r\n      }\r\n      if (this.treeFromRelation !== null && this.treeToRelation !== null) {\r\n        return this.internalRows.length;\r\n      }\r\n      return val.length;\r\n    }\r\n    return this.count;\r\n  }\r\n\r\n  /**\r\n   * The header triggered a contextmenu event.\r\n   */\r\n  onColumnContextmenu({ event, column }: { event: MouseEvent; column: TableColumn }): void {\r\n    this.$emit('tableContextmenu', { event, type: ContextmenuType.header, content: column });\r\n  }\r\n\r\n  /**\r\n   * The body triggered a contextmenu event.\r\n   */\r\n  onRowContextmenu({ event, row }: { event: MouseEvent; row: Record<string, unknown> }): void {\r\n    this.$emit('tableContextmenu', { event, type: ContextmenuType.body, content: row });\r\n  }\r\n\r\n  /**\r\n   * The header triggered a column resize event.\r\n   */\r\n  onColumnResize({ column, newValue }: { column: TableColumn; newValue: number }): void {\r\n    /* Safari/iOS 10.2 workaround */\r\n    // eslint-disable-next-line no-undefined\r\n    if (column === undefined) {\r\n      return;\r\n    }\r\n\r\n    let idx: number;\r\n    this.internalColumns.map((c, i) => {\r\n      if (c.$$id === column.$$id) {\r\n        idx = i;\r\n        c.width = newValue;\r\n        c.canAutoResize = false;\r\n\r\n        // set this so we can force the column\r\n        // width distribution to be to this value\r\n        c.$$oldWidth = newValue;\r\n      }\r\n\r\n      return c;\r\n    });\r\n\r\n    this.recalculateColumns(this.internalColumns, idx);\r\n\r\n    this.$emit('resize', {\r\n      column,\r\n      newValue,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Force change order of columns\r\n   * @param order Array<naumber> (index - new position of column; value - old position of column)\r\n   */\r\n  reorderColumns(order: Array<number>): void {\r\n    const oldColumnsOrder = new Map<number, TableColumn>();\r\n    this.internalColumns.forEach((c, i) => oldColumnsOrder.set(i, c));\r\n    order.forEach((oldPos, newPos) => {\r\n      this.internalColumns[newPos] = oldColumnsOrder.get(oldPos);\r\n    });\r\n    this.recalculateColumns();\r\n  }\r\n\r\n  /**\r\n   * The header triggered a column re-order event.\r\n   */\r\n  onColumnReorder({ column, newValue, prevValue }: { column: TableColumn; newValue: number; prevValue: number }): void {\r\n    const cols = [...this.internalColumns];\r\n\r\n    if (this.swapColumns) {\r\n      const prevCol = cols[newValue];\r\n      if (column.$$id === prevCol.$$id) {\r\n        return;\r\n      }\r\n      cols[newValue] = column;\r\n      cols[prevValue] = prevCol;\r\n    } else if (newValue > prevValue) {\r\n      const movedCol = cols[prevValue];\r\n      for (let i = prevValue; i < newValue; i++) {\r\n        cols[i] = cols[i + 1];\r\n      }\r\n      cols[newValue] = movedCol;\r\n    } else {\r\n      const movedCol = cols[prevValue];\r\n      for (let i = prevValue; i > newValue; i--) {\r\n        cols[i] = cols[i - 1];\r\n      }\r\n      cols[newValue] = movedCol;\r\n    }\r\n\r\n    this.internalColumns = cols;\r\n    this.recalculateColumns();\r\n\r\n    this.$emit('reorder', {\r\n      column,\r\n      newValue,\r\n      prevValue,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The header triggered a column sort event.\r\n   */\r\n  onColumnSort(event: ISortEvent): void {\r\n    // clean all checked rows\r\n    if (this.selectAllRowsOnPage) {\r\n      this.myChecked = [];\r\n      this.$emit('check', {\r\n        checked: this.myChecked,\r\n      });\r\n    }\r\n\r\n    // this.mySorts = event.sorts;\r\n    if (Array.isArray(this.mySorts) && Array.isArray(event.sorts)) {\r\n      this.mySorts = [];\r\n      event.sorts.forEach(item => this.mySorts.push(item));\r\n      if (!this.mySorts.length) {\r\n        this.mySorts.push({ dir: null, prop: null });\r\n      }\r\n    }\r\n\r\n    // Go to first page when sorting to see the newly sorted data\r\n    if (this.goToFirstAfterSort) {\r\n      this.innerOffset = 0;\r\n    }\r\n    this.bodyComponent.updateOffsetY(this.myOffset, true);\r\n    this.$emit('sort', { ...event, sorts: event?.sorts?.filter(s => s.prop) });\r\n  }\r\n\r\n  /**\r\n   * Toggle all row selection\r\n   */\r\n  onHeaderSelect(isChecked: boolean): void {\r\n    let evName = 'select';\r\n    if (this.selectAllRowsOnPage) {\r\n      // before we splice, check if we currently have all selected\r\n      const first = this.bodyComponent.indexes.first;\r\n      const last = this.bodyComponent.indexes.last;\r\n      if (this.checkMode === CheckMode.checkIsSelect) {\r\n        const allSelected = this.mySelected.length === last - first;\r\n        // remove all existing either way\r\n        this.mySelected = [];\r\n        // do the opposite here\r\n        if (!allSelected) {\r\n          this.mySelected.push(...this.internalRows.slice(first, last));\r\n        }\r\n      } else {\r\n        evName = 'check';\r\n        let allChecked = this.myChecked.length === last - first;\r\n        if (this.scrollbarV && this.virtualization && !this.limit) {\r\n          allChecked = this.myChecked.length === this.internalRows.length;\r\n        }\r\n        // remove all existing either way\r\n        this.myChecked = [];\r\n        // do the opposite here\r\n        if (isChecked && !allChecked) {\r\n          if (this.scrollbarV && this.virtualization) {\r\n            this.myChecked.push(...this.internalRows);\r\n          } else {\r\n            this.myChecked.push(...this.internalRows.slice(first, last));\r\n          }\r\n        }\r\n      }\r\n    } else if (this.checkMode === CheckMode.checkIsSelect) {\r\n      // before we splice, chk if we currently have all selected\r\n      const allSelected = this.mySelected.length === this.rows.length;\r\n      // remove all existing either way\r\n      this.mySelected = [];\r\n      // do the opposite here\r\n      if (!allSelected) {\r\n        this.mySelected.push(...this.rows);\r\n      }\r\n    } else {\r\n      const allChecked = this.myChecked.length === this.rows.length;\r\n      this.myChecked = [];\r\n      if (!allChecked) {\r\n        this.myChecked.push(...this.rows);\r\n      }\r\n    }\r\n\r\n    this.$emit(evName, {\r\n      selected: this.mySelected,\r\n      checked: this.myChecked,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A row was selected from body\r\n   */\r\n  onBodySelect(event: Event): void {\r\n    this.$emit('select', event);\r\n  }\r\n\r\n  /**\r\n   * A row was checked from body\r\n   */\r\n  onBodyCheck(event: Event): void {\r\n    this.$emit('check', event);\r\n  }\r\n\r\n  onGroupToggle(event: { value: IGroupedRows | boolean }): void {\r\n    if (!event) {\r\n      return;\r\n    }\r\n    if (typeof event.value !== 'boolean') {\r\n      event.value.__expanded = !event.value.__expanded;\r\n      this.expandedGroups[event.value.key] = event.value.__expanded;\r\n      if (this.activeGroupRow) {\r\n        this.activeGroupRow.active = false;\r\n      }\r\n      this.activeGroupRow = event.value;\r\n      this.activeGroupRow.active = true;\r\n    }\r\n    this.internalRows = this.processGroupedRows(this.groupedRows) as Array<Record<string, unknown>>;\r\n    this.recalculate();\r\n    this.$emit('group-toggle', Object.freeze(event));\r\n  }\r\n\r\n  /**\r\n   * A row was expanded or collapsed for tree\r\n   */\r\n  onTreeAction(event: { row: Record<string, unknown> }): void {\r\n    const row = event.row;\r\n    // TODO: For duplicated items this will not work\r\n    const rowIndex = this.rows.findIndex(r => r[this.treeToRelation] === event.row[this.treeToRelation]);\r\n    this.$emit('tree-action', { row, rowIndex });\r\n  }\r\n\r\n  onColumnInsert(column: TableColumn): void {\r\n    setColumnDefaults(column, this);\r\n    if (!this.internalColumns) {\r\n      this.internalColumns = [column];\r\n    } else {\r\n      //   this.internalColumns = [...this.internalColumns, column];\r\n      // }\r\n      const key = `${column.prop}${column.name}`;\r\n      const i = this.internalColumns.findIndex(c => `${c.prop}${c.name}` === key);\r\n      if (i >= 0) {\r\n        this.internalColumns[i] = column;\r\n      }\r\n      this.internalColumns.push(column); // = [...this.internalColumns, column];\r\n    }\r\n    this.onColumnChangeVisible();\r\n    // clearTimeout(this.isColumnsInitedTimeoutId);\r\n    // this.isColumnsInitedTimeoutId = setTimeout(() => this.$set(this, 'isColumnsInited', true), 50) as unknown as number;\r\n  }\r\n\r\n  onColumnRemoved(column: TableColumn): void {\r\n    if (!column) {\r\n      return;\r\n    }\r\n    const colIndex = this.internalColumns.findIndex(c => c.name === column.name);\r\n    if (colIndex >= 0) {\r\n      this.internalColumns.splice(colIndex, 1);\r\n    }\r\n    this.onColumnChangeVisible();\r\n  }\r\n\r\n  onColumnChangeVisible(column?: TableColumn): void {\r\n    clearTimeout(this.recalculateColumnsTimer);\r\n    this.recalculateColumnsTimer = setTimeout(() => {\r\n      this.recalculateColumns();\r\n    }, 100) as unknown as number;\r\n  }\r\n\r\n  /**\r\n   * listen for changes to input bindings of all DataTableColumnDirective and\r\n   * trigger the columnTemplates.changes observable to emit\r\n   */\r\n  // todo\r\n  // private listenForColumnInputChanges(): void {\r\n  //   this._subscriptions.push(this.columnChangesService\r\n  //     .columnInputChanges$\r\n  //     .subscribe(() => {\r\n  //       if (this.columnTemplates) {\r\n  //         this.columnTemplates.notifyOnChanges();\r\n  //       }\r\n  //     }));\r\n  // }\r\n\r\n  /**\r\n   * Toggle the expansion of the row\r\n   */\r\n  toggleExpandDetail(row: Record<string, unknown>): void {\r\n    this.bodyComponent.toggleExpandDetail(row);\r\n    this.$emit('detail-toggle', {\r\n      type: 'row',\r\n      value: row,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Expand all the rows.\r\n   */\r\n  expandAllDetails(): void {\r\n    this.bodyComponent.expandAllDetails();\r\n    this.$emit('detail-toggle', {\r\n      type: 'all',\r\n      value: true,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Collapse all the rows.\r\n   */\r\n  collapseAllDetails(): void {\r\n    this.bodyComponent.collapseAllDetails();\r\n    this.$emit('detail-toggle', {\r\n      type: 'all',\r\n      value: false,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Expand all the group rows.\r\n   */\r\n  expandAllGroups(): void {\r\n    this.groupedRows.forEach(row => {\r\n      this.expandCollapseRow(row, true);\r\n    });\r\n    this.onGroupToggle({\r\n      type: 'all',\r\n      value: true,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Collapse all the rows.\r\n   */\r\n  collapseAllGroups(): void {\r\n    this.groupedRows.forEach(row => {\r\n      this.expandCollapseRow(row, false);\r\n    });\r\n    this.onGroupToggle({\r\n      type: 'all',\r\n      value: false,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Is the row visible in the current page\r\n   */\r\n  isRowVisible(row: Record<string, unknown>): boolean {\r\n    return this.bodyComponent?.isRowVisible(row);\r\n  }\r\n\r\n  /**\r\n   * Is the group row expanded\r\n   */\r\n  private isGroupExpanded(key: string): boolean {\r\n    return this.expandedGroups[key] ?? true;\r\n  }\r\n\r\n  private innerSortRows(): void {\r\n    const treeFrom = optionalGetterForProp(this.treeFromRelation);\r\n    const treeTo = optionalGetterForProp(this.treeToRelation);\r\n    if (this.externalSorting === false) {\r\n      this.sortInternalRows();\r\n    }\r\n    // auto group by parent on new update\r\n    this.internalRows = groupRowsByParents(\r\n      this.internalRows as Array<{ level: number; treeStatus?: string }>,\r\n      treeFrom,\r\n      treeTo,\r\n      this.internalColumns,\r\n      this.mySorts,\r\n      this.lazyTree\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Creates a map with the data grouped by the user choice of grouping index\r\n   *\r\n   * @param originalArray the original array passed via parameter\r\n   * @param groupByIndex  the index of the column to group the data by\r\n   */\r\n  private groupArrayBy(\r\n    originalArray: Record<string, unknown>[],\r\n    groupRowsBy: Array<TGroupByField | Array<TGroupByField>>,\r\n    level: number = 0\r\n  ): IGroupedRows[] {\r\n    let groupBy: Array<TGroupByField | Array<TGroupByField>> | TGroupByField | Array<TGroupByField> = groupRowsBy;\r\n    if (Array.isArray(groupRowsBy)) {\r\n      groupBy = groupRowsBy[level];\r\n    }\r\n\r\n    // create a map to hold groups with their corresponding results\r\n    const map = new Map<string, Record<string, string>[]>();\r\n\r\n    const getValue = (row: Record<string, string>, groupDescr: TGroupByField): string => {\r\n      if (typeof groupDescr === 'string') {\r\n        return row[groupDescr];\r\n      }\r\n      if ('prop' in groupDescr) {\r\n        return groupDescr.valueGetter ? groupDescr.valueGetter(row[groupDescr.prop]) : row[groupDescr.prop];\r\n      }\r\n    };\r\n\r\n    const getKey = (\r\n      row: Record<string, string>,\r\n      groupByArr: Array<TGroupByField | Array<TGroupByField>> | TGroupByField\r\n    ): string => {\r\n      if (!Array.isArray(groupByArr)) {\r\n        return getValue(row, groupByArr);\r\n      }\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n      const result = groupByArr.reduce(\r\n        (key: string, groupDescr: Array<TGroupByField | Array<TGroupByField>> | TGroupByField) => {\r\n          let res: string = null;\r\n          if (Array.isArray(groupDescr)) {\r\n            return getKey(row, groupDescr);\r\n          }\r\n          res = getValue(row, groupDescr);\r\n          if (!res) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n            return res;\r\n          }\r\n          return key ? `${key}^^${res}` : `${res}`;\r\n        },\r\n        ''\r\n      ) as string;\r\n      return result;\r\n    };\r\n\r\n    const itemsToRemove: Record<string, string>[] = [];\r\n    originalArray.forEach((item: Record<string, string>) => {\r\n      const key = getKey(item, groupBy);\r\n      // eslint-disable-next-line no-undefined\r\n      if (key !== undefined || key !== null) {\r\n        itemsToRemove.push(item);\r\n        if (!map.has(key)) {\r\n          map.set(key, [item]);\r\n        } else {\r\n          map.get(key).push(item);\r\n        }\r\n      }\r\n    });\r\n    if (level > 0 && itemsToRemove.length) {\r\n      itemsToRemove.forEach(item => {\r\n        const i = originalArray.indexOf(item);\r\n        if (i >= 0) {\r\n          originalArray.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    const keysDescr: Array<{\r\n      title: string;\r\n      prop: string; // | Array<TGroupByField | Array<TGroupByField>> | TGroupByField | Array<TGroupByField>;\r\n    }> = [];\r\n    if (Array.isArray(groupBy)) {\r\n      groupBy.forEach(prop => {\r\n        const title = this.getGroupTitle(prop);\r\n        keysDescr.push({ title, prop: prop as string });\r\n      });\r\n    } else {\r\n      const title = this.getGroupTitle(groupBy);\r\n      keysDescr.push({ title, prop: groupBy as string });\r\n    }\r\n    // convert map back to a simple array of objects\r\n    const result = Array.from(map, x => this.addGroup(x[0], x[1], level, keysDescr));\r\n    if (Array.isArray(groupRowsBy) && level < groupRowsBy.length - 1) {\r\n      result.forEach(item => {\r\n        item.groups = this.groupArrayBy(item.rows, groupRowsBy, level + 1);\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private addGroup(\r\n    key: string,\r\n    value: Record<string, unknown>[],\r\n    level1: number,\r\n    keysDescr: Array<{\r\n      title: string;\r\n      prop: string;\r\n    }>\r\n  ): IGroupedRows {\r\n    const keys = key ? key.toString().split('^^') : null;\r\n    const keysObj: {\r\n      title: string;\r\n      prop: string; // | Array<TGroupByField | Array<TGroupByField>> | TGroupByField | Array<TGroupByField>;\r\n      value: string;\r\n    }[] = [];\r\n    keysDescr.forEach((descr, index) => {\r\n      keysObj.push({ title: descr.title, prop: descr.prop, value: keys && keys.length > index ? keys[index] : '' });\r\n    });\r\n    return {\r\n      key,\r\n      rows: value,\r\n      level: level1,\r\n      keys: keysObj,\r\n      __expanded: this.isGroupExpanded(key),\r\n      __isGroup: true,\r\n    };\r\n  }\r\n\r\n  private getGroupTitle(\r\n    prop: Array<TGroupByField | Array<TGroupByField>> | TGroupByField | Array<TGroupByField>\r\n  ): string {\r\n    let title = prop;\r\n    if (typeof prop === 'string') {\r\n      const column = this.columns && this.columns.find(c => c.prop === prop);\r\n      title = column ? column.name : prop;\r\n    } else if ('title' in prop) {\r\n      title = prop.title;\r\n    }\r\n    return <string>title;\r\n  }\r\n\r\n  private sortInternalRows(): void {\r\n    if (this.groupedRows) {\r\n      this.groupedRows = this.sortGroupedRows(this.groupedRows);\r\n      this.internalRows = this.processGroupedRows(this.groupedRows) as Array<Record<string, unknown>>;\r\n    } else {\r\n      this.internalRows = sortRows(this.internalRows, this.internalColumns, this.mySorts);\r\n    }\r\n  }\r\n\r\n  private sortGroupedRows(groupedRows: IGroupedRows[]): IGroupedRows[] {\r\n    const rows: Array<Record<string, unknown>> = [];\r\n    groupedRows.forEach(gr => {\r\n      const row = { __group: gr };\r\n      gr.keys.forEach(keyDescr => {\r\n        row[keyDescr.prop] = keyDescr.value;\r\n      });\r\n      rows.push(row);\r\n      if (gr.groups && gr.groups.length) {\r\n        gr.groups = this.sortGroupedRows(gr.groups);\r\n      }\r\n      if (gr.rows && gr.rows) {\r\n        gr.rows = sortRows(gr.rows, this.internalColumns, this.mySorts);\r\n      }\r\n    });\r\n    const sortedRows = sortRows(rows, this.internalColumns, this.mySorts);\r\n    const result = sortedRows.map(r => r.__group);\r\n    return result as IGroupedRows[];\r\n  }\r\n\r\n  private expandCollapseRow(group: IGroupedRows, expand: boolean): void {\r\n    group.__expanded = expand;\r\n    this.expandedGroups[group.key] = group.__expanded;\r\n    if (Array.isArray(group.groups)) {\r\n      group.groups.forEach(gr => {\r\n        this.expandCollapseRow(gr, expand);\r\n      });\r\n    }\r\n  }\r\n\r\n  private addRow(group: IGroupedRows, rows: Array<IGroupedRows | Record<string, unknown>>): void {\r\n    // (group as any).__isGroup = true;\r\n    // group.__expanded = true;\r\n    rows.push(group);\r\n    if (group.rows && group.__expanded) {\r\n      group.rows.forEach(r => {\r\n        rows.push(r);\r\n      });\r\n    }\r\n    if (group.groups && group.__expanded) {\r\n      group.groups.forEach(gr => {\r\n        this.addRow(gr, rows);\r\n      });\r\n    }\r\n  }\r\n\r\n  private processGroupedRows(groupedRows: IGroupedRows[]): Array<IGroupedRows | Record<string, unknown>> {\r\n    const rows: Array<IGroupedRows | Record<string, unknown>> = [];\r\n    if (groupedRows && groupedRows.length) {\r\n      // creates a new array with the data grouped\r\n      groupedRows.forEach(g => {\r\n        this.addRow(g, rows);\r\n      });\r\n    }\r\n    return rows;\r\n  }\r\n}\r\n","\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport DataTableColumnComponent from '../../src/components/columns/column.component';\r\n\r\n@Component({\r\n  name: 'responsive-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n    'ngx-datatable-column': DataTableColumnComponent,\r\n  },\r\n  template: ``,\r\n})\r\nexport default class ResponsiveComponent extends Vue {\r\n  rows: Array<Record<string, unknown>> = [];\r\n  timeout: number;\r\n\r\n  created() {\r\n    this.fetch((data: Array<Record<string, unknown>>) => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  onPage(event: Record<string, unknown>) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = (setTimeout(() => {\r\n      console.log('paged!', event);\r\n    }, 100) as unknown) as number;\r\n  }\r\n\r\n  fetch(cb: (data: Array<Record<string, unknown>>) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  toggleExpandRow(row: Record<string, unknown>) {\r\n    console.log('Toggled Expand Row!', row);\r\n    (this.$refs.table as any).toggleExpandDetail(row);\r\n  }\r\n\r\n  onDetailToggle(event: Record<string, unknown>) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n}\r\n","\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport DatatableComponent from '../../src/components/datatable.component.vue';\r\nimport { CorporateEmployee } from './model/corporate-employee';\r\n\r\nconst companyData = require('../../assets/data/company.json');\r\n\r\nclass PagedData<T> {\r\n  data: T[];\r\n}\r\n\r\n/**\r\n * A server used to mock a paged data result from a server\r\n */\r\nexport class MockServerResultsService {\r\n  public getResults(offset: number, limit: number): Promise<PagedData<CorporateEmployee>> {\r\n    const result = companyData.slice(offset, offset + limit);\r\n    let resolveFunc: (data: PagedData<CorporateEmployee>) => void;\r\n    const promise = new Promise<PagedData<CorporateEmployee>>(resolve => (resolveFunc = resolve));\r\n    setTimeout(() => resolveFunc({ data: result }), 2000);\r\n    return promise;\r\n  }\r\n}\r\n\r\n@Component({\r\n  name: 'server-scrolling-demo',\r\n  components: {\r\n    'ngx-datatable': DatatableComponent,\r\n  },\r\n})\r\nexport default class ServerScrollingComponent extends Vue {\r\n  readonly headerHeight = 50;\r\n  readonly rowHeight = 50;\r\n  readonly pageLimit = 10;\r\n\r\n  rows: CorporateEmployee[] = [];\r\n  isLoading: boolean = false;\r\n  serverResultsService = new MockServerResultsService();\r\n\r\n  mounted() {\r\n    this.onScroll(0);\r\n  }\r\n\r\n  onScroll(offsetY: number) {\r\n    // total height of all rows in the viewport\r\n    const viewHeight = this.$el.getBoundingClientRect().height - this.headerHeight;\r\n\r\n    // check if we scrolled to the end of the viewport\r\n    if (!this.isLoading && offsetY + viewHeight >= this.rows.length * this.rowHeight) {\r\n      // total number of results to load\r\n      let limit = this.pageLimit;\r\n\r\n      // check if we haven't fetched any results yet\r\n      if (this.rows.length === 0) {\r\n        // calculate the number of rows that fit within viewport\r\n        const pageSize = Math.ceil(viewHeight / this.rowHeight);\r\n\r\n        // change the limit to pageSize such that we fill the first page entirely\r\n        // (otherwise, we won't be able to scroll past it)\r\n        limit = Math.max(pageSize, this.pageLimit);\r\n      }\r\n      this.loadPage(limit);\r\n    }\r\n  }\r\n\r\n  private async loadPage(limit: number) {\r\n    // set the loading flag, which serves two purposes:\r\n    // 1) it prevents the same page from being loaded twice\r\n    // 2) it enables display of the loading indicator\r\n    this.isLoading = true;\r\n\r\n    const result = await this.serverResultsService.getResults(this.rows.length, limit);\r\n    const rows = [...this.rows, ...result.data];\r\n    this.rows = rows;\r\n    this.isLoading = false;\r\n  }\r\n}\r\n","import { TGroupByField } from 'components/datatable.component';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { IGroupedRows } from '../../types/grouped-rows';\r\n\r\n@Component({\r\n  template: `\r\n    <div\r\n      :class=\"{ 'datatable-icon-right': !expanded, 'datatable-icon-down': expanded, 'active': active }\"\r\n      :style=\"styles\"\r\n      title=\"Expand/Collapse Group\"\r\n      @click=\"toggleExpandGroup\"\r\n    >\r\n      <slot name=\"groupHeader\" v-bind=\"{ group: group, expanded: expanded, level: groupLevel, groupBy: groupBy }\">\r\n        <span\r\n          ><b>{{ groupTitle }}</b></span\r\n        >\r\n      </slot>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableBodyGroupHeaderComponent extends Vue {\r\n  @Prop({ default: 0 }) rowHeight: number | ((group?: IGroupedRows, index?: number) => number);\r\n  @Prop() group: IGroupedRows;\r\n  @Prop() expanded: boolean;\r\n  @Prop() active: boolean;\r\n  @Prop() groupHeaderSlot: (obj: Record<string, unknown>) => VNode[];\r\n  @Prop() groupLevel: number;\r\n  @Prop() groupRowsBy: Array<TGroupByField | Array<TGroupByField>>;\r\n  @Prop() offsetX: number;\r\n\r\n  created(): void {\r\n    if (this.groupHeaderSlot) {\r\n      this.$slots.groupHeader = this.groupHeaderSlot({\r\n        group: this.group,\r\n        expanded: this.expanded,\r\n        level: this.groupLevel,\r\n        groupBy: this.groupBy,\r\n      });\r\n    }\r\n  }\r\n\r\n  beforeUpdate(): void {\r\n    if (this.groupHeaderSlot) {\r\n      this.$slots.groupHeader = this.groupHeaderSlot({\r\n        group: this.group,\r\n        expanded: this.expanded,\r\n        level: this.groupLevel,\r\n        groupBy: this.groupBy,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the expansion of a group\r\n   */\r\n  toggleExpandGroup(): void {\r\n    this.$emit('group-toggle', {\r\n      type: 'group',\r\n      value: this.group,\r\n    });\r\n  }\r\n\r\n  get groupTitle(): string {\r\n    let result = '';\r\n    if (this.group && this.group.keys) {\r\n      this.group.keys.forEach(gr => {\r\n        if (!result) {\r\n          result += `${gr.title} - ${gr.value}`;\r\n        } else {\r\n          result += `; ${gr.title} - ${gr.value}`;\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get styles(): Record<string, string> {\r\n    return {\r\n      'padding-left': this.groupLevel ? `${this.groupLevel * 10}px` : '5px',\r\n      // don't horizontal scroll for group rows headers\r\n      // transform: `translateX(${this.offsetX}px)`,\r\n    };\r\n  }\r\n\r\n  get groupBy(): TGroupByField | Array<TGroupByField> {\r\n    if (this.groupLevel && Array.isArray(this.groupRowsBy) && this.groupRowsBy.length - 1 >= this.groupLevel) {\r\n      return this.groupRowsBy[this.groupLevel];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { IGroupedRows } from 'types/grouped-rows';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\n@Component({\r\n  template: `\r\n    <div style=\"padding-left:5px;\">\r\n      <slot name=\"rowDetail\" v-bind=\"{ row: row, expanded: expanded }\">\r\n        <h3>detail row info</h3>\r\n      </slot>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableBodyRowDetailComponent extends Vue {\r\n  @Prop({ default: 0 }) rowHeight: number | ((group?: IGroupedRows, index?: number) => number);\r\n  @Prop() row: Record<string, unknown>;\r\n  @Prop() expanded: boolean;\r\n  @Prop() rowDetailSlot: (obj: Record<string, unknown>) => VNode[];\r\n\r\n  created(): void {\r\n    if (this.rowDetailSlot) {\r\n      this.$slots.rowDetail = this.rowDetailSlot({ row: this.row, expanded: this.expanded });\r\n    }\r\n  }\r\n\r\n  beforeUpdate(): void {\r\n    if (this.rowDetailSlot) {\r\n      this.$slots.rowDetail = this.rowDetailSlot({ row: this.row, expanded: this.expanded });\r\n    }\r\n  }\r\n\r\n  toggleExpandGroup(): void {\r\n    //\r\n  }\r\n}\r\n","import { Component, Vue } from 'vue-property-decorator';\r\n\r\n@Component({\r\n  template: `\r\n    <div class=\"progress-linear\" role=\"progressbar\">\r\n      <div class=\"ngx-container\">\r\n        <div class=\"ngx-bar\"></div>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport default class ProgressBarComponent extends Vue {}\r\n","import { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\n\r\n@Component({\r\n  template: `\r\n    <div class=\"datatable-scroll\" :style=\"styleObject\">\r\n      <slot></slot>\r\n    </div>\r\n  `,\r\n})\r\nexport default class ScrollerComponent extends Vue {\r\n  @Prop({ type: Boolean, default: false }) scrollbarV: boolean;\r\n  @Prop({ type: Boolean, default: false }) scrollbarH: boolean;\r\n  @Prop() scrollHeight: number;\r\n  @Prop() scrollWidth: string;\r\n\r\n  fromPager = true;\r\n  innerWidth = 0;\r\n  scrollYPos = 0;\r\n  scrollXPos = 0;\r\n  prevScrollYPos = 0;\r\n  prevScrollXPos = 0;\r\n  stopRender = false;\r\n  parentElement: Element;\r\n  // onScrollListener: (event: MouseEvent) => void;\r\n  onInitScrollHandler: () => void;\r\n  // scrollDirty = false;\r\n  resizeObserver?: ResizeObserver;\r\n\r\n  @Watch('innerWidth') onInnerWidthChanged() {\r\n    this.$emit('change-width', this.innerWidth);\r\n  }\r\n\r\n  created(): void {\r\n    this.$emit('setup', {\r\n      scrollYPos: this.scrollYPos,\r\n      scrollXPos: this.scrollXPos,\r\n    });\r\n  }\r\n\r\n  mounted(): void {\r\n    // manual bind so we don't always listen\r\n    if (this.scrollbarV || this.scrollbarH) {\r\n      this.parentElement = this.$el.closest('.datatable-body');\r\n      // this.onScrollListener = this.onScrolled.bind(this) as (event: MouseEvent) => void;\r\n      // this.parentElement.addEventListener('scroll', this.onScrollListener, {\r\n      //   passive: true,\r\n      // });\r\n      this.onInitScrollHandler = this.onInitScroll.bind(this) as () => void;\r\n      'mousedown DOMMouseScroll mousewheel wheel touchstart keyup'.split(' ').forEach(event => {\r\n        this.parentElement.addEventListener(event, this.onInitScrollHandler, {\r\n          passive: true,\r\n        });\r\n      });\r\n      this.tick();\r\n    }\r\n    if ((window as Window).ResizeObserver) {\r\n      this.resizeObserver = new (window as Window).ResizeObserver(entries => {\r\n        if (entries.length && entries[0].contentRect) {\r\n          this.innerWidth = Math.floor(entries[0].contentRect.width);\r\n        } else {\r\n          this.innerWidth = this.$el.clientWidth;\r\n        }\r\n      });\r\n      this.resizeObserver.observe(this.$el);\r\n    }\r\n  }\r\n\r\n  beforeDestroy(): void {\r\n    this.stopRender = true;\r\n    if (this.resizeObserver) {\r\n      this.resizeObserver.unobserve(this.$el);\r\n    }\r\n    if (this.scrollbarV || this.scrollbarH) {\r\n      // this.parentElement.removeEventListener('scroll', this.onScrollListener);\r\n      'mousedown DOMMouseScroll mousewheel wheel touchstart keyup'.split(' ').forEach(event => {\r\n        this.parentElement.removeEventListener(event, this.onInitScrollHandler);\r\n      });\r\n    }\r\n  }\r\n\r\n  setOffset(offsetY: number, fromPager: boolean = false): void {\r\n    if (this.parentElement) {\r\n      this.fromPager = fromPager;\r\n      this.parentElement.scrollTop = offsetY;\r\n    }\r\n  }\r\n\r\n  incOffset(offsetY: number): void {\r\n    if (this.parentElement) {\r\n      this.parentElement.scrollTop += offsetY;\r\n    }\r\n  }\r\n\r\n  onInitScroll(): void {\r\n    this.fromPager = false;\r\n  }\r\n\r\n  // onScrolled(event: MouseEvent): void {\r\n  // if (this.scrollbarV || this.scrollbarH) {\r\n  //   if (!this.scrollDirty) {\r\n  //     this.scrollDirty = true;\r\n  //     const dom: Element = <Element>event.currentTarget;\r\n  //     requestAnimationFrame(() => {\r\n  //       this.scrollYPos = dom.scrollTop;\r\n  //       this.scrollXPos = dom.scrollLeft;\r\n  //       this.updateOffset();\r\n  //       this.scrollDirty = false;\r\n  //     });\r\n  //   } else {\r\n  //     // eslint-disable-next-line no-console\r\n  //     console.log('this.scrollDirty is true');\r\n  //   }\r\n  // this.currScrollTop = event.target.scrollTop;\r\n  // this.currScrollLeft = event.target.scrollLeft;\r\n  // }\r\n\r\n  tick(): void {\r\n    if (this.stopRender) {\r\n      return;\r\n    }\r\n    requestAnimationFrame(() => this.tick());\r\n    if (this.scrollbarV || this.scrollbarH) {\r\n      if (!this.parentElement) {\r\n        return;\r\n      }\r\n      const scrollTop = this.parentElement.scrollTop;\r\n      const scrollLeft = this.parentElement.scrollLeft;\r\n      if (this.scrollYPos === scrollTop && this.scrollXPos === scrollLeft) {\r\n        return;\r\n      }\r\n      this.scrollYPos = scrollTop;\r\n      this.scrollXPos = scrollLeft;\r\n      this.updateOffset();\r\n    }\r\n  }\r\n\r\n  updateOffset(): void {\r\n    let direction: string;\r\n    if (this.scrollYPos < this.prevScrollYPos) {\r\n      direction = 'down';\r\n    } else if (this.scrollYPos > this.prevScrollYPos) {\r\n      direction = 'up';\r\n    } else if (this.scrollXPos < this.prevScrollXPos) {\r\n      direction = 'right';\r\n    } else if (this.scrollXPos > this.prevScrollXPos) {\r\n      direction = 'left';\r\n    }\r\n    if (direction) {\r\n      this.$emit('scroll', {\r\n        direction,\r\n        scrollYPos: this.scrollYPos,\r\n        scrollXPos: this.scrollXPos,\r\n        fromPager: this.fromPager,\r\n      });\r\n    }\r\n    this.prevScrollYPos = this.scrollYPos;\r\n    this.prevScrollXPos = this.scrollXPos;\r\n  }\r\n\r\n  get styleObject(): Record<string, unknown> {\r\n    return {\r\n      height: this.scrollHeight ? `${this.scrollHeight}px` : null,\r\n      width: '100%', // `${this.scrollWidth}px`,\r\n      position: 'relative',\r\n      transform: 'translateZ(0)',\r\n    };\r\n  }\r\n}\r\n","import DataTableBodyComponent from 'components/body/body.component';\r\nimport ScrollerComponent from 'components/body/scroller.component';\r\nimport { CheckMode } from 'types/check.type';\r\nimport { SelectionType } from 'types/selection.type';\r\nimport { TableColumn } from 'types/table-column.type';\r\nimport { Keys } from 'utils/keys';\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n// import { MouseEvent, KeyboardEvent } from '../../events';\r\n\r\nexport interface Model {\r\n  type: string;\r\n  event: MouseEvent | KeyboardEvent;\r\n  row: Record<string, unknown>;\r\n  rowIndex: number;\r\n  rowElement: Element;\r\n  cellElement: Element;\r\n  cellIndex: number;\r\n  column?: TableColumn;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <div id=\"selector\">\r\n      <slot> selection </slot>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableSelectionComponent extends Vue {\r\n  @Prop() rows: Record<string, unknown>[];\r\n  @Prop() selected: Record<string, unknown>[];\r\n  @Prop() checked: Record<string, unknown>[];\r\n  @Prop() selectEnabled: boolean;\r\n  @Prop() selectionType: SelectionType;\r\n  @Prop() checkMode: CheckMode;\r\n  @Prop() rowIdentity: (row: Record<string, unknown>) => string | number;\r\n  @Prop() selectCheck: () => void;\r\n  @Prop() scroller: ScrollerComponent;\r\n  @Prop() pageSize: number;\r\n  @Prop() bodyHeight: number;\r\n  @Prop() beforeSelectRowCheck: (\r\n    newRow: Record<string, unknown>,\r\n    oldSelected: Record<string, unknown>[]\r\n  ) => boolean | Promise<boolean>;\r\n\r\n  prevIndex: number;\r\n\r\n  async selectRow(event: KeyboardEvent | MouseEvent, index: number, row: Record<string, unknown>): Promise<void> {\r\n    if (!this.selectEnabled) {\r\n      return;\r\n    }\r\n    let doSelect: boolean | Promise<boolean> = true;\r\n    if (typeof this.beforeSelectRowCheck === 'function') {\r\n      doSelect = this.beforeSelectRowCheck(this.rows[index], this.selected);\r\n    }\r\n    if (doSelect instanceof Promise) {\r\n      doSelect = await doSelect;\r\n    }\r\n    if (!doSelect) {\r\n      return;\r\n    }\r\n    const chkbox = this.selectionType === SelectionType.checkbox && this.checkMode === CheckMode.checkIsSelect;\r\n    const multi = this.selectionType === SelectionType.multi;\r\n    const multiClick = this.selectionType === SelectionType.multiClick;\r\n    let selected: Record<string, unknown>[] = [];\r\n    if (multi || chkbox || multiClick) {\r\n      if (event.shiftKey) {\r\n        selected = this.selectRowsBetween([], this.rows, index, this.prevIndex);\r\n      } else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\r\n        selected = this.selectRows([...this.selected], row);\r\n      } else {\r\n        selected = this.selectRows([], row);\r\n      }\r\n    } else {\r\n      selected = this.selectRows([], row);\r\n    }\r\n    this.prevIndex = index;\r\n    if (typeof this.selectCheck === 'function') {\r\n      selected = selected.filter(this.selectCheck.bind(this) as () => void);\r\n    }\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n    this.$emit('select', {\r\n      selected,\r\n      index,\r\n    });\r\n  }\r\n\r\n  checkRow(event: KeyboardEvent | MouseEvent, index: number, row: Record<string, unknown>): void {\r\n    if (!this.selectEnabled) {\r\n      return;\r\n    }\r\n    let checked: Record<string, unknown>[] = [];\r\n    if (event.shiftKey) {\r\n      checked = this.selectRowsBetween([], this.rows, index, this.prevIndex);\r\n    } else {\r\n      checked = this.selectRows([...this.checked], row);\r\n    }\r\n    this.prevIndex = index;\r\n\r\n    if (typeof this.selectCheck === 'function') {\r\n      checked = checked.filter(this.selectCheck.bind(this) as () => void);\r\n    }\r\n\r\n    this.checked.splice(0, this.checked.length);\r\n    this.checked.push(...checked);\r\n\r\n    this.$emit('check', {\r\n      checked,\r\n    });\r\n  }\r\n\r\n  onActivate(model: Model, index: number): void {\r\n    const { type, event, row, column } = model;\r\n    const chkbox = this.selectionType === SelectionType.checkbox && this.checkMode === CheckMode.checkIsSelect;\r\n    let select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\r\n    if (this.checkMode === CheckMode.checkNoSelect && column?.checkboxable) {\r\n      select = false;\r\n    }\r\n    if (select) {\r\n      this.selectRow(event, index, row);\r\n    } else if (type === 'checkbox' && this.checkMode === CheckMode.checkNoSelect) {\r\n      this.checkRow(event, index, row);\r\n    } else if (type === 'keydown') {\r\n      if ((<KeyboardEvent>event).keyCode === Keys.return) {\r\n        this.selectRow(event, index, row);\r\n      } else {\r\n        this.onKeyboardFocus(model);\r\n      }\r\n    }\r\n    this.$emit('activate', model);\r\n  }\r\n\r\n  onKeyboardFocus(model: Model): void {\r\n    const { keyCode } = <KeyboardEvent>model.event;\r\n    const shouldFocus =\r\n      keyCode === Keys.up ||\r\n      keyCode === Keys.down ||\r\n      keyCode === Keys.right ||\r\n      keyCode === Keys.left ||\r\n      keyCode === Keys.pageUp ||\r\n      keyCode === Keys.pageDown;\r\n\r\n    if (shouldFocus) {\r\n      const isCellSelection = this.selectionType === SelectionType.cell;\r\n\r\n      if (!model.cellElement || !isCellSelection) {\r\n        this.focusRow(model, keyCode);\r\n      } else if (isCellSelection) {\r\n        this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  focusRow(model: Model, keyCode: number): void {\r\n    const nextRowElement = this.getPrevNextRow(model.rowElement, keyCode);\r\n    let index = 0;\r\n    if (keyCode === Keys.up) {\r\n      if (model.rowIndex - 1 < 0) {\r\n        return;\r\n      }\r\n      index = model.rowIndex - 1;\r\n    } else if (keyCode === Keys.down) {\r\n      if (model.rowIndex + 1 >= this.rows.length) {\r\n        return;\r\n      }\r\n      index = model.rowIndex + 1;\r\n    } else if (keyCode === Keys.pageUp) {\r\n      index = model.rowIndex - this.pageSize;\r\n      index = index < 0 ? 0 : index;\r\n    } else if (keyCode === Keys.pageDown) {\r\n      index = model.rowIndex + this.pageSize;\r\n      index = index >= this.rows.length ? this.rows.length - 1 : index;\r\n    }\r\n    const { offsetY, height } = (this.$parent as DataTableBodyComponent).getRowOffsetY(index + 1);\r\n    if (!height) {\r\n      if (nextRowElement) {\r\n        (nextRowElement as HTMLElement).focus();\r\n      }\r\n      return;\r\n    }\r\n    let scrolled = false;\r\n    let h = 0;\r\n    if ([Keys.down, Keys.pageDown].includes(keyCode)) {\r\n      h = offsetY + height - (this.$parent.$el.scrollTop + this.bodyHeight);\r\n    } else if ([Keys.up, Keys.pageUp].includes(keyCode)) {\r\n      h = offsetY - height - this.$parent.$el.scrollTop;\r\n    }\r\n    if (h > 0 && [Keys.down, Keys.pageDown].includes(keyCode)) {\r\n      this.scroller.incOffset(h);\r\n      // scrolled = model.rowIndex === this.rows.length - 2 ? false : true;\r\n    } else if (h < 0 && [Keys.up, Keys.pageUp].includes(keyCode)) {\r\n      this.scroller.incOffset(h);\r\n      scrolled = model.rowIndex !== 1;\r\n    } else if (h === 0 && [Keys.up, Keys.pageUp].includes(keyCode) && [0, 1, 2].includes(model.rowIndex)) {\r\n      this.scroller.setOffset(h);\r\n      // scrolled = true;\r\n    }\r\n    if (scrolled || [Keys.left, Keys.right].includes(keyCode)) {\r\n      (model.rowElement as HTMLElement).focus();\r\n    } else if (nextRowElement) {\r\n      (nextRowElement as HTMLElement).focus();\r\n    }\r\n  }\r\n\r\n  focusRow1(keyCode: number): void {\r\n    let index = 0;\r\n    if (keyCode === Keys.up) {\r\n      if (this.prevIndex - 1 < 0) {\r\n        return;\r\n      }\r\n      index = this.prevIndex - 1;\r\n    } else if (keyCode === Keys.down) {\r\n      if (this.prevIndex + 1 >= this.rows.length) {\r\n        return;\r\n      }\r\n      index = this.prevIndex + 1;\r\n    } else if (keyCode === Keys.pageUp) {\r\n      index = this.prevIndex - this.pageSize;\r\n      index = index < 0 ? 0 : index;\r\n    } else if (keyCode === Keys.pageDown) {\r\n      index = this.prevIndex + this.pageSize;\r\n      index = index >= this.rows.length ? this.rows.length - 1 : index;\r\n    }\r\n    const nextRow = this.rows[index];\r\n    if (!nextRow) {\r\n      return;\r\n    }\r\n    setTimeout(() => this.selectRow({ shiftKey: false, ctrlKey: false } as KeyboardEvent | MouseEvent, index, nextRow));\r\n    const { offsetY, height } = (this.$parent as DataTableBodyComponent).getRowOffsetY(index);\r\n    let h = 0;\r\n    if ([Keys.down, Keys.pageDown].includes(keyCode)) {\r\n      h = offsetY - this.bodyHeight;\r\n    } else if ([Keys.up, Keys.pageUp].includes(keyCode)) {\r\n      h = offsetY - height - this.scroller.scrollYPos;\r\n    }\r\n    if (h > 0 && [Keys.down, Keys.pageDown].includes(keyCode)) {\r\n      this.scroller.setOffset(h);\r\n    } else if (h < 0 && [Keys.up, Keys.pageUp].includes(keyCode)) {\r\n      this.scroller.incOffset(h);\r\n    }\r\n\r\n    // const { el: rowElement, height } = (this.$parent as any).getRowElementAndHeight(this.rows[this.prevIndex]);\r\n    // if (!rowElement) {\r\n    //   return;\r\n    // }\r\n    // const nextRowElement = this.getPrevNextRowElement(rowElement, keyCode);\r\n    // // const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\r\n    // if (nextRowElement) {\r\n    //   // nextRowElement.focus();\r\n    //   let index = this.prevIndex;\r\n    //   if (keyCode === Keys.up) {\r\n    //     if (this.prevIndex - 1 < 0) {\r\n    //       return;\r\n    //     }\r\n    //     index = this.prevIndex - 1;\r\n    //   } else if (keyCode === Keys.down) {\r\n    //     if (this.prevIndex + 1 >= this.rows.length) {\r\n    //       return;\r\n    //     }\r\n    //     index = this.prevIndex + 1\r\n    //   }\r\n    //   const row = this.rows[index];\r\n    //   this.selectRow({ shiftKey: false, ctrlKey: false } as any, index, row);\r\n    //   const bodyRect = this.$parent.$el.getBoundingClientRect();\r\n    //   const rowRect = nextRowElement.getBoundingClientRect();\r\n    //   const top = rowRect.top - bodyRect.top;\r\n    //   let h = 0;\r\n    //   if (keyCode === Keys.down) {\r\n    //     h = (top + height) - bodyRect.height;\r\n    //   } else if (keyCode === Keys.up) {\r\n    //     h = top;\r\n    //   }\r\n    //   // console.log('before incOffset', h, bodyRect, rowRect, nextRowElement);\r\n    //   if (h > 0 && keyCode === Keys.down) {\r\n    //     // console.log('incOffset', h + 5);\r\n    //     (this.scroller as any).incOffset(h + 5);\r\n    //   } else if (h < 0 && keyCode === Keys.up) {\r\n    //     (this.scroller as any).incOffset(h);\r\n    //   }\r\n    //   // (this.$el as any).focus();\r\n    //   (nextRowElement as any).focus();\r\n    // }\r\n  }\r\n\r\n  getPrevNextRowElement(rowElement: Element, keyCode: number): Element {\r\n    if (rowElement) {\r\n      let focusElement: Element;\r\n      if (keyCode === Keys.up) {\r\n        focusElement = rowElement.previousElementSibling;\r\n      } else if (keyCode === Keys.down) {\r\n        focusElement = rowElement.nextElementSibling;\r\n      }\r\n      return focusElement;\r\n    }\r\n  }\r\n\r\n  getPrevNextRow(rowElement: Element, keyCode: number): Element {\r\n    const parentElement = rowElement.parentElement;\r\n\r\n    if (parentElement) {\r\n      let focusElement: Element;\r\n      if (keyCode === Keys.up) {\r\n        focusElement = parentElement.previousElementSibling;\r\n      } else if (keyCode === Keys.down) {\r\n        focusElement = parentElement.nextElementSibling;\r\n      }\r\n\r\n      if (focusElement && focusElement.children.length) {\r\n        return focusElement.children[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrevNextRow1(rowElement: Element, keyCode: number): Element {\r\n    const parentElement = rowElement.parentElement;\r\n    // const parentElement = rowElement.closest('.datatable-row-wrapper');\r\n\r\n    if (parentElement) {\r\n      let focusElement: Element;\r\n      if (keyCode === Keys.up) {\r\n        focusElement = parentElement.previousElementSibling;\r\n      } else if (keyCode === Keys.down) {\r\n        focusElement = parentElement.nextElementSibling;\r\n      }\r\n      // return focusElement;\r\n      if (focusElement && focusElement.children.length) {\r\n        return focusElement.children[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  focusCell(cellElement: Element, rowElement: Element, keyCode: number, cellIndex: number): void {\r\n    let nextCellElement: Element;\r\n\r\n    if (keyCode === Keys.left) {\r\n      nextCellElement = cellElement.previousElementSibling;\r\n    } else if (keyCode === Keys.right) {\r\n      nextCellElement = cellElement.nextElementSibling;\r\n    } else if (keyCode === Keys.up || keyCode === Keys.down) {\r\n      const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\r\n      if (nextRowElement) {\r\n        const children = nextRowElement.getElementsByClassName('datatable-body-cell');\r\n        if (children.length) {\r\n          nextCellElement = children[cellIndex];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (nextCellElement) {\r\n      (nextCellElement as HTMLElement).focus();\r\n    }\r\n  }\r\n\r\n  getRowSelected(row: Record<string, unknown>): boolean {\r\n    return this.getRowSelectedIdx(row, this.selected) > -1;\r\n  }\r\n\r\n  getRowChecked(row: Record<string, unknown>): boolean {\r\n    const arr = this.checkMode === CheckMode.checkIsSelect ? this.selected : this.checked;\r\n    return this.getRowSelectedIdx(row, arr) > -1;\r\n  }\r\n\r\n  getRowSelectedIdx(row: Record<string, unknown>, selected: Record<string, unknown>[]): number {\r\n    if (!selected || !selected.length) {\r\n      return -1;\r\n    }\r\n    const rowId = this.rowIdentity(row);\r\n    return selected.findIndex(r => {\r\n      const id = this.rowIdentity(r);\r\n      return id === rowId;\r\n    });\r\n  }\r\n\r\n  private selectRowsBetween(\r\n    selected: Record<string, unknown>[],\r\n    rows: Record<string, unknown>[],\r\n    index: number,\r\n    prevIndex: number\r\n  ): Record<string, unknown>[] {\r\n    const reverse = index < prevIndex;\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      const row = rows[i];\r\n      const greater = i >= prevIndex && i <= index;\r\n      const lesser = i <= prevIndex && i >= index;\r\n      let range = { start: 0, end: 0 };\r\n      if (reverse) {\r\n        range = {\r\n          start: index,\r\n          end: prevIndex,\r\n        };\r\n      } else {\r\n        range = {\r\n          start: prevIndex,\r\n          end: index + 1,\r\n        };\r\n      }\r\n      if ((reverse && lesser) || (!reverse && greater)) {\r\n        // if in the positive range to be added to `selected`, and\r\n        // not already in the selected array, add it\r\n        if (i >= range.start && i <= range.end) {\r\n          selected.push(row);\r\n        }\r\n      }\r\n    }\r\n    return selected;\r\n  }\r\n\r\n  private selectRows(selected: Record<string, unknown>[], row: Record<string, unknown>): Record<string, unknown>[] {\r\n    const selectedIndex = this.getRowSelectedIdx(row, selected);\r\n    if (selectedIndex > -1) {\r\n      selected.splice(selectedIndex, 1);\r\n    } else {\r\n      selected.push(row);\r\n    }\r\n    return selected;\r\n  }\r\n}\r\n","import { IRowContext } from 'types/row-context.type';\r\nimport { IColumnsByPinRecord, IColumnsWidth } from 'utils/column';\r\nimport { VNode } from 'vue';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\nimport DataTableBodyRowComponent from '../body-row.component.vue';\r\n\r\nexport interface ISummaryColumn {\r\n  summaryFunc?: (cells: unknown[]) => string;\r\n  summaryTemplate?: (arg?: Record<string, unknown>) => VNode[];\r\n  cellTemplate?: string;\r\n\r\n  prop: string;\r\n  // pipe?: PipeTransform;\r\n  filter?: (...args: Array<unknown>) => string;\r\n}\r\n\r\nfunction defaultSumFunc(cells: number[]): number {\r\n  const cellsWithValues = cells.filter(cell => Boolean(cell));\r\n\r\n  if (!cellsWithValues.length) {\r\n    return null;\r\n  }\r\n  if (cellsWithValues.some(cell => typeof cell !== 'number')) {\r\n    return null;\r\n  }\r\n  return cellsWithValues.reduce((res, cell) => res + cell);\r\n}\r\n\r\nfunction noopSumFunc(cells: unknown[]): void {\r\n  return null;\r\n}\r\n\r\n@Component({\r\n  components: {\r\n    'datatable-body-row': DataTableBodyRowComponent,\r\n  },\r\n  template: `\r\n    <datatable-body-row\r\n      v-if=\"summaryRow && internalColumns\"\r\n      tabindex=\"-1\"\r\n      :columnsByPin=\"columnsByPin\"\r\n      :columnGroupWidths=\"columnGroupWidths\"\r\n      :groupStyles=\"groupStyles\"\r\n      :rowContext=\"myRowContext\"\r\n      :row=\"summaryRow\"\r\n      :slots=\"mySlotsFunc\"\r\n      @activate=\"onActivate\"\r\n    >\r\n    </datatable-body-row>\r\n  `,\r\n})\r\nexport default class DataTableSummaryRowComponent extends Vue {\r\n  @Prop() rows: Record<string, unknown>[];\r\n  @Prop() columns: ISummaryColumn[];\r\n  @Prop() rowHeight: number;\r\n  @Prop() offsetX: number;\r\n  @Prop() innerWidth: number;\r\n\r\n  @Prop() columnsByPin: IColumnsByPinRecord[];\r\n  @Prop() columnGroupWidths: IColumnsWidth;\r\n  @Prop() groupStyles: Record<string, string | number>;\r\n  @Prop() groupClass: string;\r\n  @Prop() slots: () => Record<string, (arg?: Record<string, unknown>) => VNode[]>;\r\n\r\n  internalColumns: ISummaryColumn[] = [];\r\n  summaryRow: Record<string, unknown> = {};\r\n  mySlotsFunc: () => Record<string, (arg?: Record<string, unknown>) => VNode[]> = null;\r\n  myRowContext: IRowContext = null;\r\n\r\n  @Watch('rows', { immediate: true }) onRowsChanged(): void {\r\n    this.onChanges();\r\n  }\r\n\r\n  @Watch('columns') onColumnsChanged(): void {\r\n    this.onChanges();\r\n  }\r\n\r\n  onChanges(): void {\r\n    if (!this.columns || !this.rows) {\r\n      return;\r\n    }\r\n    this.updateInternalColumns();\r\n    this.updateValues();\r\n  }\r\n\r\n  onActivate(event: Event): void {\r\n    this.$emit('summary-activate', event, this.summaryRow);\r\n  }\r\n\r\n  private updateInternalColumns() {\r\n    this.mySlotsFunc = this.slots;\r\n    const summarySlots: Record<string, (arg?: Record<string, unknown>) => VNode[]> = {};\r\n    this.internalColumns = this.columns.map(col => {\r\n      if (col.summaryTemplate) {\r\n        summarySlots[col.prop] = col.summaryTemplate;\r\n      }\r\n      return col;\r\n    });\r\n    if (Object.keys(summarySlots).length) {\r\n      const slots = Object.assign({}, this.slots());\r\n      Object.keys(summarySlots).forEach(column => {\r\n        slots[column] = summarySlots[column];\r\n      });\r\n      this.mySlotsFunc = () => slots;\r\n    }\r\n  }\r\n\r\n  private updateValues() {\r\n    this.summaryRow = {};\r\n\r\n    this.columns\r\n      .filter(col => !col.summaryTemplate)\r\n      .forEach(col => {\r\n        const cellsFromSingleColumn = this.rows.map(row => row[col.prop]);\r\n        const sumFunc = this.getSummaryFunction(col);\r\n\r\n        // this.summaryRow[col.prop] = col.pipe ?\r\n        //   col.pipe.transform(sumFunc(cellsFromSingleColumn)) :\r\n        //   sumFunc(cellsFromSingleColumn);\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        this.summaryRow[col.prop] = col.filter\r\n          ? col.filter(sumFunc(cellsFromSingleColumn))\r\n          : sumFunc(cellsFromSingleColumn);\r\n      });\r\n    this.myRowContext = {\r\n      row: this.summaryRow,\r\n      rowIndex: -1,\r\n      expanded: false,\r\n      isChecked: false,\r\n      isSelected: false,\r\n      rowHeight: this.rowHeight,\r\n      treeStatus: null,\r\n    };\r\n  }\r\n\r\n  private getSummaryFunction(column: ISummaryColumn): (a: unknown[]) => unknown {\r\n    if (!column.summaryFunc) {\r\n      return defaultSumFunc;\r\n    }\r\n    if (column.summaryFunc === null) {\r\n      return noopSumFunc;\r\n    }\r\n    return column.summaryFunc;\r\n  }\r\n}\r\n","import DatatableComponent from 'components/datatable.component';\r\nimport { TableColumn, TableColumnProp, TComparator } from 'types/table-column.type';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\n\r\n@Component({\r\n  template: `\r\n    <div>\r\n      <slot name=\"header\" v-bind=\"{column: column}\">\r\n        <!-- default content -->\r\n        {{ name }}\r\n      </slot>\r\n      <!-- default slot for cell -->\r\n      <slot> </slot>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableColumnComponent extends Vue {\r\n  @Prop() name: string;\r\n  @Prop() prop: TableColumnProp;\r\n  @Prop() frozenLeft: boolean;\r\n  @Prop() frozenRight: boolean;\r\n  @Prop() flexGrow: number;\r\n  @Prop() resizeable: boolean;\r\n  @Prop() comparator: TComparator;\r\n  @Prop() sortable: boolean;\r\n  @Prop() draggable: boolean;\r\n  @Prop({ default: true }) canAutoResize: boolean;\r\n  @Prop() minWidth: number;\r\n  @Prop() width: number;\r\n  @Prop() maxWidth: number;\r\n  @Prop() checkboxable: boolean;\r\n  @Prop() headerCheckboxable: boolean;\r\n  @Prop() headerClass: string | ((data: { column: TableColumn }) => string | Record<string, unknown>);\r\n  @Prop() cellClass:\r\n    | string\r\n    | Array<string>\r\n    | ((data: Record<string, unknown>) => string | Record<string, unknown>)\r\n    | Array<string | Array<string> | ((data: Record<string, unknown>) => string | Record<string, unknown>)>;\r\n  @Prop() isTreeColumn: boolean;\r\n  @Prop() treeLevelIndent: number;\r\n  @Prop() summaryFunc: (cells: unknown[]) => string;\r\n  @Prop({ default: true }) visible: boolean;\r\n\r\n  column: TableColumn = {};\r\n\r\n  @Watch('visible') onVisibleChanged(newVal: boolean): void {\r\n    this.column.visible = newVal;\r\n    (this.$parent as DatatableComponent).onColumnChangeVisible(this.column);\r\n  }\r\n\r\n  @Watch('frozenLeft') onFrozenLeftChanged(newVal: boolean): void {\r\n    this.column.frozenLeft = newVal;\r\n  }\r\n\r\n  @Watch('frozenRight') onFrozenRightChanged(newVal: boolean): void {\r\n    this.column.frozenRight = newVal;\r\n  }\r\n\r\n  @Watch('flexGrow') onFlexGrowChanged(newVal: number): void {\r\n    this.column.flexGrow = newVal;\r\n  }\r\n\r\n  @Watch('resizeable') onResizeableChanged(newVal: boolean): void {\r\n    this.column.resizeable = newVal;\r\n  }\r\n\r\n  @Watch('sortable') onSortableChanged(newVal: boolean): void {\r\n    this.column.sortable = newVal;\r\n  }\r\n\r\n  @Watch('draggable') onDraggableChanged(newVal: boolean): void {\r\n    this.column.draggable = newVal;\r\n  }\r\n\r\n  @Watch('checkboxable') onCheckboxableChanged(newVal: boolean): void {\r\n    this.column.checkboxable = newVal;\r\n  }\r\n\r\n  @Watch('width') onWidthChanged(newVal: number): void {\r\n    this.column.width = newVal;\r\n  }\r\n\r\n  mounted(): void {\r\n    this.$set(this.column, 'name', this.name);\r\n    this.$set(this.column, 'prop', this.prop);\r\n    this.$set(this.column, 'frozenLeft', this.frozenLeft);\r\n    this.$set(this.column, 'frozenRight', this.frozenRight);\r\n    this.$set(this.column, 'flexGrow', this.flexGrow);\r\n    this.$set(this.column, 'resizeable', this.resizeable);\r\n    this.$set(this.column, 'comparator', this.comparator);\r\n    this.$set(this.column, 'sortable', this.sortable);\r\n    this.$set(this.column, 'draggable', this.draggable);\r\n    this.$set(this.column, 'canAutoResize', this.canAutoResize);\r\n    this.$set(this.column, 'minWidth', this.minWidth);\r\n    this.$set(this.column, 'width', this.width);\r\n    this.$set(this.column, 'maxWidth', this.maxWidth);\r\n    this.$set(this.column, 'checkboxable', this.checkboxable);\r\n    this.$set(this.column, 'headerCheckboxable', this.headerCheckboxable);\r\n    let headerClasses = [];\r\n    if (Array.isArray(this.headerClass)) {\r\n      headerClasses = [...this.headerClass];\r\n    } else if (typeof this.headerClass === 'string') {\r\n      headerClasses.push(this.headerClass);\r\n    } else if (typeof this.headerClass === 'function') {\r\n      const res = this.headerClass({\r\n        column: this.column,\r\n      });\r\n      if (typeof res === 'string') {\r\n        headerClasses.push(res);\r\n      } else if (typeof res === 'object') {\r\n        const keys = Object.keys(res);\r\n        for (const key of keys) {\r\n          if (res[key] === true) {\r\n            headerClasses.push(key);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\r\n    for (let i = 0; i < this.$el.classList.length; i++) {\r\n      const value = this.$el.classList[0];\r\n      headerClasses.push(value);\r\n    }\r\n    this.$set(this.column, 'headerClass', headerClasses);\r\n\r\n    let cellClasses = [];\r\n    if (Array.isArray(this.cellClass)) {\r\n      cellClasses = [...this.cellClass];\r\n    } else if (typeof this.cellClass === 'string') {\r\n      cellClasses.push(this.cellClass);\r\n    } else if (typeof this.cellClass === 'function') {\r\n      cellClasses.push(this.cellClass);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\r\n    for (let i = 0; i < this.$el.classList.length; i++) {\r\n      const value = this.$el.classList[0];\r\n      cellClasses.push(value);\r\n    }\r\n    this.$set(this.column, 'cellClass', cellClasses);\r\n\r\n    this.$set(this.column, 'isTreeColumn', this.isTreeColumn);\r\n    this.$set(this.column, 'treeLevelIndent', this.treeLevelIndent);\r\n    this.$set(this.column, 'summaryFunc', this.summaryFunc);\r\n    this.$set(this.column, 'headerTemplate', this.$scopedSlots.header);\r\n    this.$set(\r\n      this.column,\r\n      'headerAppendTemplate',\r\n      this.$scopedSlots.headerAppend || this.$scopedSlots['header-append']\r\n    );\r\n    this.$set(this.column, 'cellTemplate', this.$scopedSlots.default);\r\n    this.$set(this.column, 'summaryTemplate', this.$scopedSlots.summary);\r\n    this.$set(this.column, 'visible', this.visible);\r\n\r\n    // todo: select any way to pass column to datatable // this.$emit('insert-column', column);\r\n    // this.$emit('insert-column', this.column);\r\n    (this.$parent as DatatableComponent).onColumnInsert(this.column);\r\n  }\r\n}\r\n","import { VNode } from 'vue';\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport DataTablePagerComponent from './pager.component';\r\n\r\n@Component({\r\n  components: {\r\n    'datatable-pager': DataTablePagerComponent,\r\n  },\r\n  template: `\r\n    <div\r\n      class=\"datatable-footer-inner\"\r\n      :class=\"{'selected-count': selectedMessage }\"\r\n      :style=\"{ 'height': footerHeight + 'px' }\"\r\n    >\r\n      <slot\r\n        v-bind:row=\"{ rowCount: rowCount, pageSize: pageSize,\r\n                          selectedCount: selectedCount, curPage: curPage, offset: offset }\"\r\n      >\r\n        <div class=\"page-count\">\r\n          <span v-if=\"selectedMessage\"> {{ selectedCount.toLocaleString() }} {{ selectedMessage }} / </span>\r\n          {{ rowCount.toLocaleString() }} {{ totalMessage }}\r\n        </div>\r\n      </slot>\r\n      <div class=\"datatable-pager\">\r\n        <datatable-pager\r\n          :pagerLeftArrowIcon=\"pagerLeftArrowIcon\"\r\n          :pagerRightArrowIcon=\"pagerRightArrowIcon\"\r\n          :pagerPreviousIcon=\"pagerPreviousIcon\"\r\n          :pagerNextIcon=\"pagerNextIcon\"\r\n          :page=\"curPage\"\r\n          :size=\"pageSize\"\r\n          :count=\"rowCount\"\r\n          :hidden=\"!isVisible\"\r\n          @change-page=\"$emit('page', $event)\"\r\n        >\r\n        </datatable-pager>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableFooterComponent extends Vue {\r\n  @Prop() footerHeight: number;\r\n  @Prop() rowCount: number;\r\n  @Prop() pageSize: number;\r\n  @Prop() offset: number;\r\n  @Prop() pagerLeftArrowIcon: string;\r\n  @Prop() pagerRightArrowIcon: string;\r\n  @Prop() pagerPreviousIcon: string;\r\n  @Prop() pagerNextIcon: string;\r\n  @Prop() totalMessage: string;\r\n  @Prop() footerSlot: (arg?: Record<string, unknown>) => VNode[];\r\n\r\n  @Prop({ type: Number, default: 0 }) selectedCount: number;\r\n  @Prop() selectedMessage: string | boolean;\r\n\r\n  created(): void {\r\n    if (this.footerSlot) {\r\n      this.$slots.default = this.footerSlot({\r\n        rowCount: this.rowCount,\r\n        pageSize: this.pageSize,\r\n        selectedCount: this.selectedCount,\r\n        curPage: this.curPage,\r\n        offset: this.offset,\r\n      });\r\n    }\r\n  }\r\n\r\n  beforeUpdate(): void {\r\n    if (this.footerSlot) {\r\n      this.$slots.default = this.footerSlot({\r\n        rowCount: this.rowCount,\r\n        pageSize: this.pageSize,\r\n        selectedCount: this.selectedCount,\r\n        curPage: this.curPage,\r\n        offset: this.offset,\r\n      });\r\n    }\r\n  }\r\n\r\n  get isVisible(): boolean {\r\n    return this.rowCount / this.pageSize > 1;\r\n  }\r\n\r\n  get curPage(): number {\r\n    return this.offset + 1;\r\n  }\r\n}\r\n","import { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\n\r\nexport interface IPage {\r\n  number: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <ul class=\"pager\">\r\n      <li :class=\"{ disabled: !canPrevious }\">\r\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" @click=\"selectPage(1)\">\r\n          <i :class=\"pagerPreviousIcon\"></i>\r\n        </a>\r\n      </li>\r\n      <li :class=\"{ disabled: !canPrevious }\">\r\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" @click=\"prevPage\">\r\n          <i :class=\"pagerLeftArrowIcon\"></i>\r\n        </a>\r\n      </li>\r\n      <li\r\n        role=\"button\"\r\n        aria-label=\"'page ' + pg.number\"\r\n        class=\"pages\"\r\n        v-for=\"pg of pages\"\r\n        :class=\"{ active: pg.number === myPage }\"\r\n      >\r\n        <a href=\"javascript:void(0)\" @click=\"selectPage(pg.number)\">\r\n          {{ pg.text }}\r\n        </a>\r\n      </li>\r\n      <li :class=\"{ disabled: !canNext }\">\r\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" @click=\"nextPage\">\r\n          <i :class=\"pagerRightArrowIcon\"></i>\r\n        </a>\r\n      </li>\r\n      <li :class=\"{ disabled: !canNext }\">\r\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" @click=\"selectPage(totalPages)\">\r\n          <i :class=\"pagerNextIcon\"></i>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  `,\r\n})\r\nexport default class DataTablePagerComponent extends Vue {\r\n  @Prop() pagerLeftArrowIcon: string;\r\n  @Prop() pagerRightArrowIcon: string;\r\n  @Prop() pagerPreviousIcon: string;\r\n  @Prop() pagerNextIcon: string;\r\n  @Prop({ type: Number, default: 0 }) size: number;\r\n  @Prop({ type: Number, default: 0 }) count: number;\r\n  @Prop({ type: Number, default: 1 }) page: number;\r\n\r\n  pages: IPage[] = [];\r\n  myPage = 0;\r\n\r\n  @Watch('count') onCountChanged(): void {\r\n    this.pages = this.calcPages();\r\n  }\r\n\r\n  @Watch('size') onSizeChanged(): void {\r\n    this.pages = this.calcPages();\r\n  }\r\n\r\n  @Watch('page') onPageChanged(): void {\r\n    this.myPage = this.page;\r\n    this.pages = this.calcPages();\r\n  }\r\n\r\n  created(): void {\r\n    this.myPage = this.page;\r\n    this.pages = this.calcPages();\r\n  }\r\n\r\n  get totalPages(): number {\r\n    // const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\r\n    if (this.size < 1) {\r\n      return 1;\r\n    }\r\n    let result = Math.ceil(this.count / this.size);\r\n    const newCount = Math.floor(this.count / this.size) * this.size;\r\n    if (this.count - newCount === 1) {\r\n      // correct page's number if last page contnains one row\r\n      result--;\r\n    }\r\n    return Math.max(result || 0, 1);\r\n  }\r\n\r\n  get canPrevious(): boolean {\r\n    return this.myPage > 1;\r\n  }\r\n\r\n  get canNext(): boolean {\r\n    return this.myPage < this.totalPages;\r\n  }\r\n\r\n  prevPage(): void {\r\n    this.selectPage(this.myPage - 1);\r\n  }\r\n\r\n  nextPage(): void {\r\n    this.selectPage(this.myPage + 1);\r\n  }\r\n\r\n  selectPage(page: number): void {\r\n    if (page > 0 && page <= this.totalPages && page !== this.myPage) {\r\n      this.myPage = page;\r\n\r\n      this.$emit('change-page', {\r\n        page,\r\n      });\r\n    }\r\n  }\r\n\r\n  calcPages(page?: number): IPage[] {\r\n    const pages: IPage[] = [];\r\n    let startPage = 1;\r\n    let endPage = this.totalPages;\r\n    const maxSize = 5;\r\n    const isMaxSized = maxSize < this.totalPages;\r\n\r\n    page = page || this.myPage;\r\n\r\n    if (isMaxSized) {\r\n      startPage = page - Math.floor(maxSize / 2);\r\n      endPage = page + Math.floor(maxSize / 2);\r\n\r\n      if (startPage < 1) {\r\n        startPage = 1;\r\n        endPage = Math.min(startPage + maxSize - 1, this.totalPages);\r\n      } else if (endPage > this.totalPages) {\r\n        startPage = Math.max(this.totalPages - maxSize + 1, 1);\r\n        endPage = this.totalPages;\r\n      }\r\n    }\r\n\r\n    for (let num = startPage; num <= endPage; num++) {\r\n      pages.push({\r\n        number: num,\r\n        text: String(num),\r\n      });\r\n    }\r\n    return pages;\r\n  }\r\n}\r\n","import { SelectionType } from 'types/selection.type';\r\nimport { SortType } from 'types/sort.type';\r\nimport { SortDirection } from 'types/sort-direction.type';\r\nimport { ISortPropDir } from 'types/sort-prop-dir.type';\r\nimport { TableColumn } from 'types/table-column.type';\r\nimport { nextSortDir } from 'utils/sort';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\n\r\n@Component({\r\n  template: `\r\n    <div\r\n      class=\"datatable-header-cell-template-wrap\"\r\n      :class=\"[columnCssClasses]\"\r\n      :style=\"styles\"\r\n      :title=\"name\"\r\n      @contextmenu=\"onContextmenu($event)\"\r\n    >\r\n      <slot name=\"target-marker\">\r\n        <!-- Default content -->\r\n        <div class=\"targetMarker\" v-if=\"isTarget\">\r\n          <div class=\"icon datatable-icon-down\"></div>\r\n          <div class=\"icon datatable-icon-up\"></div>\r\n        </div>\r\n      </slot>\r\n      <label v-if=\"isCheckboxable\" class=\"datatable-checkbox\">\r\n        <input type=\"checkbox\" v-model=\"myAllRowsSelected\" @change=\"onCheckboxChange\" />\r\n      </label>\r\n      <slot v-bind=\"{ column: column }\">\r\n        <!-- Default content -->\r\n        <span class=\"datatable-header-cell-wrapper\">\r\n          <span class=\"datatable-header-cell-label draggable\" :class=\"cssClass\" @click=\"onSort\" v-html=\"name\"> </span>\r\n        </span>\r\n      </slot>\r\n      <div :class=\"sortCssClass\" @click=\"onSort\">\r\n        {{ sortOrder }}\r\n      </div>\r\n      <slot name=\"append\" v-bind=\"{ column: column }\"></slot>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableHeaderCellComponent extends Vue {\r\n  @Prop() sortType: SortType;\r\n  @Prop() sortAscendingIcon: string;\r\n  @Prop() sortDescendingIcon: string;\r\n  @Prop() isTarget: boolean;\r\n  @Prop() allRowsSelected: boolean;\r\n  @Prop() selectionType: SelectionType;\r\n  @Prop() column: TableColumn;\r\n  @Prop() sorts: ISortPropDir[];\r\n  @Prop() headerHeight: number;\r\n\r\n  sortFn = this.onSort.bind(this) as () => void;\r\n  sortDir: SortDirection = null;\r\n  myAllRowsSelected = false;\r\n  sortOrder = '';\r\n  // selectFn = this.select.emit.bind(this.select);\r\n\r\n  cellContext = {\r\n    column: null as TableColumn,\r\n    sortDir: this.sortDir,\r\n    sortFn: this.sortFn,\r\n    allRowsSelected: false,\r\n    // selectFn: this.selectFn\r\n  };\r\n\r\n  resizeObserver?: ResizeObserver;\r\n\r\n  @Watch('allRowsSelected', { immediate: true }) onAllRowsSelectedChanged(): void {\r\n    if (!this.isCheckboxable) {\r\n      return;\r\n    }\r\n    this.myAllRowsSelected = this.allRowsSelected;\r\n    this.cellContext.allRowsSelected = this.allRowsSelected;\r\n  }\r\n\r\n  @Watch('column', { immediate: true }) onColumnChahged(): void {\r\n    this.cellContext.column = this.column;\r\n  }\r\n\r\n  @Watch('column.visible') onColumnVisibleChahged(): void {\r\n    this.$emit('column-visible-changed', this.column);\r\n  }\r\n\r\n  @Watch('column.frozenLeft') onColumnFrozenLeftChahged(): void {\r\n    this.$emit('column-visible-changed', this.column);\r\n  }\r\n\r\n  @Watch('column.frozenRight') onColumnFrozenRightChahged(): void {\r\n    this.$emit('column-visible-changed', this.column);\r\n  }\r\n\r\n  @Watch('sorts', { immediate: true }) onSortsChanged(): void {\r\n    this.sortDir = this.calcSortDir(this.sorts);\r\n    this.cellContext.sortDir = this.sortDir;\r\n  }\r\n\r\n  created(): void {\r\n    this.cellContext.column = this.column;\r\n    this.cellContext.allRowsSelected = this.allRowsSelected;\r\n    this.$emit('header-cell-created', this.$el);\r\n    if (this.column.headerTemplate) {\r\n      this.$slots.default = this.column.headerTemplate({ column: this.column });\r\n    }\r\n    if (this.column.headerAppendTemplate) {\r\n      this.$slots.append = this.column.headerAppendTemplate({ column: this.column });\r\n    }\r\n  }\r\n\r\n  mounted(): void {\r\n    this.column.element = this.$el;\r\n    this.$emit('header-cell-mounted', this.$el);\r\n    this.setResizeObserver();\r\n  }\r\n\r\n  beforeUpdate(): void {\r\n    if (this.column.headerTemplate && !this.$slots.default) {\r\n      this.$slots.default = this.column.headerTemplate({ column: this.column });\r\n    }\r\n    if (this.column.headerAppendTemplate && !this.$slots.append) {\r\n      this.$slots.append = this.column.headerAppendTemplate({ column: this.column });\r\n    }\r\n  }\r\n\r\n  updated(): void {\r\n    if (this.resizeObserver && this.column.element !== this.$el) {\r\n      this.resizeObserver.unobserve(this.column.element);\r\n    }\r\n    this.column.element = this.$el;\r\n    this.setResizeObserver();\r\n  }\r\n\r\n  beforeDestroy(): void {\r\n    if (this.resizeObserver) {\r\n      this.resizeObserver.unobserve(this.$el);\r\n      this.resizeObserver = null;\r\n    }\r\n    if (this.column) {\r\n      this.column.element = null;\r\n    }\r\n  }\r\n\r\n  onCheckboxChange(): void {\r\n    this.$emit('select', this.myAllRowsSelected);\r\n  }\r\n\r\n  get columnCssClasses(): string {\r\n    let cls = 'datatable-header-cell';\r\n    if (this.column) {\r\n      if (this.column.sortable) {\r\n        cls += ' sortable';\r\n      }\r\n      if (this.column.resizeable) {\r\n        cls += ' resizeable';\r\n      }\r\n      if (this.column.draggable) {\r\n        cls += ' draggable';\r\n      }\r\n      if (this.column.headerClass) {\r\n        if (typeof this.column.headerClass === 'string') {\r\n          cls += ' ' + this.column.headerClass;\r\n        } else if (Array.isArray(this.column.headerClass)) {\r\n          cls += ' ' + this.column.headerClass.join(' ');\r\n        } else if (typeof this.column.headerClass === 'function') {\r\n          const res = this.column.headerClass({\r\n            column: this.column,\r\n          });\r\n          if (typeof res === 'string') {\r\n            cls += res;\r\n          } else if (typeof res === 'object') {\r\n            const keys = Object.keys(res);\r\n            for (const k of keys) {\r\n              if (res[k] === true) {\r\n                cls += ` ${k}`;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const sortDir = this.sortDir;\r\n    if (sortDir) {\r\n      cls += ` sort-active sort-${sortDir}`;\r\n    }\r\n\r\n    return cls;\r\n  }\r\n\r\n  get name(): string {\r\n    // guaranteed to have a value by setColumnDefaults() in column-helper.ts\r\n    return !this.column.headerTemplate ? this.column.name : null;\r\n  }\r\n\r\n  get styles(): Record<string, string> {\r\n    // const width = this.calcRealWidth();\r\n    // if (width !== null && width < 10) {\r\n    //   this.column.visible = false;\r\n    // } else {\r\n    //   this.column.visible = true;\r\n    // }\r\n    return {\r\n      height: `${this.headerHeight}px`,\r\n      width: `${this.column.width}px`,\r\n      'min-width': `${this.column.minWidth}px`,\r\n      'max-width': `${this.column.maxWidth}px`,\r\n    };\r\n  }\r\n\r\n  get sortCssClass(): string {\r\n    return this.calcSortCssClass(this.sortDir);\r\n  }\r\n\r\n  get cssClass(): string {\r\n    return this.calcCssClass(this.sortDir);\r\n  }\r\n\r\n  // @HostBinding('style.minWidth.px')\r\n  // get minWidth(): number {\r\n  //   return this.column.minWidth;\r\n  // }\r\n\r\n  // @HostBinding('style.maxWidth.px')\r\n  // get maxWidth(): number {\r\n  //   return this.column.maxWidth;\r\n  // }\r\n\r\n  // @HostBinding('style.width.px')\r\n  // get width(): number {\r\n  //   return this.column.width;\r\n  // }\r\n\r\n  get isCheckboxable(): boolean {\r\n    return this.column.checkboxable && this.column.headerCheckboxable;\r\n  }\r\n\r\n  // @HostListener('contextmenu', ['$event'])\r\n  onContextmenu($event: MouseEvent): void {\r\n    this.$emit('columnContextmenu', { event: $event, column: this.column });\r\n  }\r\n\r\n  calcSortDir(sorts: ISortPropDir[]): SortDirection {\r\n    this.sortOrder = '';\r\n    if (sorts && this.column) {\r\n      let sortOrder = '';\r\n      const sort = sorts\r\n        .filter(s => s.prop)\r\n        .find((s: ISortPropDir, index) => {\r\n          if (s.prop === this.column.prop) {\r\n            sortOrder = (index + 1).toString();\r\n            return true;\r\n          }\r\n        });\r\n      if (sort) {\r\n        if (this.sortType === SortType.multi) {\r\n          this.sortOrder = sortOrder;\r\n        }\r\n        return sort.dir;\r\n      }\r\n    }\r\n  }\r\n\r\n  onSort(): void {\r\n    if (!this.column.sortable) {\r\n      return;\r\n    }\r\n\r\n    const newValue = nextSortDir(this.sortType, this.sortDir);\r\n    this.$emit('sort', {\r\n      column: this.column,\r\n      prevValue: this.sortDir,\r\n      newValue,\r\n    });\r\n  }\r\n\r\n  calcSortCssClass(sortDir: SortDirection): string {\r\n    if (sortDir === SortDirection.asc) {\r\n      return `sort-btn sort-asc ${this.sortAscendingIcon}`;\r\n    }\r\n    if (sortDir === SortDirection.desc) {\r\n      return `sort-btn sort-desc ${this.sortDescendingIcon}`;\r\n    }\r\n    return 'sort-btn';\r\n  }\r\n\r\n  calcCssClass(sortDir: SortDirection): string {\r\n    if (sortDir === SortDirection.asc || sortDir === SortDirection.desc) {\r\n      return 'datatable-header-cell-bold';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private setResizeObserver() {\r\n    if ((window as Window).ResizeObserver) {\r\n      this.resizeObserver = new (window as Window).ResizeObserver(entries => {\r\n        if (!this.column) {\r\n          return;\r\n        }\r\n        if (entries.length && entries[0].contentRect) {\r\n          this.column.realWidth = Math.max(this.$el.clientWidth, entries[0].contentRect.width);\r\n        } else {\r\n          this.column.realWidth = this.$el.clientWidth;\r\n        }\r\n      });\r\n      this.resizeObserver.observe(this.$el);\r\n    } else {\r\n      this.column.realWidth = null;\r\n    }\r\n  }\r\n}\r\n","import DraggableDirective from 'directives/draggable.directive';\r\nimport LongPressDirective from 'directives/long-press.directive';\r\nimport ResizeableDirective from 'directives/resizeable.directive';\r\nimport { SelectionType } from 'types/selection.type';\r\nimport { SortType } from 'types/sort.type';\r\nimport { SortDirection } from 'types/sort-direction.type';\r\nimport { ISortEvent, ISortPropDir } from 'types/sort-prop-dir.type';\r\nimport { TableColumn } from 'types/table-column.type';\r\nimport { IColumnsByPinRecord, IColumnsWidth } from 'utils/column';\r\nimport { translateXY } from 'utils/translate';\r\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\r\nimport DataTableHeaderCellComponent from './header-cell.component';\r\n\r\ninterface IDragPosition {\r\n  left: number;\r\n  right: number;\r\n  index: number;\r\n  element: HTMLElement;\r\n}\r\n\r\n@Component({\r\n  components: {\r\n    'datatable-header-cell': DataTableHeaderCellComponent,\r\n  },\r\n  directives: {\r\n    resizeable: ResizeableDirective,\r\n    'long-press': LongPressDirective,\r\n    dragndrop: DraggableDirective,\r\n  },\r\n  template: `\r\n    <div :style=\"styleObject\" class=\"datatable-header-inner\">\r\n      <div\r\n        v-for=\"colGroup of columnsByPin\"\r\n        :key=\"colGroup.type\"\r\n        :class=\"['datatable-row-' + colGroup.type]\"\r\n        :style=\"styleByGroup[colGroup.type]\"\r\n      >\r\n        <template v-for=\"column of colGroup.columns\">\r\n          <datatable-header-cell\r\n            v-if=\"column.visible\"\r\n            :key=\"column.$$id\"\r\n            v-resizeable=\"{ resizeEnabled: column.resizeable }\"\r\n            v-long-press=\"{pressModel: column, pressEnabled: reorderable && column.draggable}\"\r\n            v-dragndrop=\"{dragEvent:dragEvent,dragModel:column,dragX:isEnableDragX(column),dragY:false}\"\r\n            @resize=\"onColumnResized($event, column)\"\r\n            @longPressStart=\"onLongPressStart($event, column)\"\r\n            @longPressEnd=\"onLongPressEnd($event, column)\"\r\n            :headerHeight=\"headerHeight\"\r\n            :isTarget=\"column.isTarget\"\r\n            :targetMarkerContext=\"column.targetMarkerContext\"\r\n            :column=\"column\"\r\n            :sortType=\"sortType\"\r\n            :sorts=\"sorts\"\r\n            :selectionType=\"selectionType\"\r\n            :sortAscendingIcon=\"sortAscendingIcon\"\r\n            :sortDescendingIcon=\"sortDescendingIcon\"\r\n            :allRowsSelected=\"allRowsSelected\"\r\n            @sort=\"onSort($event)\"\r\n            @select=\"onSelect\"\r\n            @columnContextmenu=\"$emit('columnContextmenu', $event)\"\r\n            @header-cell-mounted=\"onHeaderCellMounted(column, $event)\"\r\n            @dragStart=\"onDragStart\"\r\n            @dragEnd=\"onDragEnd\"\r\n            @dragging=\"onDragging\"\r\n            @column-visible-changed=\"onColumnVisibleChanged($event)\"\r\n          >\r\n          </datatable-header-cell>\r\n        </template>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport default class DataTableHeaderComponent extends Vue {\r\n  @Prop() sortAscendingIcon: string;\r\n  @Prop() sortDescendingIcon: string;\r\n  @Prop() scrollbarWidth: number;\r\n  @Prop() scrollbarH: boolean;\r\n  @Prop() dealsWithGroup: boolean;\r\n  @Prop() innerWidth: number;\r\n  @Prop() sorts: ISortPropDir[];\r\n  @Prop() sortType: SortType;\r\n  @Prop() allRowsSelected: boolean;\r\n  @Prop() selectionType: SelectionType;\r\n  @Prop() reorderable: boolean;\r\n  @Prop() headerHeight: string | number;\r\n  @Prop() columns: TableColumn[];\r\n  @Prop() offsetX: number;\r\n  @Prop() columnGroupWidths: IColumnsWidth;\r\n  @Prop() columnsByPin: IColumnsByPinRecord[];\r\n\r\n  myHeaderHeight = 'auto';\r\n  styleByGroup = {\r\n    left: {},\r\n    center: {},\r\n    right: {},\r\n  };\r\n  targetMarkerContext: { class: string } = null;\r\n  dragEvent: MouseEvent = null;\r\n  dragging = false;\r\n  positions: Record<string, IDragPosition> = {};\r\n\r\n  // non-reactive props\r\n  lastDraggingIndex: number;\r\n  draggables: Array<{ dragModel: TableColumn; element: HTMLElement }>;\r\n\r\n  @Watch('innerWidth', { immediate: true }) onChangedInnerWidth(): void {\r\n    if (Array.isArray(this.columns)) {\r\n      this.setStylesByGroup();\r\n    }\r\n  }\r\n\r\n  @Watch('headerHeight', { immediate: true }) onHeaderHeightChanged(): void {\r\n    if (this.headerHeight !== 'auto') {\r\n      this.myHeaderHeight = `${this.headerHeight}px`;\r\n    } else {\r\n      this.myHeaderHeight = this.headerHeight;\r\n    }\r\n  }\r\n\r\n  @Watch('columns', { immediate: true }) onColumnsChanged(): void {\r\n    this.setStylesByGroup();\r\n  }\r\n\r\n  @Watch('offsetX') onOffsetXChanged(): void {\r\n    this.setStylesByGroup();\r\n  }\r\n\r\n  @Watch('columnGroupWidths') onColumnGroupWidthsChanged() {\r\n    this.setStylesByGroup();\r\n  }\r\n\r\n  onLongPressStart({ event, model }: { event: MouseEvent; model: { dragging: boolean } }): void {\r\n    model.dragging = true;\r\n    this.dragEvent = event;\r\n  }\r\n\r\n  onLongPressEnd({ event, model }: { event: MouseEvent; model: TableColumn }): void {\r\n    this.dragEvent = event;\r\n\r\n    // delay resetting so sort can be\r\n    // prevented if we were dragging\r\n    setTimeout(() => {\r\n      // datatable component creates copies from columns on reorder\r\n      // set dragging to false on new objects\r\n      const column = this.columns.find(c => c.$$id === model.$$id);\r\n      if (column) {\r\n        column.dragging = false;\r\n      }\r\n    }, 5);\r\n  }\r\n\r\n  // @HostBinding('style.width')\r\n  get headerWidth(): string {\r\n    if (this.scrollbarH) {\r\n      return `${this.innerWidth}px`;\r\n    }\r\n    return '100%';\r\n  }\r\n\r\n  isEnableDragX(column: TableColumn): boolean {\r\n    return this.reorderable && column.draggable && column.dragging;\r\n  }\r\n\r\n  // trackByGroups(colGroup: any): any {\r\n  //   return colGroup.type;\r\n  // }\r\n\r\n  // columnTrackingFn(column: any): any {\r\n  //   return column.$$id;\r\n  // }\r\n\r\n  onColumnResized(width: number, column: TableColumn): void {\r\n    // column: DataTableColumnDirective\r\n    if (width <= column.minWidth) {\r\n      width = column.minWidth;\r\n    } else if (width >= column.maxWidth) {\r\n      width = column.maxWidth;\r\n    }\r\n\r\n    this.$emit('resize', {\r\n      column,\r\n      prevValue: column.width,\r\n      newValue: width,\r\n    });\r\n  }\r\n\r\n  onColumnVisibleChanged(column: TableColumn): void {\r\n    this.$emit('column-visible-changed', column);\r\n  }\r\n\r\n  getColumn(index: number): TableColumn {\r\n    const leftColumnCount = this.columnsByPin[0].columns.length;\r\n    if (index < leftColumnCount) {\r\n      return this.columnsByPin[0].columns[index];\r\n    }\r\n\r\n    const centerColumnCount = this.columnsByPin[1].columns.length;\r\n    if (index < leftColumnCount + centerColumnCount) {\r\n      return this.columnsByPin[1].columns[index - leftColumnCount];\r\n    }\r\n\r\n    return this.columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\r\n  }\r\n\r\n  onSort({\r\n    column,\r\n    prevValue,\r\n    newValue,\r\n  }: {\r\n    column: TableColumn;\r\n    prevValue: SortDirection;\r\n    newValue: SortDirection;\r\n  }): void {\r\n    // if we are dragging don't sort!\r\n    if (column.dragging) {\r\n      return;\r\n    }\r\n\r\n    const sorts = this.calcNewSorts(column, prevValue, newValue);\r\n    const event: ISortEvent = {\r\n      sorts,\r\n      column,\r\n      prevValue,\r\n      newValue,\r\n    };\r\n    this.$emit('sort', event);\r\n  }\r\n\r\n  onSelect(event: Event): void {\r\n    this.$emit('select', event);\r\n  }\r\n\r\n  calcNewSorts(column: TableColumn, prevValue: SortDirection, newValue: SortDirection): ISortPropDir[] {\r\n    let idx = 0;\r\n\r\n    if (!this.sorts) {\r\n      this.sorts = [];\r\n    }\r\n\r\n    const sorts = this.sorts.map((s, i) => {\r\n      s = { ...s };\r\n      if (s.prop === column.prop) {\r\n        idx = i;\r\n      }\r\n      return s;\r\n    });\r\n\r\n    if (!newValue) {\r\n      sorts.splice(idx, 1);\r\n    } else if (prevValue) {\r\n      sorts[idx].dir = newValue;\r\n    } else {\r\n      if (this.sortType === SortType.single) {\r\n        sorts.splice(0, this.sorts.length);\r\n      }\r\n\r\n      sorts.push({ dir: newValue, prop: column.prop });\r\n    }\r\n\r\n    return sorts;\r\n  }\r\n\r\n  setStylesByGroup(): void {\r\n    if (!this.columnsByPin || !this.columnsByPin.length) {\r\n      return;\r\n    }\r\n    const leftColumnCount = this.columnsByPin[0].columns.length;\r\n    // eslint-disable-next-line eqeqeq\r\n    if (leftColumnCount != null) {\r\n      this.styleByGroup['left'] = this.calcStylesByGroup('left');\r\n    }\r\n    const centerColumnCount = this.columnsByPin[1].columns.length;\r\n    // eslint-disable-next-line eqeqeq\r\n    if (centerColumnCount != null) {\r\n      this.styleByGroup['center'] = this.calcStylesByGroup('center');\r\n    }\r\n    const rightColumnCount = this.columnsByPin[2].columns.length;\r\n    // eslint-disable-next-line eqeqeq\r\n    if (rightColumnCount != null) {\r\n      this.styleByGroup['right'] = this.calcStylesByGroup('right');\r\n    }\r\n  }\r\n\r\n  calcStylesByGroup(group: keyof IColumnsWidth): Record<string, string | number> {\r\n    if (!this.columnGroupWidths) {\r\n      return null;\r\n    }\r\n    const widths = this.columnGroupWidths;\r\n    const offsetX = this.offsetX;\r\n\r\n    const styles = {\r\n      width: `${widths[group]}px`,\r\n    };\r\n    if (group === 'center') {\r\n      translateXY(styles, offsetX * -1, 0);\r\n    } else if (group === 'right') {\r\n      const totalDiff = widths.total - this.innerWidth;\r\n      let offset = totalDiff * -1;\r\n      if (this.scrollbarWidth) {\r\n        offset -= this.scrollbarWidth;\r\n      }\r\n      translateXY(styles, offset, 0);\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  styleForGroup(group: IColumnsByPinRecord): Record<string, string | number> {\r\n    return this.styleByGroup[group.type];\r\n  }\r\n\r\n  get styleObject(): Record<string, string | number> {\r\n    return {\r\n      width: this.headerWidth ? this.headerWidth : `${this.columnGroupWidths.total}px`,\r\n      height: this.myHeaderHeight,\r\n    };\r\n  }\r\n\r\n  onHeaderCellMounted(column: TableColumn, element: HTMLElement): void {\r\n    if (!this.draggables) {\r\n      this.draggables = [];\r\n    }\r\n    this.draggables.push({ dragModel: column, element });\r\n  }\r\n\r\n  onDragStart(): void {\r\n    if (this.dragging) {\r\n      return;\r\n    }\r\n    this.dragging = true;\r\n\r\n    this.positions = {};\r\n\r\n    let i = 0;\r\n    this.draggables.sort((a, b) => {\r\n      const left = parseInt(a.element.offsetLeft.toString(), 10);\r\n      const left1 = parseInt(b.element.offsetLeft.toString(), 10);\r\n      return left - left1;\r\n    });\r\n    for (const dragger of this.draggables) {\r\n      const elm = dragger.element;\r\n      const left = parseInt(elm.offsetLeft.toString(), 10);\r\n      const width = elm.offsetWidth;\r\n      if (width) {\r\n        this.positions[dragger.dragModel.prop] = {\r\n          left,\r\n          right: left + parseInt(width.toString(), 10),\r\n          index: i++,\r\n          element: elm,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  onDragging({ element, model, event }: { element: HTMLElement; model: TableColumn; event: MouseEvent }): void {\r\n    const prevPos = this.positions[model.prop];\r\n    const target = this.isTarget(model, event);\r\n\r\n    if (target) {\r\n      if (this.lastDraggingIndex !== target.i) {\r\n        this.onTargetChanged({\r\n          prevIndex: this.lastDraggingIndex,\r\n          newIndex: target.i,\r\n          initialIndex: prevPos.index,\r\n        });\r\n        this.lastDraggingIndex = target.i;\r\n      }\r\n    } else if (this.lastDraggingIndex !== prevPos.index) {\r\n      this.onTargetChanged({\r\n        prevIndex: this.lastDraggingIndex,\r\n        initialIndex: prevPos.index,\r\n      });\r\n      this.lastDraggingIndex = prevPos.index;\r\n    }\r\n  }\r\n\r\n  onDragEnd({ element, model, event }: { element: HTMLElement; model: TableColumn; event: MouseEvent }): void {\r\n    this.dragging = false;\r\n    const prevPos = this.columns.findIndex(col => col.prop === model.prop); // this.positions[model.prop];\r\n\r\n    const target = this.isTarget(model, event);\r\n    this.positions = {};\r\n    if (target) {\r\n      this.onColumnReordered({\r\n        prevIndex: prevPos,\r\n        newIndex: this.columns.findIndex(col => col.prop === target.prop), // target.i,\r\n        model,\r\n      });\r\n    }\r\n    // eslint-disable-next-line no-undefined\r\n    this.lastDraggingIndex = undefined;\r\n    element.style.left = 'auto';\r\n  }\r\n\r\n  onColumnReordered({ prevIndex, newIndex, model }: { prevIndex: number; newIndex: number; model: TableColumn }): void {\r\n    const column = this.getColumn(newIndex);\r\n    column.isTarget = false;\r\n    column.targetMarkerContext = null;\r\n    this.$emit('reorder', {\r\n      column: model,\r\n      prevValue: prevIndex,\r\n      newValue: newIndex,\r\n    });\r\n  }\r\n\r\n  onTargetChanged({\r\n    prevIndex,\r\n    newIndex,\r\n    initialIndex,\r\n  }: {\r\n    prevIndex: number;\r\n    newIndex?: number;\r\n    initialIndex: number;\r\n  }): void {\r\n    if (prevIndex || prevIndex === 0) {\r\n      const oldColumn = this.getColumn(prevIndex);\r\n      oldColumn.isTarget = false;\r\n      oldColumn.targetMarkerContext = null;\r\n    }\r\n    if (newIndex || newIndex === 0) {\r\n      const newColumn = this.getColumn(newIndex);\r\n      newColumn.isTarget = true;\r\n\r\n      if (initialIndex !== newIndex) {\r\n        newColumn.targetMarkerContext = {\r\n          class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft'),\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  isTarget(\r\n    model: TableColumn,\r\n    event: MouseEvent\r\n  ): {\r\n    prop: string;\r\n    pos: IDragPosition;\r\n    i: number;\r\n  } {\r\n    let i = 0;\r\n    const x = event.x || event.clientX;\r\n    const y = event.y || event.clientY;\r\n    const targets = document.elementsFromPoint(x, y);\r\n\r\n    for (const prop in this.positions) {\r\n      // current column position which throws event.\r\n      const pos = this.positions[prop];\r\n      // since we drag the inner span, we need to find it in the elements at the cursor\r\n      if (model.prop !== prop && targets.find((el: HTMLElement) => el === pos.element)) {\r\n        return {\r\n          prop,\r\n          pos,\r\n          i,\r\n        };\r\n      }\r\n\r\n      i++;\r\n    }\r\n  }\r\n}\r\n","import { TableColumn } from 'types/table-column.type';\r\nimport { VNode } from 'vue';\r\nimport { DirectiveBinding } from 'vue/types/options';\r\nimport { Vue } from 'vue-property-decorator';\r\n\r\nlet idCounter = 0;\r\n\r\ninterface IDraggableElement extends HTMLElement {\r\n  __draggable__: DraggableController;\r\n}\r\n\r\nclass DraggableController {\r\n  id = 0;\r\n  vnode: VNode = null;\r\n  element: HTMLElement = null;\r\n  handleUp: (event: MouseEvent) => void = null;\r\n  handleDown: (event: MouseEvent) => void = null;\r\n  handleMove: (event: MouseEvent) => void = null;\r\n  dragModel: TableColumn;\r\n  dragX = true;\r\n  dragY = true;\r\n\r\n  private _dragEvent: MouseEvent = null;\r\n  private isDragging = false;\r\n  private mouseDownPos: { x: number; y: number };\r\n\r\n  constructor(id: number, vNode: VNode, el: HTMLElement, dragModel: TableColumn, dragX: boolean, dragY: boolean) {\r\n    this.id = id;\r\n    this.vnode = vNode;\r\n    this.element = el;\r\n    this.dragModel = dragModel;\r\n    this.dragX = dragX;\r\n    this.dragY = dragY;\r\n    this.handleUp = this.onMouseUp.bind(this) as (event: MouseEvent) => void;\r\n    this.handleMove = this.onMouseMove.bind(this) as (event: MouseEvent) => void;\r\n  }\r\n\r\n  unsubscribe() {\r\n    document.removeEventListener('mousemove', this.handleMove);\r\n    document.removeEventListener('mouseup', this.handleUp);\r\n  }\r\n\r\n  set dragEvent(value: MouseEvent) {\r\n    this._dragEvent = value;\r\n    if (value) {\r\n      this.onMouseDown(value);\r\n    }\r\n  }\r\n  get dragEvent() {\r\n    return this._dragEvent;\r\n  }\r\n\r\n  onMouseDown(event: MouseEvent): void {\r\n    // we only want to drag the inner header text\r\n    const isDragElm = (<HTMLElement>event.target).classList.contains('draggable');\r\n\r\n    if (isDragElm && (this.dragX || this.dragY)) {\r\n      event.preventDefault();\r\n      this.isDragging = true;\r\n\r\n      this.mouseDownPos = { x: event.clientX, y: event.clientY };\r\n\r\n      document.addEventListener('mouseup', this.handleUp);\r\n      document.addEventListener('mousemove', this.handleMove);\r\n\r\n      this.emit('dragStart', {\r\n        event,\r\n        element: this.element,\r\n        model: this.dragModel,\r\n      });\r\n    }\r\n  }\r\n\r\n  private onMouseUp(event: MouseEvent): void {\r\n    document.removeEventListener('mousemove', this.handleMove);\r\n    if (!this.isDragging) {\r\n      return;\r\n    }\r\n\r\n    this.isDragging = false;\r\n    this.element.classList.remove('dragging');\r\n\r\n    this.unsubscribe();\r\n    this.emit('dragEnd', {\r\n      event,\r\n      element: this.element,\r\n      model: this.dragModel,\r\n    });\r\n  }\r\n\r\n  private onMouseMove(event: MouseEvent): void {\r\n    if (!this.isDragging) {\r\n      return;\r\n    }\r\n\r\n    const x = event.clientX - this.mouseDownPos.x;\r\n    const y = event.clientY - this.mouseDownPos.y;\r\n\r\n    if (this.dragX) {\r\n      this.element.style.left = `${x}px`;\r\n    }\r\n    if (this.dragY) {\r\n      this.element.style.top = `${y}px`;\r\n    }\r\n\r\n    this.element.classList.add('dragging');\r\n\r\n    this.emit('dragging', {\r\n      event,\r\n      element: this.element,\r\n      model: this.dragModel,\r\n    });\r\n  }\r\n\r\n  private emit(name: string, data: unknown): void {\r\n    const handlers =\r\n      (this.vnode.data && this.vnode.data.on) || (this.vnode.componentOptions && this.vnode.componentOptions.listeners);\r\n    if (handlers && handlers[name]) {\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\r\n      handlers[name].fns(data);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Vue.directive('draggable', {\r\n  bind(el: HTMLElement, binding: DirectiveBinding, vnode: VNode): void {\r\n    const ctrl = new DraggableController(\r\n      idCounter++,\r\n      vnode,\r\n      el,\r\n      (binding as { value: { dragModel: TableColumn } }).value.dragModel,\r\n      (binding as { value: { dragX: boolean } }).value.dragX,\r\n      (binding as { value: { dragY: boolean } }).value.dragY\r\n    );\r\n    (el as IDraggableElement).__draggable__ = ctrl;\r\n  },\r\n  update(el: HTMLElement, binding: DirectiveBinding, vnode: VNode): void {\r\n    const ctrl: DraggableController = (el as IDraggableElement).__draggable__;\r\n    if (!ctrl) {\r\n      return;\r\n    }\r\n    ctrl.dragX = (binding as { value: { dragX: boolean } }).value.dragX;\r\n    ctrl.dragEvent = (binding as { value: { dragEvent: MouseEvent } }).value.dragEvent;\r\n  },\r\n  unbind(el: HTMLElement) {\r\n    if (!el) {\r\n      return;\r\n    }\r\n    const ctrl: DraggableController = (el as IDraggableElement).__draggable__;\r\n    ctrl.unsubscribe();\r\n  },\r\n});\r\n","import { TableColumn } from 'types/table-column.type';\r\nimport { VNode } from 'vue';\r\nimport { DirectiveBinding } from 'vue/types/options';\r\nimport { Vue } from 'vue-property-decorator';\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nlet _id = 0;\r\n\r\nclass LongPressController {\r\n  id = 0;\r\n  pressEnabled = true;\r\n  pressModel: TableColumn;\r\n  duration = 200;\r\n  _pressing: boolean;\r\n  _isLongPressing: boolean;\r\n  timeout: number;\r\n  mouseX = 0;\r\n  mouseY = 0;\r\n  vnode: VNode = null;\r\n  element: HTMLElement = null;\r\n  handleUp: (event: MouseEvent) => void = null;\r\n  handleDown: (event: MouseEvent) => void = null;\r\n  handleMove: (event: MouseEvent) => void = null;\r\n\r\n  constructor(id: number, vNode: VNode, el: HTMLElement) {\r\n    this.id = id;\r\n    this.vnode = vNode;\r\n    this.element = el;\r\n    this.handleDown = this.onMouseDown.bind(this) as (event: MouseEvent) => void;\r\n    this.handleUp = this.onMouseUp.bind(this) as (event: MouseEvent) => void;\r\n    this.handleMove = this.onMouseMove.bind(this) as (event: MouseEvent) => void;\r\n    el.addEventListener('mousedown', this.handleDown);\r\n  }\r\n\r\n  unsubscribe() {\r\n    document.removeEventListener('mousemove', this.handleMove);\r\n    document.removeEventListener('mouseup', this.handleUp);\r\n  }\r\n\r\n  set pressing(value: boolean) {\r\n    this._pressing = value;\r\n    if (value) {\r\n      this.element.classList.add('press');\r\n    } else {\r\n      this.element.classList.remove('press');\r\n    }\r\n  }\r\n\r\n  get pressing(): boolean {\r\n    return this._pressing;\r\n  }\r\n\r\n  set isLongPressing(value: boolean) {\r\n    this._isLongPressing = value;\r\n    // console.log('set isLongPressing, id, value', this.id, value);\r\n    if (value) {\r\n      this.element.classList.add('longpress');\r\n    } else {\r\n      this.element.classList.remove('longpress');\r\n    }\r\n  }\r\n\r\n  get isLongPressing(): boolean {\r\n    return this._isLongPressing;\r\n  }\r\n\r\n  private onMouseDown(event: MouseEvent): void {\r\n    // don't do right/middle clicks\r\n    if (event.which !== 1 || !this.pressEnabled) {\r\n      return;\r\n    }\r\n\r\n    // don't start drag if its on resize handle\r\n    const target = <HTMLElement>event.target;\r\n    if (target.classList.contains('resize-handle')) {\r\n      return;\r\n    }\r\n\r\n    this.mouseX = event.clientX;\r\n    this.mouseY = event.clientY;\r\n\r\n    this.pressing = true;\r\n    this.isLongPressing = false;\r\n\r\n    document.addEventListener('mouseup', this.handleUp);\r\n\r\n    this.timeout = setTimeout(() => {\r\n      this.isLongPressing = true;\r\n      this.emit('longPressStart', {\r\n        event,\r\n        model: this.pressModel,\r\n      });\r\n\r\n      document.addEventListener('mousemove', this.handleMove);\r\n\r\n      this.loop(event);\r\n    }, this.duration) as unknown as number;\r\n\r\n    this.loop(event);\r\n  }\r\n\r\n  private onMouseUp(): void {\r\n    document.removeEventListener('mousemove', this.handleMove);\r\n    this.endPress();\r\n  }\r\n\r\n  private onMouseMove(event: MouseEvent): void {\r\n    if (this.pressing && !this.isLongPressing) {\r\n      const xThres = Math.abs(event.clientX - this.mouseX) > 10;\r\n      const yThres = Math.abs(event.clientY - this.mouseY) > 10;\r\n\r\n      // console.log('long-press mouse move, id=', this.id);\r\n\r\n      if (xThres || yThres) {\r\n        this.endPress();\r\n      }\r\n    }\r\n  }\r\n\r\n  private loop(event: MouseEvent): void {\r\n    if (this.isLongPressing) {\r\n      this.timeout = setTimeout(() => {\r\n        this.emit('longPressing', {\r\n          event,\r\n          model: this.pressModel,\r\n        });\r\n        this.loop(event);\r\n      }, 50) as unknown as number;\r\n    }\r\n  }\r\n\r\n  private endPress(): void {\r\n    clearTimeout(this.timeout);\r\n    if (this.isLongPressing) {\r\n      this.unsubscribe();\r\n      this.isLongPressing = false;\r\n      this.pressing = false;\r\n\r\n      this.emit('longPressEnd', {\r\n        model: this.pressModel,\r\n      });\r\n    }\r\n  }\r\n\r\n  private emit(name: string, data: unknown) {\r\n    const handlers =\r\n      (this.vnode.data && this.vnode.data.on) || (this.vnode.componentOptions && this.vnode.componentOptions.listeners);\r\n    if (handlers && handlers[name]) {\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\r\n      handlers[name].fns(data);\r\n    }\r\n  }\r\n}\r\n\r\ninterface IDirValue {\r\n  pressModel: TableColumn;\r\n  pressEnabled: boolean;\r\n  duration?: number;\r\n}\r\n\r\nexport interface IHasLongPressController extends HTMLElement {\r\n  __longpress__: LongPressController;\r\n}\r\n\r\nexport default Vue.directive('long-press', {\r\n  bind(el: HTMLElement, binding: DirectiveBinding, vnode: VNode) {\r\n    const ctrl = new LongPressController(_id++, vnode, el);\r\n    const value = binding.value as IDirValue;\r\n    // eslint-disable-next-line no-undefined\r\n    if (value.pressEnabled !== undefined && value.pressEnabled !== null) {\r\n      ctrl.pressEnabled = value.pressEnabled;\r\n    }\r\n    // eslint-disable-next-line no-undefined\r\n    if (value.duration !== undefined && value.duration !== null) {\r\n      ctrl.duration = value.duration;\r\n    }\r\n    ctrl.pressModel = value.pressModel;\r\n    (el as IHasLongPressController).__longpress__ = ctrl;\r\n  },\r\n  unbind(el: Element) {\r\n    if (!el) {\r\n      return;\r\n    }\r\n    const ctrl: LongPressController = (el as IHasLongPressController).__longpress__;\r\n    ctrl.element.removeEventListener('mousedown', ctrl.handleDown);\r\n    ctrl.unsubscribe();\r\n  },\r\n});\r\n","import { VNode } from 'vue';\r\nimport { DirectiveBinding } from 'vue/types/options';\r\nimport { Vue } from 'vue-property-decorator';\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nlet _id = 0;\r\n\r\nclass ResizeableDirectiveController {\r\n  resizeEnabled = true;\r\n  minWidth = 0;\r\n  maxWidth = 0;\r\n  resizing = false;\r\n  element: HTMLElement = null;\r\n  handleUp: (event: MouseEvent) => void = null;\r\n  handleDown: (event: MouseEvent) => void = null;\r\n  handleMove: (event: MouseEvent) => void = null;\r\n  vnode: VNode = null;\r\n  id = 0;\r\n\r\n  constructor(id: number, vNode: VNode, el: HTMLElement) {\r\n    this.id = id;\r\n    this.vnode = vNode;\r\n    this.element = el;\r\n    this.handleDown = this.onMouseDown.bind(this) as (event: MouseEvent) => void;\r\n    this.handleUp = this.onMouseUp.bind(this) as (event: MouseEvent) => void;\r\n  }\r\n\r\n  private onMouseUp() {\r\n    document.removeEventListener('mousemove', this.handleMove);\r\n    if (this.resizing) {\r\n      this.resizing = false;\r\n      // this.vnode.context.$emit('resize', this.element.clientWidth);\r\n      this.emit(this.vnode, 'resize', this.element.clientWidth);\r\n    }\r\n  }\r\n\r\n  private onMouseDown(event: MouseEvent): void {\r\n    const isHandle = (<HTMLElement>event.target).classList.contains('resize-handle');\r\n    const initialWidth = this.element.clientWidth;\r\n    const mouseDownScreenX = event.screenX;\r\n\r\n    if (isHandle) {\r\n      event.stopPropagation();\r\n      this.resizing = true;\r\n      this.handleMove = (e: MouseEvent) => this.move(e, initialWidth, mouseDownScreenX);\r\n      document.addEventListener('mousemove', this.handleMove);\r\n    }\r\n  }\r\n\r\n  private move(event: MouseEvent, initialWidth: number, mouseDownScreenX: number): void {\r\n    if (!this.resizing) {\r\n      return;\r\n    }\r\n    const movementX = event.screenX - mouseDownScreenX;\r\n    const newWidth = initialWidth + movementX;\r\n\r\n    const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\r\n    const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\r\n\r\n    if (overMinWidth && underMaxWidth) {\r\n      this.element.style.width = `${newWidth}px`;\r\n    }\r\n  }\r\n\r\n  private emit(vnode: VNode, name: string, data: unknown) {\r\n    const handlers = (vnode.data && vnode.data.on) || (vnode.componentOptions && vnode.componentOptions.listeners);\r\n    if (handlers && handlers[name]) {\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\r\n      handlers[name].fns(data);\r\n    }\r\n  }\r\n}\r\n\r\ninterface IDirValue {\r\n  resizeEnabled: boolean;\r\n  minWidth?: number;\r\n  maxWidth?: number;\r\n}\r\n\r\nexport interface IHasResizeableDirectiveController extends HTMLElement {\r\n  __resizeable__: ResizeableDirectiveController;\r\n}\r\n\r\nexport default Vue.directive('resizeable', {\r\n  resizing: false,\r\n  bind(el: HTMLElement, binding: DirectiveBinding, vnode: VNode) {\r\n    const ctrl = new ResizeableDirectiveController(_id++, vnode, el);\r\n    const value = binding.value as IDirValue;\r\n    // eslint-disable-next-line no-undefined\r\n    if (value.resizeEnabled !== undefined && value.resizeEnabled !== null) {\r\n      ctrl.resizeEnabled = value.resizeEnabled;\r\n    }\r\n    ctrl.minWidth = value.minWidth;\r\n    ctrl.maxWidth = value.maxWidth;\r\n    (el as IHasResizeableDirectiveController).__resizeable__ = ctrl;\r\n    document.addEventListener('mouseup', ctrl.handleUp);\r\n    el.addEventListener('mousedown', ctrl.handleDown);\r\n  },\r\n  unbind(el: HTMLElement) {\r\n    if (!el) {\r\n      return;\r\n    }\r\n    const ctrl = (el as IHasResizeableDirectiveController).__resizeable__;\r\n    document.removeEventListener('mouseup', ctrl.handleUp);\r\n    el.removeEventListener('mousedown', ctrl.handleDown);\r\n  },\r\n  inserted(el: HTMLElement) {\r\n    const node = document.createElement('span');\r\n    const ctrl = (el as IHasResizeableDirectiveController).__resizeable__;\r\n    if (ctrl.resizeEnabled) {\r\n      node.classList.add('resize-handle');\r\n    } else {\r\n      node.classList.add('resize-handle--not-resizable');\r\n    }\r\n    el.appendChild(node);\r\n  },\r\n});\r\n","import { VNode } from 'vue';\r\nimport { DirectiveBinding } from 'vue/types/options';\r\nimport { Vue } from 'vue-property-decorator';\r\n\r\nclass VisibilityController {\r\n  _isVisible = false;\r\n  timeout: number;\r\n  vnode: VNode = null;\r\n  element: HTMLElement = null;\r\n\r\n  constructor(vNode: VNode, el: HTMLElement) {\r\n    this.vnode = vNode;\r\n    this.element = el;\r\n  }\r\n\r\n  set isVisible(value: boolean) {\r\n    this._isVisible = value;\r\n    if (value) {\r\n      this.element.classList.add('visible');\r\n    } else {\r\n      this.element.classList.remove('visible');\r\n    }\r\n  }\r\n\r\n  get isVisible(): boolean {\r\n    return this._isVisible;\r\n  }\r\n\r\n  stopCheck(): void {\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  onVisibilityChange(visible: boolean): void {\r\n    if (this.isVisible !== visible) {\r\n      this.isVisible = visible;\r\n      this.emit('visible', visible);\r\n    }\r\n  }\r\n\r\n  runCheck(timeout: number): void {\r\n    const check = () => {\r\n      clearTimeout(this.timeout);\r\n      // https://davidwalsh.name/offsetheight-visibility\r\n      const { offsetHeight, offsetWidth } = this.element;\r\n\r\n      if (offsetHeight && offsetWidth) {\r\n        this.onVisibilityChange(true);\r\n      } else {\r\n        this.onVisibilityChange(false);\r\n      }\r\n      this.timeout = setTimeout(() => check(), timeout) as unknown as number;\r\n    };\r\n    this.timeout = setTimeout(() => check()) as unknown as number;\r\n  }\r\n\r\n  private emit(name: string, data: unknown) {\r\n    const handlers =\r\n      (this.vnode.data && this.vnode.data.on) || (this.vnode.componentOptions && this.vnode.componentOptions.listeners);\r\n\r\n    if (handlers && handlers[name]) {\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\r\n      handlers[name].fns(data);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Visibility Observer Directive\r\n *\r\n * Usage:\r\n *\r\n * <div\r\n *   v-visibility-observer\r\n * >\r\n * </div>\r\n *\r\n */\r\nexport default Vue.directive('visibility-observer', {\r\n  resizing: false,\r\n  bind(el: HTMLElement, binding: DirectiveBinding, vnode: VNode) {\r\n    const ctrl = new VisibilityController(vnode, el);\r\n    (el as unknown as { __visibility__: VisibilityController }).__visibility__ = ctrl;\r\n    const b = binding as { value: { on: boolean; timeout: number } };\r\n    if (b?.value?.on) {\r\n      ctrl.runCheck(b?.value?.timeout ?? 1000);\r\n    }\r\n  },\r\n  unbind(el: HTMLElement) {\r\n    if (!el) {\r\n      return;\r\n    }\r\n    const ctrl = (el as unknown as { __visibility__: VisibilityController }).__visibility__;\r\n    ctrl.stopCheck();\r\n  },\r\n});\r\n","/**\r\n * Gets the width of the scrollbar.  Nesc for windows\r\n * http://stackoverflow.com/a/13382873/888165\r\n */\r\nexport class DimensionsHelper {\r\n  getDimensions(element: Element): ClientRect {\r\n    return element.getBoundingClientRect();\r\n  }\r\n}\r\n","/**\r\n * Gets the width of the scrollbar.  Nesc for windows\r\n * http://stackoverflow.com/a/13382873/888165\r\n */\r\nexport class ScrollbarHelper {\r\n  width: number;\r\n  private readonly document: Document;\r\n\r\n  constructor() {\r\n    this.document = window.document;\r\n    this.width = this.getWidth();\r\n  }\r\n\r\n  getWidth(): number {\r\n    const outer: HTMLElement = this.document.createElement('div');\r\n    outer.style.visibility = 'hidden';\r\n    outer.style.width = '100px';\r\n    outer.style['msOverflowStyle'] = 'scrollbar';\r\n    this.document.body.appendChild(outer);\r\n\r\n    const widthNoScroll = outer.offsetWidth;\r\n    outer.style.overflow = 'scroll';\r\n\r\n    const inner = this.document.createElement('div');\r\n    inner.style.width = '100%';\r\n    outer.appendChild(inner);\r\n\r\n    const widthWithScroll = inner.offsetWidth;\r\n    outer.parentNode.removeChild(outer);\r\n\r\n    return widthNoScroll - widthWithScroll;\r\n  }\r\n}\r\n","export enum CheckMode {\r\n  checkIsSelect = 'checkIsSelect',\r\n  checkNoSelect = 'checkNoSelect',\r\n}\r\n","export enum ColumnMode {\r\n  standard = 'standard',\r\n  flex = 'flex',\r\n  force = 'force',\r\n}\r\n","export enum ContextmenuType {\r\n  header = 'header',\r\n  body = 'body',\r\n}\r\n","export enum SelectionType {\r\n  single = 'single',\r\n  singleFocus = 'singleFocus',\r\n  multi = 'multi',\r\n  multiClick = 'multiClick',\r\n  cell = 'cell',\r\n  checkbox = 'checkbox',\r\n}\r\n","export enum SortDirection {\r\n  asc = 'asc',\r\n  desc = 'desc',\r\n}\r\n","export enum SortType {\r\n  single = 'single',\r\n  multi = 'multi',\r\n}\r\n","/**\r\n * Converts strings from something to camel case\r\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\r\n */\r\nexport function camelCase(str: string): string {\r\n  // Replace special characters with a space\r\n  // eslint-disable-next-line optimize-regex/optimize-regex\r\n  str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\r\n  // put a space before an uppercase letter\r\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\r\n\r\n  // Lower case first character and some other stuff\r\n  str = str\r\n    // eslint-disable-next-line optimize-regex/optimize-regex\r\n    .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\r\n    .trim()\r\n    .toLowerCase();\r\n\r\n  // uppercase characters preceded by a space or number\r\n  str = str.replace(/([\\d ]+)([A-Za-z])/g, (a, b, c) => (b as string).trim() + (c as string).toUpperCase());\r\n\r\n  return str;\r\n}\r\n\r\n/**\r\n * Converts strings from camel case to words\r\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\r\n */\r\nexport function deCamelCase(str: string): string {\r\n  return str.replace(/([A-Z])/g, match => ` ${match}`).replace(/^./, match => match.toUpperCase());\r\n}\r\n","import { TableColumn } from 'types/table-column.type';\r\nimport Vue from 'vue';\r\n// import { DataTableColumnDirective } from '../components/columns';\r\nimport { camelCase, deCamelCase } from './camel-case';\r\nimport { getterForProp } from './column-prop-getters';\r\nimport { id } from './id';\r\n\r\n/**\r\n * Sets the column defaults\r\n */\r\nexport function setColumnsDefaults(columns: TableColumn[], vm: Vue): void {\r\n  if (!columns) {\r\n    return;\r\n  }\r\n\r\n  // Only one column should hold the tree view\r\n  // Thus if multiple columns are provided with\r\n  // isTreeColumn as true we take only the first one\r\n  let treeColumnFound = false;\r\n\r\n  for (const column of columns) {\r\n    setColumnDefaults(column, vm);\r\n    if (!('isTreeColumn' in column)) {\r\n      vm.$set(column, 'isTreeColumn', false);\r\n    } else if (column.isTreeColumn && !treeColumnFound) {\r\n      // If the first column with isTreeColumn is true found\r\n      // we mark that treeCoulmn is found\r\n      vm.$set(column, 'isTreeColumn', true);\r\n      treeColumnFound = true;\r\n    } else {\r\n      // After that isTreeColumn property for any other column\r\n      // will be set as false\r\n      vm.$set(column, 'isTreeColumn', false);\r\n    }\r\n  }\r\n}\r\n\r\nexport function setColumnDefaults(column: TableColumn, vm: Vue): void {\r\n  if (!column) {\r\n    return;\r\n  }\r\n\r\n  if (!column.$$id) {\r\n    column.$$id = id();\r\n  }\r\n\r\n  // prop can be numeric; zero is valid not a missing prop\r\n  // translate name => prop\r\n  if (isNullOrUndefined(column.prop) && column.name) {\r\n    column.prop = camelCase(column.name);\r\n  }\r\n\r\n  vm.$set(column, '$$valueGetter', getterForProp(column.prop));\r\n\r\n  // format props if no name passed\r\n  if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\r\n    column.name = deCamelCase(String(column.prop));\r\n  }\r\n\r\n  if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\r\n    column.name = ''; // Fixes IE and Edge displaying `null`\r\n  }\r\n\r\n  if (!('resizeable' in column)) {\r\n    vm.$set(column, 'resizeable', true);\r\n  }\r\n\r\n  if (!('sortable' in column)) {\r\n    vm.$set(column, 'sortable', true);\r\n  }\r\n\r\n  if (!('draggable' in column)) {\r\n    vm.$set(column, 'draggable', true);\r\n  }\r\n\r\n  if (!('visible' in column)) {\r\n    vm.$set(column, 'visible', true);\r\n  }\r\n\r\n  if (!('canAutoResize' in column) || isNullOrUndefined(column.canAutoResize)) {\r\n    column.canAutoResize = true;\r\n  }\r\n\r\n  if (!('width' in column) || !column.width) {\r\n    vm.$set(column, 'width', 150);\r\n  } else {\r\n    vm.$set(column, 'width', column.width);\r\n  }\r\n  vm.$set(column, 'isTreeColumn', column.isTreeColumn);\r\n  vm.$set(column, 'isTarget', isNullOrUndefined(column.isTarget) ? false : column.isTarget);\r\n}\r\n\r\nexport function isNullOrUndefined<T>(value: T | null | undefined): value is null | undefined {\r\n  // eslint-disable-next-line no-undefined\r\n  return value === null || value === undefined;\r\n}\r\n\r\n/**\r\n * Translates templates definitions to objects\r\n */\r\n// export function translateTemplates(templates: DataTableColumnDirective[]): any[] {\r\n//   const result: any[] = [];\r\n\r\n//   for(const temp of templates) {\r\n//     const col: any = {};\r\n\r\n//     const props = Object.getOwnPropertyNames(temp);\r\n//     for(const prop of props) {\r\n//       col[prop] = temp[prop];\r\n//     }\r\n\r\n//     if(temp.headerTemplate) {\r\n//       col.headerTemplate = temp.headerTemplate;\r\n//     }\r\n\r\n//     if(temp.cellTemplate) {\r\n//       col.cellTemplate = temp.cellTemplate;\r\n//     }\r\n\r\n//     if(temp.summaryFunc) {\r\n//       col.summaryFunc = temp.summaryFunc;\r\n//     }\r\n\r\n//     if(temp.summaryTemplate) {\r\n//       col.summaryTemplate = temp.summaryTemplate;\r\n//     }\r\n\r\n//     result.push(col);\r\n//   }\r\n\r\n//   return result;\r\n// }\r\n","// maybe rename this file to prop-getters.ts\r\n\r\nimport { TableColumnProp } from 'types/table-column.type';\r\nimport { isNullOrUndefined } from 'utils/column-helper';\r\n\r\nexport type ValueGetter = (obj: Record<string, unknown>, prop: TableColumnProp) => unknown;\r\n\r\n/**\r\n * Always returns the empty string ''\r\n * @returns {string}\r\n */\r\nexport function emptyStringGetter(): string {\r\n  return '';\r\n}\r\n\r\n/**\r\n * Returns the appropriate getter function for this kind of prop.\r\n * If prop == null, returns the emptyStringGetter.\r\n */\r\nexport function getterForProp(prop: TableColumnProp): ValueGetter {\r\n  if (isNullOrUndefined(prop)) {\r\n    return emptyStringGetter;\r\n  }\r\n\r\n  if (typeof prop === 'number') {\r\n    return numericIndexGetter;\r\n  }\r\n  // deep or simple\r\n  if (prop.indexOf('.') !== -1) {\r\n    return deepValueGetter;\r\n  }\r\n  return shallowValueGetter;\r\n}\r\n\r\n/**\r\n * Returns the value at this numeric index.\r\n * @param row array of values\r\n * @param index numeric index\r\n * @returns {any} or '' if invalid index\r\n */\r\nexport function numericIndexGetter(row: Record<string, unknown>, index: number): unknown {\r\n  if (row === null) {\r\n    return '';\r\n  }\r\n  // mimic behavior of deepValueGetter\r\n  if (!row || index === null) {\r\n    return row;\r\n  }\r\n\r\n  const value = row[index];\r\n  // eslint-disable-next-line no-undefined\r\n  if (value === null || value === undefined) {\r\n    return '';\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * Returns the value of a field.\r\n * (more efficient than deepValueGetter)\r\n * @param obj object containing the field\r\n * @param fieldName field name string\r\n * @returns {unknown}\r\n */\r\nexport function shallowValueGetter(obj: Record<string, unknown>, fieldName: string): unknown {\r\n  if (obj === null) {\r\n    return '';\r\n  }\r\n  if (!obj || !fieldName) {\r\n    return obj;\r\n  }\r\n\r\n  const value = obj[fieldName];\r\n  // eslint-disable-next-line no-undefined\r\n  if (value === null || value === undefined) {\r\n    return '';\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * Returns a deep object given a string. zoo['animal.type']\r\n * @param {object} obj\r\n * @param {string} path\r\n */\r\nexport function deepValueGetter(obj: Record<string, unknown>, path: string): unknown {\r\n  if (obj === null) {\r\n    return '';\r\n  }\r\n  if (!obj || !path) {\r\n    return obj;\r\n  }\r\n\r\n  // check if path matches a root-level field\r\n  // { \"a.b.c\": 123 }\r\n  let current = obj[path];\r\n  // eslint-disable-next-line no-undefined\r\n  if (current !== undefined) {\r\n    return current;\r\n  }\r\n\r\n  current = obj;\r\n  const split = path.split('.');\r\n\r\n  if (split.length) {\r\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\r\n    for (let i = 0; i < split.length; i++) {\r\n      current = current[split[i]] as Record<string, unknown>;\r\n\r\n      // if found undefined, return empty string\r\n      // eslint-disable-next-line no-undefined\r\n      if (current === undefined || current === null) {\r\n        return '';\r\n      }\r\n    }\r\n  }\r\n  return current;\r\n}\r\n","import { TableColumn } from 'types/table-column.type';\r\n\r\nexport interface IColumnsWidth {\r\n  left: number;\r\n  center: number;\r\n  right: number;\r\n  total: number;\r\n}\r\n\r\nexport interface IColumnsByPinRecord {\r\n  type: 'left' | 'center' | 'right';\r\n  columns: TableColumn[];\r\n}\r\n\r\n/**\r\n * Returns the columns by pin.\r\n */\r\nexport interface IColumnsByPin {\r\n  left: TableColumn[];\r\n  center: TableColumn[];\r\n  right: TableColumn[];\r\n}\r\n\r\nexport function columnsByPin(cols: TableColumn[]): IColumnsByPin {\r\n  const ret: { left: TableColumn[]; center: TableColumn[]; right: TableColumn[] } = {\r\n    left: [],\r\n    center: [],\r\n    right: [],\r\n  };\r\n\r\n  if (cols) {\r\n    for (const col of cols) {\r\n      if (col.frozenLeft) {\r\n        ret.left.push(col);\r\n      } else if (col.frozenRight) {\r\n        ret.right.push(col);\r\n      } else {\r\n        ret.center.push(col);\r\n      }\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Returns the widths of all group sets of a column\r\n */\r\nexport function columnGroupWidths(groups: IColumnsByPin, all: TableColumn[], tableWidth: number): IColumnsWidth {\r\n  const result = {\r\n    left: columnTotalWidth(groups.left),\r\n    center: columnTotalWidth(groups.center),\r\n    right: columnTotalWidth(groups.right),\r\n    total: Math.floor(columnTotalWidth(all)),\r\n  };\r\n  if (tableWidth > result.total) {\r\n    result.center += tableWidth - result.total;\r\n    result.total = tableWidth;\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Calculates the total width of all columns and their groups\r\n */\r\nexport function columnTotalWidth(columns: TableColumn[]): number {\r\n  let totalWidth = 0;\r\n\r\n  if (columns) {\r\n    for (const c of columns) {\r\n      if (c.hidden || !c.visible) {\r\n        continue;\r\n      }\r\n      // const has = Boolean(prop && c[prop]);\r\n      // const width = c.hidden ? 0 : has ? c[prop] : c.width;\r\n      let width = c.hidden || !c.visible ? 0 : c.width || c.$$oldWidth;\r\n      if (typeof width === 'string') {\r\n        width = parseFloat(width);\r\n      }\r\n      totalWidth = totalWidth + width;\r\n    }\r\n  }\r\n\r\n  return totalWidth;\r\n}\r\n\r\n/**\r\n * Calculates the total width of all columns and their groups\r\n */\r\nexport function columnsTotalWidth(columns: TableColumn[] /* , prop?: any */): number {\r\n  let totalWidth = 0;\r\n\r\n  for (const column of columns) {\r\n    // const has = prop && column[prop];\r\n    // totalWidth = totalWidth + (has ? column[prop] : column.width);\r\n    totalWidth = totalWidth + column.width;\r\n  }\r\n\r\n  return totalWidth;\r\n}\r\n\r\nexport function columnsByPinArr(val: IColumnsByPin): Array<IColumnsByPinRecord> {\r\n  const colsByPinArr: Array<{ type: 'left' | 'center' | 'right'; columns: TableColumn[] }> = [];\r\n  const colsByPin = val; // columnsByPin(val);\r\n\r\n  colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\r\n  colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\r\n  colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\r\n\r\n  return colsByPinArr;\r\n}\r\n","export function isArrayEqual(array1: unknown[], array2: unknown[]): boolean {\r\n  // if the other array is a falsy value, return\r\n  if (!array1 || !array2 || !Array.isArray(array1) || !Array.isArray(array2)) {\r\n    return false;\r\n  }\r\n\r\n  // compare lengths - can save a lot of time\r\n  if (array1.length !== array2.length) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0, l = array1.length; i < l; i++) {\r\n    // Check if we have nested arrays\r\n    if (array1[i] instanceof Array && array2[i] instanceof Array) {\r\n      // recurse into the nested arrays\r\n      if (!isArrayEqual(array1[i] as Array<unknown>, array2[i] as Array<unknown>)) {\r\n        return false;\r\n      }\r\n    } else if (array1[i] !== array2[i]) {\r\n      // Warning - two different object instances will never be equal: {x:20} != {x:20}\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","/**\r\n * Creates a unique object id.\r\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\r\n */\r\nexport function id(): string {\r\n  // eslint-disable-next-line no-bitwise\r\n  return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\r\n}\r\n","export enum Keys {\r\n  up = 38,\r\n  down = 40,\r\n  return = 13,\r\n  escape = 27,\r\n  left = 37,\r\n  right = 39,\r\n  pageUp = 33,\r\n  pageDown = 34,\r\n}\r\n","import { TableColumn } from 'types/table-column.type';\r\nimport { columnsByPin, columnsTotalWidth, IColumnsByPin } from './column';\r\n\r\n/**\r\n * Calculates the Total Flex Grow\r\n */\r\nfunction getTotalFlexGrow(columns: TableColumn[]) {\r\n  let totalFlexGrow = 0;\r\n\r\n  for (const c of columns) {\r\n    totalFlexGrow += c.flexGrow || 0;\r\n  }\r\n\r\n  return totalFlexGrow;\r\n}\r\n\r\n/**\r\n * Adjusts the column widths.\r\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\r\n */\r\nexport function adjustColumnWidths(allColumns: TableColumn[] = [], expectedWidth: number): void {\r\n  // if (allColumns && allColumns.length) {\r\n  //   allColumns = allColumns.filter(c => c.visible && !c.hidden);\r\n  // }\r\n  const hiddenColumns: TableColumn[] = [];\r\n  allColumns.forEach(col => {\r\n    col.hidden = false;\r\n    const width = calcRealWidth(col);\r\n    if (width !== null && width < 10) {\r\n      hiddenColumns.push(col);\r\n      col.hidden = true;\r\n      if (!col.$$oldWidth) {\r\n        col.$$oldWidth = col.width;\r\n      }\r\n      col.width = 0;\r\n    }\r\n  });\r\n  allColumns = allColumns.filter(c => c.visible && !c.hidden);\r\n\r\n  const columnsWidth = columnsTotalWidth(allColumns);\r\n  const totalFlexGrow = getTotalFlexGrow(allColumns);\r\n  const colsByGroup = columnsByPin(allColumns);\r\n\r\n  if (columnsWidth !== expectedWidth) {\r\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\r\n  }\r\n}\r\n\r\n/**\r\n * Resizes columns based on the flexGrow property, while respecting manually set widths\r\n */\r\nfunction scaleColumns(colsByGroup: IColumnsByPin, maxWidth: number, totalFlexGrow: number): void {\r\n  // calculate total width and flexgrow points for coulumns that can be resized\r\n  let column: TableColumn;\r\n  for (const attr in colsByGroup) {\r\n    for (column of colsByGroup[attr]) {\r\n      if (!column.canAutoResize) {\r\n        maxWidth -= column.width;\r\n        totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\r\n      } else {\r\n        column.width = 0;\r\n      }\r\n    }\r\n  }\r\n  const hasMinWidth = {};\r\n  let remainingWidth = maxWidth;\r\n\r\n  // resize columns until no width is left to be distributed\r\n  do {\r\n    const widthPerFlexPoint = remainingWidth / totalFlexGrow;\r\n    remainingWidth = 0;\r\n    for (const attr in colsByGroup) {\r\n      for (column of colsByGroup[attr]) {\r\n        // if the column can be resize and it hasn't reached its minimum width yet\r\n        if (column.canAutoResize) {\r\n          if (!hasMinWidth[column.prop]) {\r\n            const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\r\n            if (column.minWidth && newWidth < column.minWidth) {\r\n              remainingWidth += newWidth - column.minWidth;\r\n              column.width = column.minWidth;\r\n              hasMinWidth[column.prop] = true;\r\n            } else {\r\n              column.width = newWidth;\r\n            }\r\n          }\r\n        } else if (column.$$oldWidth) {\r\n          column.width = column.$$oldWidth;\r\n        }\r\n      }\r\n    }\r\n  } while (remainingWidth !== 0);\r\n}\r\n\r\nfunction calcRealWidth(column: TableColumn): number {\r\n  if (!column.element) {\r\n    return null;\r\n  }\r\n  let w = (column.element as HTMLElement).offsetWidth;\r\n  // eslint-disable-next-line no-undefined\r\n  if (column.realWidth !== null || column.realWidth !== undefined) {\r\n    return Math.max(w, column.realWidth);\r\n  }\r\n  if (!w || w < 0) {\r\n    return w;\r\n  }\r\n  w = 0;\r\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\r\n  for (let i = 0; i < column.element.children.length; i++) {\r\n    const el = column.element.children[i];\r\n    w = Math.max(w, (el as HTMLElement).offsetWidth);\r\n  }\r\n  return w;\r\n}\r\n\r\n/**\r\n * Forces the width of the columns to\r\n * distribute equally but overflowing when necessary\r\n *\r\n * Rules:\r\n *\r\n *  - If combined withs are less than the total width of the grid,\r\n *    proportion the widths given the min / max / normal widths to fill the width.\r\n *\r\n *  - If the combined widths, exceed the total width of the grid,\r\n *    use the standard widths.\r\n *\r\n *  - If a column is resized, it should always use that width\r\n *\r\n *  - The proportional widths should never fall below min size if specified.\r\n *\r\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\r\n *    the width should use the original width; not the newly proportioned widths.\r\n */\r\nexport function forceFillColumnWidths(\r\n  allColumns: TableColumn[],\r\n  expectedWidth: number,\r\n  startIdx: number,\r\n  allowBleed: boolean,\r\n  defaultColWidth: number = 300\r\n): void {\r\n  // const hiddenColumns = allColumns.filter(c => c.hidden);\r\n  // for (const column of hiddenColumns) {\r\n  //   if(!column.$$oldWidth) {\r\n  //     column.$$oldWidth = column.width;\r\n  //   }\r\n  //   column.width = 0;\r\n  // }\r\n  const hiddenColumns: TableColumn[] = [];\r\n  allColumns.forEach(col => {\r\n    col.hidden = false;\r\n    const width = calcRealWidth(col);\r\n    if (width !== null && width < 10) {\r\n      hiddenColumns.push(col);\r\n      col.hidden = true;\r\n      if (!col.$$oldWidth) {\r\n        col.$$oldWidth = col.width;\r\n      }\r\n      col.width = 0;\r\n    } else if (!col.width && col.$$oldWidth) {\r\n      col.width = col.$$oldWidth;\r\n    }\r\n  });\r\n\r\n  allColumns = allColumns.filter(c => c.visible && !c.hidden);\r\n  const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter(c => c.canAutoResize !== false);\r\n  const averageColumnWidth = expectedWidth / columnsToResize.length;\r\n\r\n  for (const column of columnsToResize) {\r\n    if (!column.$$oldWidth) {\r\n      column.$$oldWidth = column.width;\r\n    }\r\n    column.width = averageColumnWidth;\r\n  }\r\n\r\n  let additionWidthPerColumn = 0;\r\n  let exceedsWindow = false;\r\n  let contentWidth = getContentWidth(allColumns, defaultColWidth);\r\n  let remainingWidth = expectedWidth - contentWidth;\r\n  const columnsProcessed: TableColumn[] = [];\r\n\r\n  // This loop takes care of the\r\n  do {\r\n    additionWidthPerColumn = remainingWidth / columnsToResize.length;\r\n    exceedsWindow = contentWidth >= expectedWidth;\r\n\r\n    for (const column of columnsToResize) {\r\n      if (exceedsWindow && allowBleed) {\r\n        column.width = column.$$oldWidth || column.width || defaultColWidth;\r\n      } else {\r\n        const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\r\n\r\n        if (column.minWidth && newSize < column.minWidth) {\r\n          column.width = column.minWidth;\r\n          columnsProcessed.push(column);\r\n        } else if (column.maxWidth && newSize > column.maxWidth) {\r\n          column.width = column.maxWidth;\r\n          columnsProcessed.push(column);\r\n        } else {\r\n          column.width = newSize;\r\n        }\r\n      }\r\n\r\n      column.width = Math.max(0, column.width);\r\n    }\r\n\r\n    contentWidth = getContentWidth(allColumns);\r\n    remainingWidth = expectedWidth - contentWidth;\r\n    removeProcessedColumns(columnsToResize, columnsProcessed);\r\n  } while (remainingWidth > 0 && columnsToResize.length !== 0);\r\n}\r\n\r\n/**\r\n * Remove the processed columns from the current active columns.\r\n */\r\nfunction removeProcessedColumns(columnsToResize: TableColumn[], columnsProcessed: TableColumn[]) {\r\n  for (const column of columnsProcessed) {\r\n    const index = columnsToResize.indexOf(column);\r\n    columnsToResize.splice(index, 1);\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the width of the columns\r\n */\r\nfunction getContentWidth(allColumns: TableColumn[], defaultColWidth: number = 300): number {\r\n  let contentWidth = 0;\r\n  for (const column of allColumns) {\r\n    contentWidth += column.width || defaultColWidth;\r\n  }\r\n  return contentWidth;\r\n}\r\n","/* eslint-disable no-undefined */\r\nimport { camelCase } from './camel-case';\r\n\r\nconst cache: Record<string, string> = {};\r\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\r\n\r\n// Get Prefix\r\n// http://davidwalsh.name/vendor-prefix\r\n// eslint-disable-next-line prettier/prettier\r\nconst prefix = (function () {\r\n  const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\r\n  let match: RegExpMatchArray = null;\r\n  if (styles) {\r\n    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\r\n    match = Object.keys(styles)\r\n      .join('')\r\n      .match(/-(moz|webkit|ms)-/);\r\n  }\r\n  // const match: CSSStyleDeclaration = typeof styles !== 'undefined' ?\r\n  //   Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) : null;\r\n  const pre = match !== null ? match[1] : undefined;\r\n  const dom = typeof pre !== 'undefined' ? new RegExp('(' + pre + ')', 'i').exec('WebKit|Moz|MS|O')[1] : undefined;\r\n\r\n  return dom\r\n    ? {\r\n        dom,\r\n        lowercase: pre,\r\n        css: `-${pre}-`,\r\n        js: pre[0].toUpperCase() + pre.substr(1),\r\n      }\r\n    : undefined;\r\n})();\r\n\r\nexport function getVendorPrefixedName(property: string): string {\r\n  const name = camelCase(property);\r\n\r\n  if (!cache[name]) {\r\n    if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\r\n      cache[name] = prefix.css + property;\r\n    } else if (testStyle[property] !== undefined) {\r\n      cache[name] = property;\r\n    }\r\n  }\r\n\r\n  return cache[name];\r\n}\r\n","import { IGroupedRows } from 'types/grouped-rows';\r\n\r\n/**\r\n * This object contains the cache of the various row heights that are present inside\r\n * the data table.   Its based on Fenwick tree data structure that helps with\r\n * querying sums that have time complexity of log n.\r\n *\r\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\r\n * https://github.com/mikolalysenko/fenwick-tree\r\n *\r\n */\r\ninterface IRowsHeightCache {\r\n  rows: Record<string, unknown>[];\r\n  rowHeight: number | ((row: Record<string, unknown>, index?: number) => number);\r\n  rowDetailHeight: number | ((row: Record<string, unknown>, index?: number) => number);\r\n  groupRowHeight: number | ((row: Record<string, unknown>, index?: number) => number);\r\n  externalVirtual: boolean;\r\n  rowCount: number;\r\n  rowIndexes: Map<Record<string, unknown>, number>;\r\n  rowExpansions: Map<Record<string, unknown> | IGroupedRows, boolean>;\r\n}\r\n\r\nexport class RowHeightCache {\r\n  /**\r\n   * Tree Array stores the cumulative information of the row heights to perform efficient\r\n   * range queries and updates.  Currently the tree is initialized to the base row\r\n   * height instead of the detail row height.\r\n   */\r\n  // private treeArray: number[] = [];\r\n  private heights: Array<{ accumulator: number; height: number }> = [];\r\n\r\n  /**\r\n   * Clear the Tree array.\r\n   */\r\n  clearCache(): void {\r\n    // this.treeArray = [];\r\n    this.heights = [];\r\n  }\r\n\r\n  /**\r\n   * Initialize the Fenwick tree with row Heights.\r\n   *\r\n   * @param rows The array of rows which contain the expanded status.\r\n   * @param rowHeight The row height.\r\n   * @param rowDetailHeight The detail row height.\r\n   */\r\n  initCache(details: IRowsHeightCache): void {\r\n    const { rows, rowHeight, rowDetailHeight, groupRowHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } =\r\n      details;\r\n\r\n    if (typeof rowHeight !== 'function' && isNaN(rowHeight)) {\r\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\r\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\r\n    }\r\n\r\n    // Add this additional guard in case rowDetailHeight is set to 'auto' as it wont work.\r\n    if (typeof rowDetailHeight !== 'function' && isNaN(rowDetailHeight)) {\r\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'rowDetailHeight' is a\r\n        valid number or function value: (${rowDetailHeight}) when 'scrollbarV' is enabled.`);\r\n    }\r\n\r\n    const n = externalVirtual ? rowCount : rows.length;\r\n    // this.treeArray = new Array(n);\r\n    this.heights = new Array<{ accumulator: number; height: number }>(n);\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      // this.treeArray[i] = 0;\r\n      this.heights[i] = null;\r\n    }\r\n\r\n    let accumulator = 0;\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const row = rows[i];\r\n      let currentRowHeight: number;\r\n      if (row && row.__isGroup) {\r\n        if (typeof groupRowHeight === 'function') {\r\n          currentRowHeight = groupRowHeight(row);\r\n        } else {\r\n          currentRowHeight = groupRowHeight;\r\n        }\r\n      } else if (typeof rowHeight === 'function') {\r\n        currentRowHeight = rowHeight(row);\r\n      } else {\r\n        currentRowHeight = rowHeight;\r\n      }\r\n\r\n      // Add the detail row height to the already expanded rows.\r\n      // This is useful for the table that goes through a filter or sort.\r\n      const expanded = rowExpansions.get(row);\r\n      if (row && expanded) {\r\n        if (typeof rowDetailHeight === 'function') {\r\n          const index = rowIndexes.get(row);\r\n          currentRowHeight += rowDetailHeight(row, index);\r\n        } else {\r\n          currentRowHeight += rowDetailHeight;\r\n        }\r\n      }\r\n      // this.updateTree(i, currentRowHeight);\r\n      accumulator += currentRowHeight;\r\n      this.heights[i] = { accumulator, height: currentRowHeight };\r\n    }\r\n    // this.heights = this.initHeights(details);\r\n  }\r\n\r\n  /**\r\n   * Given the ScrollY position i.e. sum, provide the rowIndex\r\n   * that is present in the current view port.  Below handles edge cases.\r\n   */\r\n  getRowIndex(scrollY: number): number {\r\n    if (scrollY === 0) {\r\n      return 0;\r\n    }\r\n    const result = this.calcRowIndex(scrollY);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * When a row is expanded or rowHeight is changed, update the height.  This can\r\n   * be utilized in future when Angular Data table supports dynamic row heights.\r\n   */\r\n  update(atRowIndex: number, byRowHeight: number): void {\r\n    if (!this.heights || !this.heights.length) {\r\n      return;\r\n      // throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\r\n      //   Row Height cache not initialized.`);\r\n    }\r\n\r\n    const n = this.heights.length;\r\n\r\n    while (atRowIndex < n) {\r\n      this.heights[atRowIndex].accumulator += byRowHeight;\r\n      atRowIndex++;\r\n    }\r\n  }\r\n\r\n  // update(atRowIndex: number, byRowHeight: number): void {\r\n  //   if (!this.treeArray.length) {\r\n  //     throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\r\n  //       Row Height cache not initialized.`);\r\n  //   }\r\n\r\n  //   const n = this.treeArray.length;\r\n  //   atRowIndex |= 0;\r\n\r\n  //   while(atRowIndex < n) {\r\n  //     this.treeArray[atRowIndex] += byRowHeight;\r\n  //     atRowIndex |= (atRowIndex + 1);\r\n  //   }\r\n  // }\r\n\r\n  /**\r\n   * Range Sum query from 1 to the rowIndex\r\n   */\r\n  query(atIndex: number): number {\r\n    if (atIndex < 0) {\r\n      return 0;\r\n    }\r\n    return this.heights[atIndex]?.accumulator;\r\n  }\r\n\r\n  queryWithHeight(atIndex: number): { offsetY: number; height: number } {\r\n    if (atIndex < 0) {\r\n      return null;\r\n    }\r\n    const result = this.heights[atIndex];\r\n    if (!result) {\r\n      return null;\r\n    }\r\n    return { offsetY: result.accumulator, height: result.height };\r\n  }\r\n\r\n  // query(atIndex: number): number {\r\n  //   if (!this.treeArray.length) {\r\n  //     throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\r\n  //   }\r\n\r\n  //   let sum = 0;\r\n  //   atIndex |= 0;\r\n\r\n  //   while(atIndex >= 0) {\r\n  //     sum += this.treeArray[atIndex];\r\n  //     atIndex = (atIndex & (atIndex + 1)) - 1;\r\n  //   }\r\n\r\n  //   return sum;\r\n  // }\r\n\r\n  /**\r\n   * Find the total height between 2 row indexes\r\n   */\r\n  queryBetween(atIndexA: number, atIndexB: number): number {\r\n    return this.query(atIndexB) - this.query(atIndexA - 1);\r\n  }\r\n\r\n  /**\r\n   * Given the ScrollY position i.e. sum, provide the rowIndex\r\n   * that is present in the current view port.\r\n   */\r\n  private calcRowIndex(sum: number): number {\r\n    if (!this.heights.length) {\r\n      return 0;\r\n    }\r\n\r\n    if (this.heights[this.heights.length - 1].accumulator < sum) {\r\n      return this.heights.length;\r\n    }\r\n\r\n    let pos = -1;\r\n    const dataLength = this.heights.length;\r\n\r\n    for (let i = 0; i < dataLength; i++) {\r\n      if (this.heights[i].accumulator >= sum) {\r\n        pos = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return pos;\r\n  }\r\n\r\n  // private calcRowIndex(sum: number): number {\r\n  //   if(!this.treeArray.length) return 0;\r\n\r\n  //   let pos = -1;\r\n  //   const dataLength = this.treeArray.length;\r\n\r\n  //   // Get the highest bit for the block size.\r\n  //   const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\r\n\r\n  //   for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\r\n  //     const nextPos = pos + blockSize;\r\n  //     if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\r\n  //       sum -= this.treeArray[nextPos];\r\n  //       pos = nextPos;\r\n  //     }\r\n  //   }\r\n\r\n  //   return pos + 1;\r\n  // }\r\n\r\n  // private initHeights(details: any) {\r\n  //   const { rows, rowHeight, rowDetailHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } = details;\r\n  //   const isFn = typeof rowHeight === 'function';\r\n  //   const isDetailFn = typeof rowDetailHeight === 'function';\r\n\r\n  //   if (!isFn && isNaN(rowHeight)) {\r\n  //     throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\r\n  //       valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\r\n  //   }\r\n\r\n  //   // Add this additional guard in case rowDetailHeight is set to 'auto' as it wont work.\r\n  //   if (!isDetailFn && isNaN(rowDetailHeight)) {\r\n  //     throw new Error(`Row Height cache initialization failed. Please ensure that 'rowDetailHeight' is a\r\n  //       valid number or function value: (${rowDetailHeight}) when 'scrollbarV' is enabled.`);\r\n  //   }\r\n  //   const n = externalVirtual ? rowCount : rows.length;\r\n  //   const heights = new Array(n);\r\n\r\n  //   let accumulator = 0;\r\n  //   for (let i = 0; i < n; ++i) {\r\n  //     const row = rows[i];\r\n  //     let currentRowHeight = rowHeight;\r\n  //     if(isFn) {\r\n  //       currentRowHeight = rowHeight(row);\r\n  //     }\r\n\r\n  //     // Add the detail row height to the already expanded rows.\r\n  //     // This is useful for the table that goes through a filter or sort.\r\n  //     const expanded = rowExpansions.get(row);\r\n  //     if(row && expanded === 1) {\r\n  //       if(isDetailFn) {\r\n  //         const index = rowIndexes.get(row);\r\n  //         currentRowHeight += rowDetailHeight(row, index);\r\n  //       } else {\r\n  //         currentRowHeight += rowDetailHeight;\r\n  //       }\r\n  //     }\r\n  //     accumulator += currentRowHeight;\r\n  //     heights[i] = { accumulator, height: currentRowHeight };\r\n  //   }\r\n  //   return heights;\r\n  // }\r\n}\r\n","import { SortType } from 'types/sort.type';\r\nimport { SortDirection } from 'types/sort-direction.type';\r\nimport { ISortPropDir } from 'types/sort-prop-dir.type';\r\nimport { TableColumn, TComparator } from 'types/table-column.type';\r\nimport { getterForProp } from './column-prop-getters';\r\n/**\r\n * Gets the next sort direction\r\n */\r\nexport function nextSortDir(sortType: SortType, current: SortDirection): SortDirection | undefined {\r\n  if (sortType === SortType.single) {\r\n    if (current === SortDirection.asc) {\r\n      return SortDirection.desc;\r\n    }\r\n    return SortDirection.asc;\r\n  }\r\n  if (!current) {\r\n    return SortDirection.asc;\r\n  }\r\n  if (current === SortDirection.asc) {\r\n    return SortDirection.desc;\r\n  }\r\n  if (current === SortDirection.desc) {\r\n    // eslint-disable-next-line no-undefined\r\n    return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Adapted from fueld-ui on 6/216\r\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\r\n */\r\nexport function orderByComparator(a: unknown, b: unknown): number {\r\n  if (a === null || typeof a === 'undefined') {\r\n    a = 0;\r\n  }\r\n  if (b === null || typeof b === 'undefined') {\r\n    b = 0;\r\n  }\r\n  if (a instanceof Date && b instanceof Date) {\r\n    if (a < b) {\r\n      return -1;\r\n    }\r\n    if (a > b) {\r\n      return 1;\r\n    }\r\n  } else if (\r\n    isNaN(parseFloat(a as string)) ||\r\n    !isFinite(a as number) ||\r\n    isNaN(parseFloat(b as string)) ||\r\n    !isFinite(b as number)\r\n  ) {\r\n    // Convert to string in case of a=0 or b=0\r\n    a = String(a);\r\n    b = String(b);\r\n    // Isn't a number so lowercase the string to properly compare\r\n    if ((a as string).toLowerCase() < (b as string).toLowerCase()) {\r\n      return -1;\r\n    }\r\n    if ((a as string).toLowerCase() > (b as string).toLowerCase()) {\r\n      return 1;\r\n    }\r\n  } else {\r\n    // Parse strings as numbers to compare properly\r\n    if (parseFloat(a as string) < parseFloat(b as string)) {\r\n      return -1;\r\n    }\r\n    if (parseFloat(a as string) > parseFloat(b as string)) {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  // equal each other\r\n  return 0;\r\n}\r\n\r\n/**\r\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\r\n * does not sort the `rows` argument in place\r\n */\r\nexport function sortRows(\r\n  rows: Record<string, unknown>[],\r\n  columns: TableColumn[],\r\n  dirs: ISortPropDir[]\r\n): Record<string, unknown>[] {\r\n  if (!rows) {\r\n    return [];\r\n  }\r\n  if (!dirs || !dirs.length) {\r\n    return [...rows];\r\n  }\r\n\r\n  /**\r\n   * record the row ordering of results from prior sort operations (if applicable)\r\n   * this is necessary to guarantee stable sorting behavior\r\n   */\r\n  const rowToIndexMap = new Map<Record<string, unknown>, number>();\r\n  rows.forEach((row, index) => rowToIndexMap.set(row, index));\r\n  const temp = [...rows];\r\n  const cols: Record<string, TComparator> = {};\r\n  if (Array.isArray(columns)) {\r\n    columns.forEach(col => {\r\n      if (col.comparator && typeof col.comparator === 'function') {\r\n        cols[col.prop] = col.comparator;\r\n      }\r\n    });\r\n  }\r\n\r\n  // cache valueGetter and compareFn so that they\r\n  // do not need to be looked-up in the sort function body\r\n  const cachedDirs = dirs.map(dir => {\r\n    const prop = dir.prop;\r\n    return {\r\n      prop,\r\n      dir: dir.dir,\r\n      valueGetter: getterForProp(prop),\r\n      compareFn: cols[prop] || orderByComparator,\r\n    };\r\n  });\r\n\r\n  return temp.sort((rowA: Record<string, unknown>, rowB: Record<string, unknown>) => {\r\n    for (const cachedDir of cachedDirs) {\r\n      // Get property and valuegetters for column to be sorted\r\n      const { prop, valueGetter } = cachedDir;\r\n      // Get A and B cell values from rows based on properties of the columns\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n      const propA = valueGetter(rowA, prop);\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n      const propB = valueGetter(rowB, prop);\r\n\r\n      // Compare function gets five parameters:\r\n      // Two cell values to be compared as propA and propB\r\n      // Two rows corresponding to the cells as rowA and rowB\r\n      // Direction of the sort for this column as SortDirection\r\n      // Compare can be a standard JS comparison function (a,b) => -1|0|1\r\n      // as additional parameters are silently ignored. The whole row and sort\r\n      // direction enable more complex sort logic.\r\n      const comparison =\r\n        cachedDir.dir !== SortDirection.desc\r\n          ? cachedDir.compareFn(propA as string, propB as string, rowA, rowB, cachedDir.dir)\r\n          : -cachedDir.compareFn(propA as string, propB as string, rowA, rowB, cachedDir.dir);\r\n\r\n      // Don't return 0 yet in case of needing to sort by next property\r\n      if (comparison !== 0) {\r\n        return comparison;\r\n      }\r\n    }\r\n\r\n    if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB))) {\r\n      return 0;\r\n    }\r\n\r\n    /**\r\n     * all else being equal, preserve original order of the rows (stable sort)\r\n     */\r\n    return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\r\n  });\r\n}\r\n","/**\r\n * Throttle a function\r\n */\r\nexport function throttle(\r\n  func: (...args: Array<unknown>) => unknown,\r\n  wait: number,\r\n  options?: { leading?: boolean; trailing?: boolean }\r\n): (...args: Array<unknown>) => unknown {\r\n  options = options || {};\r\n  let context: unknown;\r\n  let args: IArguments;\r\n  let result: unknown;\r\n  let timeout: number = null;\r\n  let previous = 0;\r\n\r\n  function later() {\r\n    previous = options.leading === false ? 0 : Number(new Date());\r\n    timeout = null;\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n    result = func.apply(context, args);\r\n  }\r\n\r\n  // eslint-disable-next-line prettier/prettier\r\n  return function (this: unknown) {\r\n    const now = Number(new Date());\r\n\r\n    if (!previous && options.leading === false) {\r\n      previous = now;\r\n    }\r\n\r\n    const remaining = wait - (now - previous);\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n    context = this;\r\n    // eslint-disable-next-line prefer-rest-params\r\n    args = arguments;\r\n\r\n    if (remaining <= 0) {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n      previous = now;\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n      result = func.apply(context, args);\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining) as unknown as number;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return result;\r\n  };\r\n}\r\n\r\n/**\r\n * Throttle decorator\r\n *\r\n *  class MyClass {\r\n *    throttleable(10)\r\n *    myFn() { ... }\r\n *  }\r\n */\r\nexport function throttleable(duration: number, options?: { leading?: boolean; trailing?: boolean }) {\r\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n  return function innerDecorator(\r\n    target: unknown,\r\n    key: PropertyKey,\r\n    descriptor: PropertyDescriptor\r\n  ): PropertyDescriptor {\r\n    return {\r\n      configurable: true,\r\n      enumerable: descriptor.enumerable,\r\n      get: function getter() {\r\n        Object.defineProperty(this, key, {\r\n          configurable: true,\r\n          enumerable: descriptor.enumerable,\r\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n          value: throttle(descriptor.value as (...args: Array<unknown>) => unknown, duration, options),\r\n        });\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\r\n        return this[key];\r\n      },\r\n    };\r\n  };\r\n}\r\n","/* eslint-disable no-undefined */\r\nimport { camelCase } from './camel-case';\r\nimport { getVendorPrefixedName } from './prefixes';\r\n\r\n// browser detection and prefixing tools\r\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\r\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\r\nconst hasCSSTransforms = typeof window !== 'undefined' ? Boolean(getVendorPrefixedName('transform')) : undefined;\r\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? Boolean(getVendorPrefixedName('perspective')) : undefined;\r\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\r\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\r\n\r\nexport function translateXY(styles: Record<string, string>, x: number, y: number): void {\r\n  if (typeof transform !== 'undefined' && hasCSSTransforms) {\r\n    if (!isSafari && hasCSS3DTransforms) {\r\n      styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\r\n      styles[backfaceVisibility] = 'hidden';\r\n    } else {\r\n      styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\r\n    }\r\n  } else {\r\n    styles.top = `${y}px`;\r\n    styles.left = `${x}px`;\r\n  }\r\n}\r\n","import { SortDirection } from 'types/sort-direction.type';\r\nimport { ISortPropDir } from 'types/sort-prop-dir.type';\r\nimport { orderByComparator } from 'utils/sort';\r\nimport { TableColumn, TableColumnProp, TComparator } from '../types/table-column.type';\r\nimport { getterForProp } from './column-prop-getters';\r\n\r\nexport type OptionalValueGetter = (row: Record<string, unknown>) => unknown | undefined;\r\nexport function optionalGetterForProp(prop: TableColumnProp): OptionalValueGetter {\r\n  return prop && (row => getterForProp(prop)(row, prop));\r\n}\r\n\r\n/**\r\n * This functions rearrange items by their parents\r\n * Also sets the level value to each of the items\r\n *\r\n * Note: Expecting each item has a property called parentId\r\n * Note: This algorithm will fail if a list has two or more items with same ID\r\n * NOTE: This algorithm will fail if there is a deadlock of relationship\r\n *\r\n * For example,\r\n *\r\n * Input\r\n *\r\n * id -> parent\r\n * 1  -> 0\r\n * 2  -> 0\r\n * 3  -> 1\r\n * 4  -> 1\r\n * 5  -> 2\r\n * 7  -> 8\r\n * 6  -> 3\r\n *\r\n *\r\n * Output\r\n * id -> level\r\n * 1      -> 0\r\n * --3    -> 1\r\n * ----6  -> 2\r\n * --4    -> 1\r\n * 2      -> 0\r\n * --5    -> 1\r\n * 7     -> 8\r\n *\r\n *\r\n * @param rows\r\n *\r\n */\r\nexport function groupRowsByParents(\r\n  rows: Array<{ level: number; treeStatus?: string }>,\r\n  from?: OptionalValueGetter,\r\n  to?: OptionalValueGetter,\r\n  columns?: TableColumn[],\r\n  sortDirs?: ISortPropDir[],\r\n  lazyTree: boolean = false\r\n): Record<string, unknown>[] {\r\n  if (!rows) {\r\n    return rows;\r\n  }\r\n  if (from && to) {\r\n    const nodeById: Record<string | number, TreeNode> = {};\r\n    const l = rows.length;\r\n    let node: TreeNode | null = null;\r\n\r\n    nodeById[0] = new TreeNode(); // that's the root node\r\n\r\n    const uniqIDs: Array<unknown> = rows.reduce((arr, item) => {\r\n      const toValue = to(item);\r\n      if (arr.indexOf(toValue) === -1) {\r\n        arr.push(toValue);\r\n      }\r\n      return arr as Array<unknown>;\r\n    }, []);\r\n\r\n    for (let i = 0; i < l; i++) {\r\n      // make TreeNode objects for each item\r\n      nodeById[to(rows[i]) as string | number] = new TreeNode(rows[i]);\r\n    }\r\n    let notResolvedNodes = [];\r\n    for (let i = 0; i < l; i++) {\r\n      // link all TreeNode objects\r\n      node = nodeById[to(rows[i]) as string | number];\r\n      let parent = 0;\r\n      const fromValue = from(node.row);\r\n      if (Boolean(fromValue) && uniqIDs.indexOf(fromValue) > -1) {\r\n        parent = fromValue as number;\r\n      }\r\n      node.parent = nodeById[parent];\r\n      // eslint-disable-next-line no-undefined\r\n      if (node.parent.row['level'] === null || node.parent.row['level'] === undefined) {\r\n        notResolvedNodes.push(node);\r\n      } else {\r\n        node.row['level'] = node.parent.row['level'] + 1;\r\n        node.parent.children.push(node);\r\n      }\r\n    }\r\n    const temp = [];\r\n    const toSortSet = new Set<TreeNode>();\r\n    do {\r\n      temp.length = 0;\r\n      while (notResolvedNodes.length) {\r\n        node = notResolvedNodes.pop();\r\n        // eslint-disable-next-line no-undefined\r\n        if (node.parent.row['level'] === null || node.parent.row['level'] === undefined) {\r\n          temp.push(node);\r\n        } else {\r\n          node.row['level'] = node.parent.row['level'] + 1;\r\n          node.parent.children.push(node);\r\n          if (sortDirs?.length) {\r\n            toSortSet.add(node.parent);\r\n          }\r\n        }\r\n      }\r\n      notResolvedNodes = [...temp];\r\n    } while (notResolvedNodes.length);\r\n    if (sortDirs?.length) {\r\n      toSortSet.forEach(value => value.sortTreeNodes(columns, sortDirs));\r\n    }\r\n\r\n    let resolvedRows: Record<string, unknown>[] = [];\r\n    nodeById[0].flatten(\r\n      function () {\r\n        resolvedRows = [...resolvedRows, (this as TreeNode).row];\r\n      },\r\n      true,\r\n      lazyTree\r\n    );\r\n    return resolvedRows;\r\n  }\r\n  return rows;\r\n}\r\n\r\nclass TreeNode {\r\n  public row: { level: number; treeStatus?: string };\r\n  public parent: TreeNode;\r\n  public children: Array<TreeNode>;\r\n\r\n  constructor(row: { level: number; treeStatus?: string } | null = null) {\r\n    if (!row) {\r\n      row = {\r\n        level: -1,\r\n        treeStatus: 'expanded',\r\n      };\r\n    }\r\n    this.row = row;\r\n    this.parent = null;\r\n    this.children = [];\r\n  }\r\n\r\n  sortTreeNodes(columns: TableColumn[], dirs: ISortPropDir[]): void {\r\n    const nodes: TreeNode[] = this.children;\r\n    if (!nodes || !columns || !dirs) {\r\n      return;\r\n    }\r\n    if (!dirs || !dirs.length) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * record the row ordering of results from prior sort operations (if applicable)\r\n     * this is necessary to guarantee stable sorting behavior\r\n     */\r\n    const rowToIndexMap = new Map<Record<string, unknown>, number>();\r\n    nodes.forEach((node, index) => rowToIndexMap.set(node.row, index));\r\n    const cols: Record<string, TComparator> = {};\r\n    if (Array.isArray(columns)) {\r\n      columns.forEach(col => {\r\n        if (col.comparator && typeof col.comparator === 'function') {\r\n          cols[col.prop] = col.comparator;\r\n        }\r\n      });\r\n    }\r\n\r\n    // cache valueGetter and compareFn so that they\r\n    // do not need to be looked-up in the sort function body\r\n    const cachedDirs = dirs.map(dir => {\r\n      const prop = dir.prop;\r\n      return {\r\n        prop,\r\n        dir: dir.dir,\r\n        valueGetter: getterForProp(prop),\r\n        compareFn: cols[prop] || orderByComparator,\r\n      };\r\n    });\r\n\r\n    nodes.sort((nodeA: TreeNode, nodeB: TreeNode) => {\r\n      for (const cachedDir of cachedDirs) {\r\n        // Get property and valuegetters for column to be sorted\r\n        const { prop, valueGetter } = cachedDir;\r\n        // Get A and B cell values from rows based on properties of the columns\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        const propA = valueGetter(nodeA.row, prop);\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        const propB = valueGetter(nodeB.row, prop);\r\n\r\n        // Compare function gets five parameters:\r\n        // Two cell values to be compared as propA and propB\r\n        // Two rows corresponding to the cells as rowA and rowB\r\n        // Direction of the sort for this column as SortDirection\r\n        // Compare can be a standard JS comparison function (a,b) => -1|0|1\r\n        // as additional parameters are silently ignored. The whole row and sort\r\n        // direction enable more complex sort logic.\r\n        const comparison =\r\n          cachedDir.dir !== SortDirection.desc\r\n            ? cachedDir.compareFn(propA as string, propB as string, nodeA.row, nodeB.row, cachedDir.dir)\r\n            : -cachedDir.compareFn(propA as string, propB as string, nodeA.row, nodeB.row, cachedDir.dir);\r\n\r\n        // Don't return 0 yet in case of needing to sort by next property\r\n        if (comparison !== 0) {\r\n          return comparison;\r\n        }\r\n      }\r\n\r\n      if (!(rowToIndexMap.has(nodeA.row) && rowToIndexMap.has(nodeB.row))) {\r\n        return 0;\r\n      }\r\n\r\n      /**\r\n       * all else being equal, preserve original order of the rows (stable sort)\r\n       */\r\n      return rowToIndexMap.get(nodeA.row) < rowToIndexMap.get(nodeB.row) ? -1 : 1;\r\n    });\r\n  }\r\n\r\n  flatten(f: () => void, recursive: boolean, lazyTree: boolean = false): void {\r\n    if (this.row['treeStatus'] === 'expanded') {\r\n      for (let i = 0, l = this.children.length; i < l; i++) {\r\n        const child = this.children[i];\r\n        if (!lazyTree && (!child.children || !child.children.length)) {\r\n          child.row['treeStatus'] = 'disabled';\r\n        } else if (\r\n          (child.children && child.children.length && !child.row['treeStatus']) ||\r\n          child.row['treeStatus'] === 'disabled'\r\n        ) {\r\n          child.row['treeStatus'] = 'collapsed';\r\n        }\r\n        f.call(child);\r\n        if (recursive) {\r\n          child.flatten(f, recursive, lazyTree);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { render, staticRenderFns } from \"./responsive.component.vue?vue&type=template&id=4a515a8f&scoped=true&\"\nimport script from \"./responsive.component.vue?vue&type=script&lang=ts&\"\nexport * from \"./responsive.component.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./responsive.component.vue?vue&type=style&index=0&id=4a515a8f&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4a515a8f\",\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./scrolling-server.component.vue?vue&type=template&id=6092e438&\"\nimport script from \"./scrolling-server.component.vue?vue&type=script&lang=ts&\"\nexport * from \"./scrolling-server.component.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./scrolling-server.component.vue?vue&type=style&index=0&id=6092e438&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./body-cell.component.html?vue&type=template&id=6cc6b201&\"\nimport script from \"./body-cell.component.ts?vue&type=script&lang=js&\"\nexport * from \"./body-cell.component.ts?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./body-row-wrapper.component.vue?vue&type=template&id=1264ca30&scoped=true&\"\nimport script from \"./body-row-wrapper.component.ts?vue&type=script&lang=js&\"\nexport * from \"./body-row-wrapper.component.ts?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1264ca30\",\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./body-row.component.vue?vue&type=template&id=cfea629e&\"\nimport script from \"./body-row.component.ts?vue&type=script&lang=js&\"\nexport * from \"./body-row.component.ts?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./body.component.html?vue&type=template&id=40cb394c&\"\nimport script from \"./body.component.ts?vue&type=script&lang=js&\"\nexport * from \"./body.component.ts?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./datatable.component.html?vue&type=template&id=5b0fdcf6&\"\nimport script from \"./datatable.component.ts?vue&type=script&lang=js&\"\nexport * from \"./datatable.component.ts?vue&type=script&lang=js&\"\nimport style0 from \"./datatable.component.scss?vue&type=style&index=0&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../../node_modules/source-map-loader/dist/cjs.js!./body-cell.component.ts?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../../node_modules/source-map-loader/dist/cjs.js!./body-cell.component.ts?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../../node_modules/source-map-loader/dist/cjs.js!./body-row-wrapper.component.ts?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../../node_modules/source-map-loader/dist/cjs.js!./body-row-wrapper.component.ts?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../../node_modules/source-map-loader/dist/cjs.js!./body-row.component.ts?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../../node_modules/source-map-loader/dist/cjs.js!./body-row.component.ts?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../../node_modules/source-map-loader/dist/cjs.js!./body.component.ts?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../../node_modules/source-map-loader/dist/cjs.js!./body.component.ts?vue&type=script&lang=js&\"","import mod from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../node_modules/source-map-loader/dist/cjs.js!./datatable.component.ts?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../node_modules/source-map-loader/dist/cjs.js!./datatable.component.ts?vue&type=script&lang=js&\"","import mod from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./responsive.component.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./responsive.component.vue?vue&type=script&lang=ts&\"","import mod from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./scrolling-server.component.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-6!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./scrolling-server.component.vue?vue&type=script&lang=ts&\"","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_vm._m(0),_vm._v(\" \"),_c('ngx-datatable',{ref:\"table\",staticClass:\"material expandable\",attrs:{\"columnMode\":\"force\",\"headerHeight\":50,\"footerHeight\":50,\"rowHeight\":50,\"rowDetailHeight\":\"50\",\"scrollbarV\":true,\"rows\":_vm.rows},on:{\"page\":function($event){return _vm.onPage($event)}},scopedSlots:_vm._u([{key:\"rowDetail\",fn:function(scope){return [_c('div',{staticStyle:{\"padding-left\":\"60px\",\"font-size\":\"14px\"}},[_c('div',[_vm._v(_vm._s(scope.row.gender)+\", \"+_vm._s(scope.row.age))])])]}}])},[_vm._v(\" \"),_c('ngx-datatable-column',{attrs:{\"width\":50,\"resizeable\":false,\"sortable\":false,\"draggable\":false,\"canAutoResize\":false},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return (scope.row)?[_c('a',{staticClass:\"desktop-hidden\",class:{ 'datatable-icon-right': !scope.expanded, 'datatable-icon-down': scope.expanded },attrs:{\"href\":\"#\",\"title\":\"Expand/Collapse Row\"},on:{\"click\":function($event){return _vm.toggleExpandRow(scope.row)}}})]:undefined}}],null,true)}),_vm._v(\" \"),_c('ngx-datatable-column',{attrs:{\"name\":\"Name\",\"flexGrow\":3,\"minWidth\":200},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return (scope.row)?[_vm._v(\"\\n        \"+_vm._s(scope.row.name)+\"\\n      \")]:undefined}}],null,true)}),_vm._v(\" \"),_c('ngx-datatable-column',{staticClass:\"mobile-hidden\",attrs:{\"name\":\"Gender\",\"flexGrow\":1},scopedSlots:_vm._u([{key:\"header\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.column.name))])]}},{key:\"default\",fn:function(scope){return [(scope.row)?_c('span',[_vm._v(_vm._s(scope.row.gender))]):_vm._e()]}}])}),_vm._v(\" \"),_c('ngx-datatable-column',{staticClass:\"mobile-hidden\",attrs:{\"name\":\"Age\",\"flexGrow\":1},scopedSlots:_vm._u([{key:\"header\",fn:function(scope){return [_c('span',[_c('b',[_vm._v(_vm._s(scope.column.name))])])]}},{key:\"default\",fn:function(scope){return [(scope.row)?_c('span',[_vm._v(_vm._s(scope.row.age))]):_vm._e()]}}])})],1),_vm._v(\" \"),_vm._m(1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('h3',[_vm._v(\"\\n    Responsive Demo\\n    \"),_c('small',[_c('a',{attrs:{\"href\":\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/basic/responsive.component.vue\",\"target\":\"_blank\"}},[_vm._v(\"\\n        Source\\n      \")])])])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticStyle:{\"margin\":\"50px\"}},[_vm._v(\"\\n    This demo combines the features used in the \"),_c('i',[_vm._v(\"Row Detail\")]),_vm._v(\" Rows demo, \"),_c('i',[_vm._v(\"Flex\")]),_vm._v(\" Column demo, and the\\n    \"),_c('i',[_vm._v(\"Inline\")]),_vm._v(\"\\n    Templates demo. When your browser is at 800px, the gender and age columns will be hidden and will appear in the\\n    row detail view.\\n  \")])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_vm._m(0),_vm._v(\" \"),_c('ngx-datatable',{staticClass:\"material server-scrolling-demo\",attrs:{\"rows\":_vm.rows,\"columns\":[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }],\"columnMode\":\"force\",\"headerHeight\":_vm.headerHeight,\"rowHeight\":_vm.rowHeight,\"loadingIndicator\":_vm.isLoading,\"scrollbarV\":true},on:{\"scroll\":function($event){return _vm.onScroll($event.offsetY)}}})],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('h3',[_vm._v(\"\\n    Server-side Scrolling\\n    \"),_c('small',[_c('a',{attrs:{\"href\":\"https://github.com/begemode/vue-ngx-datatable/blob/master/demo/paging/scrolling-server.component.ts\",\"target\":\"_blank\"}},[_vm._v(\"Source\")])])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"datatable-body-cell\",class:_vm.cssClasses,style:(_vm.styles),attrs:{\"id\":`${_vm.column.prop}-${_vm.column.$$id}`,\"tabindex\":_vm.tabIndex},on:{\"dblclick\":_vm.onDblClick,\"click\":_vm.onClick,\"keydown\":_vm.onKeyDown,\"mouseenter\":_vm.onMouseEnter,\"focus\":_vm.onFocus,\"blur\":_vm.onBlur}},[_c('div',{staticClass:\"datatable-body-cell-label\",style:(_vm.column.isTreeColumn ? _vm.marginCellStyle: null)},[(_vm.isCheckboxable)?_c('label',{staticClass:\"datatable-checkbox\"},[_c('input',{attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":_vm.rowContext.isChecked},on:{\"click\":_vm.onCheckboxChange}})]):_vm._e(),_vm._v(\" \"),(_vm.column.isTreeColumn)?[(!_vm.column.treeToggleTemplate)?_c('button',{staticClass:\"datatable-tree-button\",attrs:{\"disabled\":_vm.rowContext.treeStatus==='disabled'},on:{\"click\":function($event){$event.stopPropagation();return _vm.onTreeAction.apply(null, arguments)},\"dblclick\":function($event){$event.stopPropagation();}}},[_c('span',[(_vm.rowContext.row.treeStatus==='loading')?_c('i',{staticClass:\"icon datatable-icon-collapse\"}):(_vm.rowContext.treeStatus==='collapsed')?_c('i',{staticClass:\"icon datatable-icon-right\"}):(_vm.rowContext.treeStatus==='expanded')?_c('i',{staticClass:\"icon datatable-icon-down\"}):_c('i',{staticClass:\"icon icon-disabled datatable-icon-down\"})])]):_vm._e(),_vm._v(\" \"),_vm._t(\"tree-toggle\")]:_vm._e(),_vm._v(\" \"),_vm._t(\"default\",function(){return [_c('span',{attrs:{\"title\":_vm.sanitizedValue},domProps:{\"innerHTML\":_vm._s(_vm.value)}})]},null,{ \r\n                 row: _vm.rowContext.row ? _vm.rowContext.row : {},\r\n                 column: _vm.column,\r\n                 rowIndex: _vm.rowContext.rowIndex, \r\n                 group: _vm.rowContext.group, \r\n                 expanded: _vm.rowContext.expanded,\r\n                 value: _vm.value })],2)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"datatable-body\",style:(_vm.styleObject)},[_c('datatable-selection',{ref:\"selector\",attrs:{\"selected\":_vm.selected,\"checked\":_vm.checked,\"rows\":_vm.rows,\"pageSize\":_vm.pageSize,\"selectCheck\":_vm.selectCheck,\"selectEnabled\":_vm.selectEnabled,\"selectionType\":_vm.selectionType,\"checkMode\":_vm.checkMode,\"rowIdentity\":_vm.rowIdentity,\"scroller\":_vm.scroller,\"bodyHeight\":_vm.bodyHeight,\"beforeSelectRowCheck\":_vm.beforeSelectRowCheck},on:{\"select\":_vm.onSelect,\"check\":function($event){return _vm.$emit('check', $event)},\"activate\":function($event){return _vm.$emit('activate', $event)}}},[(_vm.loadingIndicator)?_c('datatable-progress'):_vm._e(),_vm._v(\" \"),_c('datatable-scroller',{ref:\"scroller\",attrs:{\"scrollbarV\":_vm.scrollbarV,\"scrollbarH\":_vm.scrollbarH,\"scrollHeight\":_vm.scrollHeight,\"scrollWidth\":_vm.scrollWidth},on:{\"setup\":_vm.onScrollSetup,\"scroll\":_vm.onBodyScroll,\"change-width\":_vm.onScrollerWidthChanged}},[(_vm.summaryRow && _vm.summaryPosition === 'top')?_c('datatable-summary-row',{staticClass:\"datatable-summary-row\",attrs:{\"rowHeight\":_vm.summaryHeight,\"offsetX\":_vm.offsetX,\"innerWidth\":_vm.innerWidth,\"rows\":_vm.rows,\"columns\":_vm.columns,\"columnsByPin\":_vm.columnsByPin,\"columnGroupWidths\":_vm.columnGroupWidths,\"groupStyles\":_vm.getGroupStyles,\"slots\":_vm.cellSlots}}):_vm._e(),_vm._v(\" \"),_vm._l((_vm.rowContexts),function(rowContext,i){return _c('datatable-row-wrapper',{key:i,attrs:{\"styleObject\":_vm.getRowWrapperStyles(rowContext),\"groupRowsBy\":_vm.groupRowsBy,\"groupLevel\":0,\"row\":rowContext.row,\"rowIdentity\":_vm.rowIdentity,\"innerWidth\":_vm.innerWidth,\"rowDetail\":_vm.rowDetail,\"groupHeader\":_vm.groupHeader,\"offsetX\":_vm.offsetX,\"groupRowHeight\":_vm.groupRowHeight,\"groupHeaderStyles\":_vm.groupHeaderStyles,\"groupHeaderClasses\":_vm.groupHeaderClasses,\"rowDetailHeight\":_vm.getDetailRowHeight(rowContext.row),\"expanded\":rowContext.expanded,\"rowIndex\":rowContext.rowIndex,\"groupHeaderSlot\":_vm.groupHeaderSlot,\"rowDetailSlot\":_vm.rowDetailSlot},on:{\"group-toggle\":_vm.onGroupToggle,\"row-contextmenu\":function($event){return _vm.$emit('rowContextmenu')}}},[_c('datatable-body-row',{attrs:{\"tabindex\":\"-1\",\"columnsByPin\":_vm.columnsByPin,\"columnGroupWidths\":_vm.columnGroupWidths,\"groupStyles\":_vm.getGroupStyles,\"rowClass\":_vm.rowClass,\"row\":rowContext.row,\"rowContext\":rowContext,\"displayCheck\":_vm.displayCheck,\"slots\":_vm.cellSlots,\"renderTracking\":_vm.renderTracking},on:{\"tree-action\":function($event){return _vm.onTreeAction($event)},\"activate\":function($event){return _vm.onActivate($event, i)},\"row-created\":_vm.onRowRendered,\"row-updated\":_vm.onRowRendered}})],1)}),_vm._v(\" \"),(_vm.summaryRow && _vm.summaryPosition === 'bottom')?_c('datatable-summary-row',{staticClass:\"datatable-summary-row\",style:(_vm.getBottomSummaryRowStyles),attrs:{\"rowHeight\":_vm.summaryHeight,\"offsetX\":_vm.offsetX,\"innerWidth\":_vm.innerWidth,\"rows\":_vm.rows,\"columns\":_vm.columns,\"columnsByPin\":_vm.columnsByPin,\"columnGroupWidths\":_vm.columnGroupWidths,\"groupStyles\":_vm.getGroupStyles,\"slots\":_vm.cellSlots}}):_vm._e()],2),_vm._v(\" \"),((!_vm.rows || !_vm.rows.length) && !_vm.loadingIndicator)?_c('div',{staticClass:\"empty-row\",domProps:{\"innerHTML\":_vm._s(_vm.emptyMessage)}}):_vm._e()],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{directives:[{name:\"visibility-observer\",rawName:\"v-visibility-observer\",value:({ on: _vm.visibilityCheck, timeout: _vm.visibilityCheckTimeout }),expression:\"{ on: visibilityCheck, timeout: visibilityCheckTimeout }\"}],staticClass:\"ngx-datatable\",class:_vm.classObject,on:{\"visible\":_vm.onVisible,\"insert-column\":_vm.onColumnInsert}},[_c('div',{ref:\"hiddenColumns\",staticClass:\"hidden-columns\"},[_vm._t(\"default\")],2),_vm._v(\" \"),(_vm.headerHeight)?_c('datatable-header',{ref:\"datatableHeader\",staticClass:\"datatable-header\",attrs:{\"sorts\":_vm.mySorts,\"sortType\":_vm.mySortType,\"scrollbarWidth\":_vm.scrollbarWidth,\"scrollbarH\":_vm.scrollbarH,\"innerWidth\":_vm.innerWidth,\"offsetX\":_vm.offsetX,\"dealsWithGroup\":Array.isArray(_vm.groupRowsBy) && Boolean(_vm.groupRowsBy.length),\"columns\":_vm.internalColumns,\"headerHeight\":_vm.headerHeight,\"reorderable\":_vm.reorderable,\"sortAscendingIcon\":_vm.cssClasses.sortAscending,\"sortDescendingIcon\":_vm.cssClasses.sortDescending,\"allRowsSelected\":_vm.allRowsSelected,\"selectionType\":_vm.selectionType,\"columnGroupWidths\":_vm.columnGroupWidths,\"columnsByPin\":_vm.columnsByPinArray},on:{\"sort\":function($event){return _vm.onColumnSort($event)},\"resize\":function($event){return _vm.onColumnResize($event)},\"reorder\":function($event){return _vm.onColumnReorder($event)},\"select\":function($event){return _vm.onHeaderSelect($event)},\"columnContextmenu\":function($event){return _vm.onColumnContextmenu($event)},\"column-visible-changed\":function($event){return _vm.onColumnChangeVisible($event)}}}):_vm._e(),_vm._v(\" \"),_c('datatable-body',{ref:\"datatableBody\",attrs:{\"groupRowsBy\":_vm.groupRowsBy,\"rows\":_vm.internalRows,\"groupExpansionDefault\":_vm.groupExpansionDefault,\"scrollbarV\":_vm.scrollbarV,\"scrollbarH\":_vm.scrollbarH,\"virtualization\":_vm.virtualization,\"loadingIndicator\":_vm.loadingIndicator,\"externalPaging\":_vm.externalPaging,\"rowHeight\":_vm.myRowHeight,\"rowCount\":_vm.rowCount,\"offset\":_vm.myOffset,\"trackByProp\":_vm.trackByProp,\"columns\":_vm.internalColumns,\"pageSize\":_vm.pageSize,\"limit\":_vm.limit,\"offsetX\":_vm.offsetX,\"rowDetail\":_vm.rowDetail,\"rowDetailHeight\":_vm.rowDetailHeight,\"groupHeader\":_vm.groupHeader,\"selected\":_vm.mySelected,\"checked\":_vm.myChecked,\"innerWidth\":_vm.innerWidth,\"bodyHeight\":_vm.bodyHeight,\"selectionType\":_vm.selectionType,\"checkMode\":_vm.checkMode,\"emptyMessage\":_vm.messages.emptyMessage,\"rowIdentity\":_vm.rowIdentity,\"rowClass\":_vm.rowClass,\"selectCheck\":_vm.selectCheck,\"displayCheck\":_vm.displayCheck,\"summaryRow\":_vm.summaryRow,\"summaryHeight\":_vm.summaryHeight,\"summaryPosition\":_vm.summaryPosition,\"groupRowHeight\":_vm.groupRowHeight,\"groupHeaderStyles\":_vm.groupHeaderStyles,\"groupHeaderClasses\":_vm.groupHeaderClasses,\"groupHeaderSlot\":_vm.groupHeaderSlot,\"rowDetailSlot\":_vm.rowDetailSlot,\"renderTracking\":_vm.renderTracking,\"beforeSelectRowCheck\":_vm.beforeSelectRowCheck,\"columnGroupWidths\":_vm.columnGroupWidths,\"columnsByPin\":_vm.columnsByPinArray},on:{\"page\":_vm.onBodyPage,\"activate\":function($event){return _vm.$emit('activate', $event)},\"rowContextmenu\":_vm.onRowContextmenu,\"select\":_vm.onBodySelect,\"check\":_vm.onBodyCheck,\"scroll\":_vm.onBodyScroll,\"group-toggle\":_vm.onGroupToggle,\"tree-action\":_vm.onTreeAction,\"rendered\":function($event){return _vm.$emit('rendered', $event)}}}),_vm._v(\" \"),_c('div',{staticClass:\"datatable-footer\",class:{ 'datatable-footer-border': Boolean(_vm.footerHeight) }},[(_vm.footerHeight)?_c('datatable-footer',{ref:\"datatableFooter\",attrs:{\"rowCount\":_vm.rowCount,\"pageSize\":_vm.pageSize,\"offset\":_vm.myOffset,\"footerHeight\":_vm.footerHeight,\"totalMessage\":_vm.messages.totalMessage,\"pagerLeftArrowIcon\":_vm.cssClasses.pagerLeftArrow,\"pagerRightArrowIcon\":_vm.cssClasses.pagerRightArrow,\"pagerPreviousIcon\":_vm.cssClasses.pagerPrevious,\"selectedCount\":_vm.mySelected.length,\"selectedMessage\":!!_vm.selectionType && _vm.messages.selectedMessage,\"pagerNextIcon\":_vm.cssClasses.pagerNext,\"footerSlot\":_vm.footerSlot},on:{\"page\":_vm.onFooterPage}}):_vm._e()],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"datatable-row-wrapper\",style:(_vm.styleObject),attrs:{\"tabindex\":\"-1\",\"data-test-id\":_vm.rowId}},[(_vm.row && _vm.row.__isGroup)?_c('datatable-group-header',{staticClass:\"datatable-group-header\",class:_vm.groupHeaderClasses,style:(_vm.groupTitleStyles),attrs:{\"offsetX\":_vm.offsetX,\"group\":_vm.row,\"groupLevel\":_vm.row.level,\"groupRowsBy\":_vm.groupRowsBy,\"expanded\":_vm.row.__expanded,\"active\":_vm.row.active,\"groupHeaderSlot\":_vm.groupHeaderSlot},on:{\"group-toggle\":function($event){return _vm.$emit('group-toggle', $event)},\"contextmenu\":function($event){return _vm.$emit('row-contextmenu', $event, _vm.row)}}}):_vm._t(\"default\"),_vm._v(\" \"),(_vm.rowDetail && _vm.expanded)?_c('datatable-row-detail',{staticClass:\"datatable-row-detail\",style:({ height: _vm.rowDetailHeight + 'px' }),attrs:{\"row\":_vm.row,\"expanded\":_vm.expanded,\"rowDetailSlot\":_vm.rowDetailSlot},on:{\"detail-toggle\":function($event){return _vm.$emit('detail-toggle', $event)},\"contextmenu\":function($event){return _vm.$emit('row-contextmenu', $event, _vm.row)}}}):_vm._e()],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"datatable-body-row\",class:_vm.cssClasses,style:(_vm.styles),attrs:{\"id\":\"row-group\",\"tabIndex\":-1},on:{\"focus\":_vm.onFocus,\"blur\":_vm.onBlur,\"keydown\":_vm.onKeyDown}},_vm._l((_vm.columnsByPin),function(colGroup){return _c('div',{key:colGroup.type,staticClass:\"datatable-row-group\",class:'datatable-row-' + colGroup.type,style:(_vm.groupStyles(colGroup)),on:{\"mouseenter\":function($event){return _vm.$emit('activate', _vm.row)}}},[_vm._l((colGroup.columns),function(column,ii){return [(column.visible)?_c('datatable-body-cell',{key:`${column.$$id}-${_vm.counter}`,attrs:{\"tabIndex\":\"-1\",\"rowContext\":_vm.rowContext,\"column\":column,\"cellSlot\":_vm.slots()[column.prop],\"renderTracking\":_vm.renderTracking,\"displayCheck\":_vm.displayCheck},on:{\"activate\":function($event){return _vm.onActivate($event, ii)},\"tree-action\":_vm.onTreeAction,\"mouseenter\":_vm.onMouseenter,\"cell-created\":_vm.onCellRendered,\"cell-updated\":_vm.onCellRendered}}):_vm._e()]})],2)}),0)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_begemode_vue_ngx_datatable\"] = self[\"webpackChunk_begemode_vue_ngx_datatable\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [688], () => (__webpack_require__(222)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","state","selectedElement","version","onStateChanged","this","classList","remove","$el","querySelector","add","mounted","dark","Watch","Component","components","FullScreenComponent","template","AppComponent","Vue","rows","loadingIndicator","reorderable","columns","prop","name","sortable","created","fetch","data","setTimeout","cb","req","XMLHttpRequest","open","onload","JSON","parse","response","send","BasicAutoComponent","BasicFixedComponent","summaryFunc","cells","summaryForGender","males","filter","cell","length","females","BootstrapThemeComponent","visible","rawEvent","contextmenuRow","contextmenuColumn","onTableContextMenu","contextMenuEvent","console","log","event","type","content","undefined","preventDefault","stopPropagation","ContextMenuDemoComponent","expanded","splice","getRowClass","row","age","getCellClass","RowCssComponent","DarkThemeComponent","height","Math","floor","random","getRowHeight","DynamicHeightComponent","temp","table","$refs","updateFilter","val","target","value","toLowerCase","d","indexOf","offset","FilterBarComponent","FooterDemoComponent","cols","forEach","col","push","onRendered","rowIdentity","Id","editing","dblclick","edit","rowIndex","update","$set","updateValue","InlineEditComponent","count","map","updated","Date","now","toString","start","randomNum","end","id","setInterval","updateRandom","bind","stop","clearInterval","rowNum","min","cellNum","newRow","LiveDataComponent","columns1","columns2","rows1","gender","company","rows2","MultipleTablesComponent","onPage","clearTimeout","timeout","toggleExpandRow","toggleExpandDetail","onDetailToggle","expandAllRows","expandAllDetails","collapseAllRows","collapseAllDetails","RowDetailsComponent","groupRowsBy","title","valueGetter","dt","getFullYear","toISOString","getGroupRowHeight","group","rowHeight","width","checkGroup","groupStatus","expectedPaymentDealtWith","exppayyes","exppayno","exppaypending","checked","gr","source","startdate","enddate","index","rowFilter","numberOfExpPayYes","numberOfSourceFunder","numberOfSourceCalculated","numberOfSourceManual","groupstatus","groupTitle","result","keys","onExpandAll","expandAllGroups","onCollapseAll","collapseAllGroups","RowGroupingComponent","color","RowGroupingCustomComponent","HorzVertScrolling","tab1","tab2","tab3","TabsDemoComponent","VirtualScrollComponent","app","VueRootComponent","el","$mount","ColumnFlexComponent","ColumnForceComponent","swapColumns","ColumnReorderComponent","ColumnStandardComponent","allColumns","toggle","isChecked","ColumnToggleComponent","isVisibleFrozen","isNameFrozen","ColumnPinningComponent","companyData","getResults","page","getPagedData","delay","pagedData","PagedData","totalElements","totalPages","size","pageNumber","i","jsonObj","employee","CorporateEmployee","promise","Promise","resolve","resolveFunc","MockServerResultsService","Page","Array","ClientPagingComponent","serverResultsService","setPage","pageInfo","PagingScrollingNoVirtualizationComponent","ServerPagingComponent","cache","isLoading","pageSize","prevPagedData","getMilliseconds","isArray","VirtualPagingComponent","selected","onSelect","onActivate","beforeSelectCheck","oldSelected","confirm","BeforeSelectionCheckComponent","onFocus","CellSelectionComponent","onCheck","displayCheck","CheckNoSelectionComponent","allSelected","selectAll","isSelected","find","r","onCheckboxChange","findIndex","CustomCheckboxSelectionComponent","CheckboxSelectionComponent","checkSelectable","MultiDisableSelectionComponent","MultiClickSelectionComponent","MultiSelectionComponent","SingleSelectionComponent","ClientSortingComponent","comparator","companyComparator","propA","propB","SortingComparatorComponent","DefaultSortingComponent","loading","onSort","sort","sorts","a","b","localeCompare","dir","ServerSortingComponent","enableSummary","summaryPosition","fullName","split","avgAge","filteredCells","reduce","sum","SummaryRowInlineHtmlComponent","getGenderSummary","SummaryRowServerPagingComponent","onSummaryStateChange","SummaryRowSimpleComponent","joke","InlineTemplatesComponent","cellTemplate","$slots","editTmpl","headerTemplate","hdrTpl","TemplateRefTemplatesComponent","onTreeAction","treeStatus","styles","ClientTreeComponent","lastIndex","slice","parentId","FullScreenTreeComponent","sanitizedValue","isFocused","onRowChanged","checkValueUpdates","cellSlot","default","rowContext","column","updateCell","$forceUpdate","renderTracking","$emit","beforeUpdate","$$valueGetter","stripHtml","html","replace","onBlur","onClick","cellElement","onDblClick","onKeyDown","keyCode","isTargetCell","Keys","return","down","up","left","right","pageUp","pageDown","onMouseEnter","func","cellClass","cssClass","res","Object","k","minWidth","maxWidth","calcLeftMargin","checkboxable","cellHeight","isNaN","levelIndent","treeLevelIndent","isTreeColumn","level","Prop","deep","immediate","DataTableBodyCellComponent","onContextmenu","$event","groupHeaderStyles","groupRowHeight","DataTableRowWrapperComponent","counter","focus","onCellRendered","cellIndex","rowElement","isTargetRow","onMouseenter","columnGroupWidths","total","cls","rowClass","DataTableBodyRowComponent","scroller","selector","rowHeightsCache","RowHeightCache","offsetY","myOffset","myOffsetX","indexes","first","last","rowIndexes","Map","rowExpansions","myBodyHeight","groupStyles","center","rowContexts","scrollbarHelper","ScrollbarHelper","renderCounter","renderId","pageRowCount","getDetailRowHeight","rowDetail","rowDetailHeight","Number","onPageSize","recalcLayout","onRowsChanged","rowsChanged","clear","updateOffsetY","$nextTick","lastFirst","onSelectedChanged","isSelect","onCheckedChanged","onColumnsChanged","buildStylesByGroup","onOffsetChanged","onOffsetXChanged","offsetX","onMyOffsetXChanged","onColumnGroupWidthsChanged","onInnerWidthChanged","onMyOffsetChanged","limit","onRowCountChanged","onBodyHeightChanged","bodyHeight","scrollbarV","rowTrackingFn","idx","getRowIndex","trackByProp","scrollbarH","innerWidth","bodyWidth","contain","Boolean","selectionType","checkMode","CheckMode","checkNoSelect","SelectionType","checkbox","virtualization","rowCount","isUseRowHeightCache","query","destroyed","reset","fromPager","setOffset","onScrollerWidthChanged","onScrollSetup","scrollXPos","scrollYPos","onBodyScroll","updateIndexes","direction","updatePage","updateRows","ceil","includes","force","lastLast","lastRowCount","__isGroup","set","getRowExpanded","getGroupHeight","getRowAndDetailHeight","get","getRowWrapperStyles","pos","translateXY","getRowOffsetY","queryWithHeight","getBottomSummaryRowStyles","position","externalPaging","max","refreshRowHeightCache","clearCache","initCache","externalVirtual","getAdjustedViewPortIndex","viewPortFirstRowIndex","toggleRowExpansion","currentIndex","toggleAllRows","rowExpanded","onGroupToggle","columnTrackingFn","$$id","initExpansions","groups","selectEnabled","getRowSelected","checkEnabled","getRowChecked","model","onRowRendered","time","checkRenderFinish","timeEnd","calcStylesByGroup","widths","parseInt","getGroupStyles","colGroup","isRowVisible","rowOffsetY","c","onCellFocus","Error","String","DataTableBodyComponent","component","groupedRows","internalRows","initialRows","internalColumns","myColumnMode","ColumnMode","standard","mySortType","SortType","single","mySorts","innerOffset","mySelected","myChecked","expandedGroups","isVisible","groupHeader","groupHeaderSlot","rowDetailSlot","footerSlot","columnsByPinArray","dimensionsHelper","DimensionsHelper","needToCalculateDims","activeGroupRow","innerSortRows","groupArrayBy","processGroupedRows","recalculate","onGroupRowsByChanged","newVal","oldVal","isArrayEqual","externalSorting","sortInternalRows","setColumnsDefaults","recalculateColumns","onLimitChanged","onCountChanged","onColumnModeChanged","columnMode","onSortTypeChanged","sortType","onFooterPage","onPageSizeChanged","onSortsChanged","onMySortsChanged","onWindowResize","$listeners","rendered","beforeDestroy","resizeHandler","window","removeEventListener","resizeObserver","unobserve","bodyComponent","datatableBody","headerComponent","datatableHeader","$scopedSlots","footer","ResizeObserver","entries","contentRect","round","clientHeight","clientWidth","headerHeight","footerHeight","requestAnimationFrame","observe","addEventListener","init","singleFocus","multi","multiClick","isFixedHeader","isFixedRow","isVertScroll","virtualized","isVirtualized","isHorScroll","selectable","isSelectable","isCheckboxSelection","isCellSelection","isSingleSelection","isMultiSelection","isMultiClickSelection","arr","allRowsSelected","selectAllRowsOnPage","rowsOnPage","adjust","recalculateDims","recalculatePages","forceIdx","allowBleed","treeFromRelation","calculateColumnsWidth","colsByPin","columnsByPin","columnsByPinArr","forceFillColumnWidths","flex","adjustColumnWidths","dims","getDimensions","calcPageSize","calcRowCount","onBodyPage","onVisible","treeToRelation","onColumnContextmenu","ContextmenuType","header","onRowContextmenu","body","onColumnResize","newValue","canAutoResize","$$oldWidth","reorderColumns","order","oldColumnsOrder","oldPos","newPos","onColumnReorder","prevValue","prevCol","movedCol","onColumnSort","item","goToFirstAfterSort","s","onHeaderSelect","evName","checkIsSelect","allChecked","onBodySelect","onBodyCheck","__expanded","key","active","freeze","onColumnInsert","setColumnDefaults","onColumnChangeVisible","onColumnRemoved","colIndex","recalculateColumnsTimer","expandCollapseRow","isGroupExpanded","treeFrom","optionalGetterForProp","treeTo","groupRowsByParents","lazyTree","originalArray","groupBy","getValue","groupDescr","getKey","groupByArr","itemsToRemove","has","keysDescr","getGroupTitle","from","x","addGroup","level1","keysObj","descr","sortGroupedRows","sortRows","__group","keyDescr","expand","addRow","g","validator","sortAscending","sortDescending","pagerLeftArrow","pagerRightArrow","pagerPrevious","pagerNext","emptyMessage","totalMessage","selectedMessage","Function","throttleable","directives","DatatableComponent","ResponsiveComponent","pageLimit","onScroll","viewHeight","getBoundingClientRect","loadPage","ServerScrollingComponent","groupLevel","toggleExpandGroup","DataTableBodyGroupHeaderComponent","DataTableBodyRowDetailComponent","ProgressBarComponent","prevScrollYPos","prevScrollXPos","stopRender","parentElement","closest","onInitScrollHandler","onInitScroll","passive","tick","scrollTop","incOffset","scrollLeft","updateOffset","scrollHeight","transform","ScrollerComponent","selectRow","doSelect","beforeSelectRowCheck","chkbox","shiftKey","selectRowsBetween","prevIndex","ctrlKey","metaKey","selectRows","selectCheck","checkRow","select","onKeyboardFocus","focusCell","focusRow","nextRowElement","getPrevNextRow","$parent","scrolled","h","focusRow1","nextRow","getPrevNextRowElement","focusElement","previousElementSibling","nextElementSibling","children","getPrevNextRow1","nextCellElement","getElementsByClassName","getRowSelectedIdx","rowId","reverse","range","selectedIndex","DataTableSelectionComponent","defaultSumFunc","cellsWithValues","some","noopSumFunc","summaryRow","mySlotsFunc","myRowContext","onChanges","updateInternalColumns","updateValues","slots","summarySlots","summaryTemplate","assign","cellsFromSingleColumn","sumFunc","getSummaryFunction","DataTableSummaryRowComponent","onVisibleChanged","onFrozenLeftChanged","frozenLeft","onFrozenRightChanged","frozenRight","onFlexGrowChanged","flexGrow","onResizeableChanged","resizeable","onSortableChanged","onDraggableChanged","draggable","onCheckboxableChanged","onWidthChanged","headerCheckboxable","headerClasses","headerClass","cellClasses","headerAppend","summary","DataTableColumnComponent","selectedCount","curPage","DataTableFooterComponent","pages","myPage","calcPages","onSizeChanged","onPageChanged","newCount","prevPage","selectPage","nextPage","startPage","endPage","isMaxSized","maxSize","num","number","text","DataTablePagerComponent","sortFn","sortDir","myAllRowsSelected","sortOrder","cellContext","onAllRowsSelectedChanged","isCheckboxable","onColumnChahged","onColumnVisibleChahged","onColumnFrozenLeftChahged","onColumnFrozenRightChahged","calcSortDir","headerAppendTemplate","append","element","setResizeObserver","join","calcSortCssClass","calcCssClass","nextSortDir","SortDirection","asc","sortAscendingIcon","desc","sortDescendingIcon","realWidth","DataTableHeaderCellComponent","myHeaderHeight","styleByGroup","targetMarkerContext","dragEvent","dragging","positions","onChangedInnerWidth","setStylesByGroup","onHeaderHeightChanged","onLongPressStart","onLongPressEnd","isEnableDragX","onColumnResized","onColumnVisibleChanged","getColumn","leftColumnCount","centerColumnCount","calcNewSorts","scrollbarWidth","styleForGroup","headerWidth","onHeaderCellMounted","draggables","dragModel","onDragStart","offsetLeft","dragger","elm","offsetWidth","onDragging","prevPos","isTarget","lastDraggingIndex","onTargetChanged","newIndex","initialIndex","onDragEnd","onColumnReordered","style","oldColumn","newColumn","class","concat","clientX","y","clientY","targets","document","elementsFromPoint","dragndrop","DataTableHeaderComponent","idCounter","vNode","dragX","dragY","vnode","handleUp","handleDown","handleMove","_dragEvent","isDragging","onMouseUp","onMouseMove","unsubscribe","onMouseDown","contains","mouseDownPos","emit","top","handlers","on","componentOptions","listeners","fns","directive","binding","ctrl","DraggableController","__draggable__","unbind","_id","pressEnabled","duration","mouseX","mouseY","_pressing","_isLongPressing","which","pressing","isLongPressing","pressModel","loop","endPress","xThres","abs","yThres","LongPressController","__longpress__","resizeEnabled","resizing","isHandle","initialWidth","mouseDownScreenX","screenX","e","move","newWidth","overMinWidth","underMaxWidth","ResizeableDirectiveController","__resizeable__","inserted","node","createElement","appendChild","_isVisible","stopCheck","onVisibilityChange","runCheck","check","offsetHeight","VisibilityController","__visibility__","getWidth","outer","visibility","widthNoScroll","overflow","inner","widthWithScroll","parentNode","removeChild","str","trim","toUpperCase","match","vm","isNullOrUndefined","camelCase","getterForProp","deCamelCase","treeColumnFound","emptyStringGetter","numericIndexGetter","shallowValueGetter","obj","fieldName","deepValueGetter","path","current","columnTotalWidth","totalWidth","hidden","parseFloat","ret","all","tableWidth","colsByPinArr","array1","array2","l","pow","calcRealWidth","w","removeProcessedColumns","columnsToResize","columnsProcessed","getContentWidth","defaultColWidth","contentWidth","expectedWidth","hiddenColumns","columnsWidth","columnsTotalWidth","totalFlexGrow","getTotalFlexGrow","colsByGroup","attr","hasMinWidth","remainingWidth","widthPerFlexPoint","scaleColumns","startIdx","averageColumnWidth","additionWidthPerColumn","exceedsWindow","newSize","testStyle","prefix","getComputedStyle","documentElement","pre","dom","RegExp","exec","lowercase","css","js","substr","property","heights","details","n","accumulator","currentRowHeight","scrollY","calcRowIndex","atRowIndex","byRowHeight","atIndex","queryBetween","atIndexA","atIndexB","dataLength","orderByComparator","isFinite","dirs","rowToIndexMap","cachedDirs","compareFn","rowA","rowB","cachedDir","comparison","throttle","wait","options","context","args","previous","later","leading","apply","remaining","arguments","trailing","descriptor","configurable","enumerable","defineProperty","getVendorPrefixedName","backfaceVisibility","hasCSSTransforms","hasCSS3DTransforms","ua","navigator","userAgent","isSafari","test","to","sortDirs","nodeById","TreeNode","uniqIDs","toValue","notResolvedNodes","fromValue","parent","toSortSet","Set","pop","sortTreeNodes","flatten","nodes","nodeA","nodeB","f","recursive","child","call","render","_vm","_c","_self","_setupProxy","_m","_v","ref","staticClass","attrs","scopedSlots","_u","fn","scope","staticStyle","_s","_e","staticRenderFns","cssClasses","tabIndex","marginCellStyle","domProps","treeToggleTemplate","_t","scrollWidth","summaryHeight","cellSlots","_l","groupHeaderClasses","rawName","visibilityCheck","visibilityCheckTimeout","expression","classObject","groupExpansionDefault","myRowHeight","messages","ii","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","getter","__esModule","definition","o","globalThis","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}