import { SelectionType } from 'types/selection.type';
import { SortType } from 'types/sort.type';
import { SortDirection } from 'types/sort-direction.type';
import { ISortPropDir } from 'types/sort-prop-dir.type';
import { TableColumn } from 'types/table-column.type';
import { Vue } from 'vue-property-decorator';
export default class DataTableHeaderCellComponent extends Vue {
    sortType: SortType;
    sortAscendingIcon: string;
    sortDescendingIcon: string;
    isTarget: boolean;
    allRowsSelected: boolean;
    selectionType: SelectionType;
    column: TableColumn;
    sorts: ISortPropDir[];
    headerHeight: number;
    sortFn: () => void;
    sortDir: SortDirection;
    myAllRowsSelected: boolean;
    sortOrder: string;
    cellContext: {
        column: TableColumn;
        sortDir: SortDirection;
        sortFn: () => void;
        allRowsSelected: boolean;
    };
    resizeObserver?: ResizeObserver;
    onAllRowsSelectedChanged(): void;
    onColumnChahged(): void;
    onColumnVisibleChahged(): void;
    onColumnFrozenLeftChahged(): void;
    onColumnFrozenRightChahged(): void;
    onSortsChanged(): void;
    created(): void;
    mounted(): void;
    beforeUpdate(): void;
    updated(): void;
    beforeDestroy(): void;
    onCheckboxChange(): void;
    get columnCssClasses(): string;
    get name(): string;
    get styles(): Record<string, string>;
    get sortCssClass(): string;
    get cssClass(): string;
    get isCheckboxable(): boolean;
    onContextmenu($event: MouseEvent): void;
    calcSortDir(sorts: ISortPropDir[]): SortDirection;
    onSort(): void;
    calcSortCssClass(sortDir: SortDirection): string;
    calcCssClass(sortDir: SortDirection): string;
    private setResizeObserver;
}
